[{"path":"https://mflores72000.github.io/qcr/articles/Authors.html","id":"dr--miguel-alfonso-flores","dir":"Articles","previous_headings":"","what":"Dr. Miguel Alfonso Flores","title":"About the authors","text":"\\(\\rule{20.5cm}{0.1cm}\\) Full-time Professor (EPN) \\(\\rule{20.5cm}{0.1cm}\\)","code":""},{"path":"https://mflores72000.github.io/qcr/articles/Authors.html","id":"biography","dir":"Articles","previous_headings":"Dr. Miguel Alfonso Flores","what":"Biography","title":"About the authors","text":"Ph.D. Statistics Operations Research, Master Statistical Techniques (University La Coruña). experience Education Higher Vocational Training, university business field Statistics & Machine Learning. Professor Probability Statistics National Polytechnic School. Member Multidisciplinary Research Group Information Systems, Technology Management Innovation (SIGTI) National Polytechnic School Group Modeling, Optimization Statistical Inference (MODES) University La Coruña.","code":""},{"path":"https://mflores72000.github.io/qcr/articles/Authors.html","id":"dr--rubén-fernandez","dir":"Articles","previous_headings":"","what":"Dr. Rubén Fernandez","title":"About the authors","text":"\\(\\rule{20.5cm}{0.1cm}\\) Associate Professor (PC-DR) \\(\\rule{20.5cm}{0.1cm}\\)","code":""},{"path":"https://mflores72000.github.io/qcr/articles/Authors.html","id":"biography-1","dir":"Articles","previous_headings":"Dr. Rubén Fernandez","what":"Biography","title":"About the authors","text":"associate professor Statistics Operations Research Department Mathematics University Coruña (Spain), member MODES research group Center Research Information Communication Technologies (CITIC). main research line nonparametric modeling spatial spatio-temporal data, field co-directed two doctoral theses. research lines Nonparametric Regression, Quality Control, Functional Data Analysis, Simulation, Bootstrap, Computational Statistics Statistical Learning. co-author 26 articles published journals indexed various databases (21 Journal Citation Reports 7 first quartile). committed open source software especially use R programming language. member RHispano community, co-author 6 R packages several open books applied statistics (Spanish), accessible web page.","code":""},{"path":"https://mflores72000.github.io/qcr/articles/Authors.html","id":"dr--salvador-naya","dir":"Articles","previous_headings":"","what":"Dr. Salvador Naya","title":"About the authors","text":"\\(\\rule{20.5cm}{0.1cm}\\) University Professor (CAT-UN) \\(\\rule{20.5cm}{0.1cm}\\)","code":""},{"path":"https://mflores72000.github.io/qcr/articles/Authors.html","id":"biography-2","dir":"Articles","previous_headings":"Dr. Salvador Naya","what":"Biography","title":"About the authors","text":"professor Statistics Operations Research University Coruña since 1994.research lines include Parametric Nonparametric Statistics, Quality Control, Survival Analysis, Functional Data Analysis, Big Data Statistical Analysis Statistical Methods Materials Science. teaching Interuniversity Master Statistical Techniques (coorganized three Galician universities), well Master Master Complex Materials, Thermal Analysis Rheology (double international degree Paris Diderot), well master Erasmus Mundus Joint Master Degree: Sustainable ship shipping 4.0 (international degree University Napoli Federico II University Zagreb) Degree Naval Architecture Ocean Engineering. researcher MODES group attached CITC research Center, University Coruña. author 130 papers. directed 7 doctoral theses participated 40 research transfer projects companies. delegate Student Advice Promotion Service (SAPE) Director Jorge Juan Catedra. president co-founder “Nerxus Quality Solutions” spin-. associate editor several scientific journals elected member International Statistical Institute (ISI). Prize “Educator Year 2013” JLM Project 2020, along 3 colleagues, winner SEIO-FBBVA Award category best applied contribution impact social field, innovation knowledge transfer field Statistics. Since March 2016, Vice Chancellor Scientific Policy, Research Transfer University Coruña.","code":""},{"path":"https://mflores72000.github.io/qcr/articles/Authors.html","id":"dr--javier-tarrio-saavedra","dir":"Articles","previous_headings":"","what":"Dr. Javier Tarrio-Saavedra","title":"About the authors","text":"\\(\\rule{20.5cm}{0.1cm}\\) Associate Professor (PC-DR) \\(\\rule{20.5cm}{0.1cm}\\)","code":""},{"path":"https://mflores72000.github.io/qcr/articles/Authors.html","id":"biography-3","dir":"Articles","previous_headings":"Dr. Javier Tarrio-Saavedra","what":"Biography","title":"About the authors","text":"Ph.D. Statistics Operations Research, Master Statistical Techniques (University La Coruña). experience Statistics, Industrial Statistics, Statistical Quality Control, Statistical Learning, Materials Science, Thermal Analysis Rheology, Bibliometry, Naval Oceanic Engineering, Industrial Engineering, Energy Efficiency, Epidemiology, Epidemiology.","code":""},{"path":"https://mflores72000.github.io/qcr/articles/CAP.html","id":"análisis-de-capacidad-de-un-proceso","dir":"Articles","previous_headings":"","what":"Análisis de capacidad de un proceso","title":"Análisis de capacidad de un proceso","text":"El análisis del capacidad de un proceso, en el caso del control de calidad se lo realiza través del cálculo de índices que permiten medir si un proceso es o capaz, relacionando las especificaciones técnicas que se debe cumplir (fijadas por el cliente ó fabricante) con la variabilidad del proceso. La interpretación de estos índices está asociada al resultado de dicha relación. Los índices de capacidad se cálculan generalmente como la razón entre la magnitud del rango de variación de las especificaciones y la variabilidad del proceso en términos de \\(\\sigma\\). En el caso de valores grandes de estos índices se tiene un proceso capaz de producir artículos que cumplen con los requerimientos del cliente. En otras palabras, cuánto más grande sea el valor que tome el índice de capacidad, más pequeña será la cantidad de productos fuera de los límites de especificación. En esta sección se describirán los índices de capacidad para procesos cuya distribución subyacente es normal y normal(exponencial, weibull, etc.), además se presenta un método gráfico para ver si un proceso, con distribución normal, se puede considerar capaz y finalmente se describen índices de capacidad para distribuciones normales.","code":""},{"path":"https://mflores72000.github.io/qcr/articles/CAP.html","id":"asumiendo-una-distribución-normal","dir":"Articles","previous_headings":"Análisis de capacidad de un proceso","what":"Asumiendo una distribución normal","title":"Análisis de capacidad de un proceso","text":"Los índices de capacidad más utilizados en la industria, analizan la capacidad del proceso bajo la suposición de que el proceso es estable y de que la característica estudiada se distribuye normalmente. En la Table~\\(\\ref{indices}\\) se describen los índices \\(C_p,C_{pk},C_{pm},C_{pmk}\\) que se obtienen partir de estos supuestos. Kerstin Vannman (1995) propone una formulación general de estos índices mediante una expresión que permite obtenerlos para distintos valores de dos nuevos parámetros negativos \\(u\\) y \\(v\\): \\[ C_p\\left( u,v\\right)= \\frac{d-u\\vert \\mu - m\\vert}{3\\sqrt{\\sigma^2+v\\left( \\mu - T\\right)^2}}\\] Esta nueva expresión permite obtener los índices de Table~\\(\\ref{indices}\\), sin más que considerar valores de 0 y 1 para \\(u\\) y \\(v\\): \\(C_p\\left( 0, 0\\right) = C_p\\), \\(C_p\\left( 1, 0\\right) = C_{pk}\\), \\(C_p\\left( 0, 1\\right) = C_{pm}\\), \\(C_p\\left( 1, 1\\right) = C_{pmk}\\).","code":"data(pistonrings)  xbar <- qcs.xbar(pistonrings[1:125,],plot = TRUE) mu <-xbar$center std.dev <-xbar$std.dev LSL=73.99; USL=74.01 qcs.cp(parameters = c(0,0),limits = c(LSL,USL),        mu = mu,std.dev = std.dev,ylim=c(0,1), contour = FALSE) #>     Cp  delta  gamma  #> 0.3407 0.1176 0.9785 qcs.cp(object = xbar,parameters = c(0,0), limits = c(LSL,USL),ylim=c(0,1), contour = FALSE) #>     Cp  delta  gamma  #> 0.3407 0.1176 0.9785 qcs.cp(object = xbar,parameters = c(1,0), limits = c(LSL,USL),ylim=c(0,1), contour = FALSE) #>    Cpk  delta  gamma  #> 0.3006 0.1176 0.9785 qcs.cp(object = xbar,parameters = c(0,1), limits = c(LSL,USL),ylim=c(0,1), contour = FALSE) #>    Cpm  delta  gamma  #> 0.3382 0.1176 0.9785 qcs.cp(object = xbar,parameters = c(1,1), limits = c(LSL,USL),ylim=c(0,1), contour = FALSE) #>   Cpmk  delta  gamma  #> 0.2984 0.1176 0.9785"},{"path":"https://mflores72000.github.io/qcr/articles/CAP.html","id":"gráfico-de-la-capacidad-del-proceso","dir":"Articles","previous_headings":"Análisis de capacidad de un proceso > Asumiendo una distribución normal","what":"Gráfico de la capacidad del proceso","title":"Análisis de capacidad de un proceso","text":"Deleryd y Vannman (1999) y Vannman (2001), (2006) propusieron un método gráfico basado en los índices de capacidad para analizar la capacidad de un proceso. La ventaja de usar este tipo de gráficos, comparado con utilizar sólo el índice de capacidad, es que los gráficos proporcionan información visual instantáneamente: información sobre la localización y variación de la característica estudiada del proceso e información sobre la capacidad del proceso. Un proceso se dice que es capaz si el índice de capacidad del proceso excede un cierto valor k, donde k > 1. Algunos de los valores de k que más se usan son k = 1, k = 4/3, o k = 5/3. Se supondrá que el valor del target coincide con el centro del intervalo de especificación, es decir, \\(T = \\frac{\\left( USL + LSL\\right)}{2} = m\\). Entonces, se utilizará uno de los índices definidos por la familia \\(C_p\\left( u,v\\right)\\) por ejemplo, \\(C_{pk}\\) o \\(C_{pm}\\) y se definirá el proceso como capaz si \\(C_p\\left( u, v\\right) > k\\), dados los valores de u, v, y k. Notemos de nuevo que si \\(\\mu = T\\), todos los índices \\(C_p\\left( u, v\\right)\\), se reducen al mismo,\\(C_p\\). Diferentes elecciones de u, v, y k imponen diferentes restricciones en los parámetros del proceso \\(\\left( \\mu, \\sigma \\right)\\). Esto se puede ver f´acilmente en un gr´afico de capacidades. Este gráfico es simplemente un gráfico de contorno de \\(C_p\\left( u, v\\right) = k\\) como una función de \\(\\mu\\) y \\(\\sigma\\), o como una función de \\(\\delta\\) y \\(\\gamma\\), donde \\(\\delta = \\frac{\\mu - T}{d}\\) y \\(\\gamma = \\frac{\\sigma}{d}\\). La línea de contorno se obtiene reescribiento el índice \\(C_p\\left( u,v\\right)\\) como una función de \\(\\delta\\) y \\(\\gamma\\), resolviendo la ecuación \\(C_p\\left( u,v\\right) = k\\) con respecto \\(\\gamma\\), y graficando \\(\\gamma\\) como una función de \\(delta\\). Se obtiene: \\[ \\gamma = \\sqrt{\\frac{\\left( 1-u\\vert\\delta\\vert\\right)}{9k^2}-v\\delta^2}, \\; \\vert\\delta\\vert \\leq \\frac{1}{u+3k\\sqrt{v}}, \\; \\left( u,v\\right) \\neq \\left(0,0 \\right). \\] Cuando \\(u = v = 0\\), es decir, cuando consideramos el índice \\(C_p = k\\), tenemos \\(\\gamma = \\frac{1}{3k}, \\; \\vert\\delta\\vert \\leq 1\\). Valores de los parámetros \\(\\mu\\) y \\(\\sigma\\) que proporcionen valores \\(\\left( \\delta,\\gamma\\right)\\) dentro de la región acotada por la línea de contorno \\(C_p\\left(u, v\\right) = k\\) y el eje \\(\\delta\\) proporcionarán un valor \\(C_p\\left(u, v\\right)\\) más grande que k, es decir, un proceso capaz. Además valores de \\(\\mu\\) y \\(\\sigma\\) que proporcionen valores \\(\\left( \\delta,\\gamma\\right)\\) fuera de esta región proporcionarán un valor \\(C_p\\left(u, v\\right)\\) más pequeño que k, es decir, un proceso capaz. En el caso que el proceso es capaz, este tipo de gráfico es muy útil para entender si es la variabilidad, la desviación del target o ambas cosas las que se necesitan reducir para mejorar la capacidad.","code":"data(pistonrings)  xbar <- qcs.xbar(pistonrings[1:125,],plot = TRUE) mu <-xbar$center std.dev <-xbar$std.dev LSL=73.99; USL=74.01 qcs.cp(parameters = c(0,0),limits = c(LSL,USL),        mu = mu,std.dev = std.dev,ylim=c(0,1)) #>     Cp  delta  gamma  #> 0.3407 0.1176 0.9785 qcs.cp(object = xbar,parameters = c(0,0), limits = c(LSL,USL),ylim=c(0,1)) #>     Cp  delta  gamma  #> 0.3407 0.1176 0.9785 qcs.cp(object = xbar,parameters = c(1,0), limits = c(LSL,USL),ylim=c(0,1)) #>    Cpk  delta  gamma  #> 0.3006 0.1176 0.9785 qcs.cp(object = xbar,parameters = c(0,1), limits = c(LSL,USL),ylim=c(0,1)) #>    Cpm  delta  gamma  #> 0.3382 0.1176 0.9785 qcs.cp(object = xbar,parameters = c(1,1), limits = c(LSL,USL),ylim=c(0,1)) #>   Cpmk  delta  gamma  #> 0.2984 0.1176 0.9785"},{"path":"https://mflores72000.github.io/qcr/articles/CAP.html","id":"gráfico-de-la-capacidad-del-proceso-estimado","dir":"Articles","previous_headings":"Análisis de capacidad de un proceso > Asumiendo una distribución normal","what":"Gráfico de la capacidad del proceso estimado","title":"Análisis de capacidad de un proceso","text":"En la práctica los parámetros del proceso son desconocidos y necesitamos estimarlos. Podemos establecer entonces, una regla de decisión basada en los estadísticos muestrales y un gráfico de capacidad del proceso estimado, para usarla para decidir si un proceso se puede considerar capaz o , cuando \\(\\mu\\) y \\(\\sigma\\) son desconocidas y necesitamos estimarlas por: \\[\\hat{\\mu}=\\bar{x}=\\frac{1}{n}\\sum_{=1}^n{X_i} \\; y \\;  \\hat{\\sigma}^2=\\frac{1}{n}\\sum_{=1}^n{X_i-\\bar{X}}\\] que son los estimadores de máxima verosimilitud en el caso en el que la característica estudiada del proceso se distribuye normalmente; y sea \\(X_1,X_2,\\dots,X_n\\) una muestra aleatoria simple de una distribución normal con media \\(\\mu\\) y varianza \\(\\sigma^2\\). En el paquete sólo se usa el índice \\(C_{pm}\\) para definir la región de capacidad. Para el caso general, ver Vannman (2001). Para obtener una regla de decisión apropiada se considerará el test de hipótesis con hipótesis nula \\(H_0 : C_{pm} \\leq k_0\\) e hipótesis alternativa \\(H_1 : C_{pm} > k_0\\). Como estadístico de contraste se utiliza el estimador \\(\\hat{C_{pm}}\\), el cual se obtiene estimando \\(\\mu\\) y \\(\\sigma\\) La hipótesis nula se rechazará si \\(\\hat{C}_{pm} > c_{\\alpha}\\), donde la constante \\(c_{\\alpha}\\) está determinada de modo que el nivel de significación del test sea \\(\\alpha\\). Vannman (2001) demostró que la hipótesis nula \\(H_0 : C_{pm} \\leq k_0\\) puede reducirse \\(H_0 : C_{pm} = k_0\\). La regla de decisión que se usa consiste en que, para valores dados de \\(\\alpha\\) y n, el proceso se considerará capaz si \\(\\hat{C}_{pm} > c_{\\alpha}\\), donde \\(c_{\\alpha} > k_0\\). Hubele y Vannman (2004) demostraron que, cuando se usa el índice \\(C_{pm}\\) el valor crítico para un nivel de significación \\(\\alpha\\) se obtiene como \\(c_{\\alpha}=k_0\\sqrt{\\frac{n}{\\chi^2_{\\alpha,n}}}\\), donde \\(\\chi^2_{\\alpha,n}\\) es el cuantil \\(\\alpha\\) de una distibución \\(\\chi^2\\) con n grados de libertad.","code":"data(pistonrings)  xbar <- qcs.xbar(pistonrings[1:125,],plot = TRUE) mu <-xbar$center std.dev <-xbar$std.dev LSL=73.99; USL=74.01 qcs.hat.cpm(limits = c(LSL,USL),             mu = mu,std.dev = std.dev,ylim=c(0,1)) qcs.hat.cpm(object = xbar, limits = c(LSL,USL),ylim=c(0,1))"},{"path":"https://mflores72000.github.io/qcr/articles/CAP.html","id":"non-normal-parametric-process-capability-analysis","dir":"Articles","previous_headings":"Análisis de capacidad de un proceso","what":"Non Normal parametric process capability analysis","title":"Análisis de capacidad de un proceso","text":"En el documento correspondiente ISO 21747 (2006), se definen los siguientes índices:","code":"data(pistonrings)  xbar <- qcs.xbar(pistonrings[1:125,],plot = TRUE) limits = c(lsl = 73.99, usl = 74.01) qcs.pcr(xbar, \"normal\", limits = limits) #>  #> Process Capability Analysis #>  #> Call: #> qcs.pcr(object = xbar, distribution = \"normal\", limits = limits) #>  #> Number of obs = 125          Target = 74 #>        Center =  74               LSL =  73.99 #>        StdDev =  0.009785         USL =  74.01 #>  #> Capability indices: #>  #>        Value #> Cp    0.3407 #> Cp_l  0.3807 #> Cp_u  0.3006 #> Cp_k  0.3006 #>  #>  #> PPM: #>  #>          Exp<LSL 1.267e+05       Obs<LSL 0 #>          Exp>USL 1.836e+05       Obs>USL 1e+12 #>        Exp Total 3.103e+05     Obs Total 1e+12 #>  #> Test: #>  #>  #>  Anderson Darling Test for normal distribution #>  #> data:  x  #> A = 0.1399, mean = 74.001, sd = 0.005, p-value = 0.9694 #> alternative hypothesis: true distribution is not equal to normal qcs.pcr(xbar, \"weibull\", limits = limits) #>  #> Process Capability Analysis #>  #> Call: #> qcs.pcr(object = xbar, distribution = \"weibull\", limits = limits) #>  #> Number of obs = 125          Target = 74 #>        Center =  74               LSL =  73.99 #>        StdDev =  0.009785         USL =  74.01 #>  #> Capability indices: #>  #>        Value #> Cp    0.5801 #> Cp_l  0.4861 #> Cp_u  0.8402 #> Cp_k  0.4861 #>  #>  #> PPM: #>  #>          Exp<LSL 3.283e+04       Obs<LSL 0 #>          Exp>USL 9965            Obs>USL 1e+12 #>        Exp Total 4.279e+04     Obs Total 1e+12 #>  #> Test: #>  #>  #>  Anderson Darling Test for weibull distribution #>  #> data:  x  #> A = 0.7297, shape = 18232.755, scale = 74.004, p-value <= 0.05 #> alternative hypothesis: true distribution is not equal to weibull"},{"path":"https://mflores72000.github.io/qcr/articles/CAP.html","id":"análisis-de-capacidad-no-paramétrico","dir":"Articles","previous_headings":"Análisis de capacidad de un proceso","what":"Análisis de capacidad no paramétrico","title":"Análisis de capacidad de un proceso","text":"Las hipótesis tradicionales sobre los datos como la normalidad o la independencia son frecuentemente violadas en muchas situaciones reales. Así, en escenarios en los que los supuestos de normalidad se verifican, los índices definidos en las secciones anteriores son válidos. Pearn y Chen (1997) y Tong y Chen (1998) propusieron generalizaciones de \\(C_p\\left(u, v\\right)\\) para el caso de distribuciones arbitrarias de los datos: \\[ C_{Np}\\left( u,v\\right)= \\frac{d-u\\vert M - m\\vert}{3\\sqrt{\\left(\\frac{F_{99.865}-F_{0.135}}{6} \\right)^2+v\\left( M - T\\right)^2}}\\] donde \\(F_{\\alpha}\\) el correspondiente percentil (100 \\(\\alpha\\))% de la distribución y M la mediana del proceso. Pearn y Chen, propusieron el siguiente estimador: \\[ \\hat{C}_{Np}\\left( u,v\\right)= \\frac{d-u\\vert \\hat{M} - m\\vert}{3\\sqrt{\\left(\\frac{U_p-L_p}{6} \\right)^2+v\\left( \\hat{M} - T\\right)^2}}\\] donde \\(U_p\\) es un estimador para \\(F_{99.865}\\), \\(L_p\\) es un estimador para \\(F_{99.865}\\) y \\(\\hat{M}\\) es un estimador para M, y sus estimaciones se pueden obtener utilizando las tablas desarrolladas por Gruska et al. (1989). Sin embargo la distribución del proceso subyacente es siempre desconocida. Chang y Lu (1994) calcularon estimaciones para \\(F_{99.865}\\), \\(F_{99.865}\\) y M basándose en los percentiles muestrales en vez de en las tablas de Gruska et al. (1989). Se tiene así el estimador: \\[ \\hat{C}_{Np}\\left( u,v\\right)= \\frac{d-u\\vert \\hat{M} - m\\vert}{3\\sqrt{\\left(\\frac{\\hat{F}_{99.865}-\\hat{F}_{0.135}}{6} \\right)^2+v\\left( \\hat{M} - T\\right)^2}}\\]","code":"xbar <- qcs.xbar(pistonrings[1:125,],plot = TRUE) x<-xbar$statistics[[1]] LSL=73.99; USL=74.01 median <-median(x) lq=as.numeric(quantile(x,probs=0.00135)) uq=as.numeric(quantile(x,probs=0.99865)) qcs.cpn(parameters = c(0,0),limits = c(LSL,USL),         median = median, q=c(lq,uq)) #>    CNp  #> 1.0082 qcs.cpn(object = xbar,parameters = c(0,0), limits = c(LSL,USL)) #>    CNp  #> 1.0082 qcs.cpn(object = xbar,parameters = c(1,0), limits = c(LSL,USL)) #>   CNpk  #> 0.9275 qcs.cpn(object = xbar,parameters = c(0,1), limits = c(LSL,USL)) #>   CNpm  #> 0.9799 qcs.cpn(object = xbar,parameters = c(1,1), limits = c(LSL,USL)) #>  CNpmk  #> 0.9015"},{"path":"https://mflores72000.github.io/qcr/articles/CAP.html","id":"un-análisis-completo-del-proceso","dir":"Articles","previous_headings":"Análisis de capacidad de un proceso","what":"Un análisis completo del proceso","title":"Análisis de capacidad de un proceso","text":"","code":"data(pistonrings)  xbar <- qcs.xbar(pistonrings[1:125,],plot = TRUE) LSL=73.99; USL=74.01 limits = c(lsl = 73.99, usl = 74.01) qcs.ca(xbar, limits = limits) #>  #> Process Capability Analysis #>  #> Call: #> qcs.ca(object = xbar, limits = limits) #>  #> Number of obs = 125          Target = 74 #>        Center =  74               LSL =  73.99 #>        StdDev =  0.009785         USL =  74.01 #>  #> Paremetric Capability indices: #>  #>        Value    0.1%   99.9% #> Cp    0.3407  0.2771  0.4065 #> Cp_l  0.3807  0.2739  0.4875 #> Cp_u  0.3006  0.2021  0.3991 #> Cp_k  0.3006  0.1944  0.4068 #> Cpm   0.3382  0.2749  0.4038 #>  #>  #> Non parametric Capability indices: #>  #>         Value #> CNp    1.0082 #> CNpK   0.9275 #> CNpm   0.9799 #> CNpmk  0.9015 #>  #>  #> PPM: #>  #>          Exp<LSL 1.267e+07       Obs<LSL 0 #>          Exp>USL 1.836e+07       Obs>USL 8e+05 #>        Exp Total 3.103e+07     Obs Total 8e+05 #>  #> Test: #>  #>  #>  Anderson Darling Test for normal distribution #>  #> data:  xbar  #> A = 0.1399, mean = 74.001, sd = 0.005, p-value = 0.9694 #> alternative hypothesis: true distribution is not equal to normal"},{"path":[]},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"English Material","text":"Throughout last decades, increasing interest measure, improve control quality products, services procedures. connected strong relationship quality, productivity, prestige, trust brand image. fact, implementing procedures statistical quality control (SQC) currently related increasing companies’ competitiveness. concept quality control extended first definitions based idea adjusting production, standard model satisfy customer requirements include participants. Nowadays, SQC applied manufactured products industrial service processes. use diferent SQC techniques standarized development Six Sigma method Motorola 1997 . Six Sigma methodology even philosophy focused variability reduction promotes use statistical methods tools order improve processes industry services. Six Sigma’s goal reach maximum 3.4 defects per million events opportunities (DPMO) meeting customer requirements. Six Sigma application composed five stages: Define, Measure, Analyze, Improve, Control (DEMAIC). Six Sigma methodology indicates technique apply stage improvement process. Figure \\(\\ref{imagen1}\\) shows representative statistical techniques applied Six Sigma stages. two representative statistical tools SQC control charts process capabity analysis . Therefore, proposed qcr package developed order provide users exhaustive, comprehensive free set programming tools apply control charts perform capability analysis SQC framework.   control stage characterized use tools based anomaly detection correction . representative techniques stage primary tool Statistical Process Control (SPC) control charts . developed evaluate process performance time. use control charts prevents process getting control, helping detect assignable causes corresponding variations critical--quality features (CTQs), thus performing process changes actually required. Furthermore, control charts provide estimates natural range process variation (natural control limits), allowing us compare range limits specified standards, company managers customers (specification limits). Hence, process monitoring can carried comparing new observation natural limits, preventing defects final product. Briefly, control chart two dimensional graph whose axis represents variable attribute monitored (CTQ variables). introduced Shewhart 1924 Bell laboratories. estimation natural control limits CTQ variables developed process composed two phases: Phase , natural control limits estimated using preliminary sample (calibration sample) assume causes variation random. Phase II, new observation plotted control chart along natural limits obtained previous step. set new observations (twhich used calculate natural control limits) make -called monitoring sample. Patterns, observations control limits, runs six observations one side central line, among others, diferent criteria identify control states specific process, providing also valuable information detection assignable causes variation monitoring.   \\(~~~~~~\\)used control charts based assumptions normality independence studied CTQ variables. charts used control position dispersion CTQ attributes variables. Figure \\(\\ref{f2}\\) shows important types control charts. can classified according type feature controlled (attribute variable), variable dimension (univariate multivariate), assuming parametric 65 distribution variable (parametric nonparametric).  qcr package provides charts mean (\\(\\bar{x}\\)), standard deviation (\\(s\\)), range (\\(R\\)), individual measurements (\\(\\)), moving ranges (\\(MR\\)), proportion nonconforming units (\\(p\\)), number nonconforming units (\\(np\\)), number defects per unit (\\(c\\)), mean number defects per control unit (\\(u\\)), exponentially weighted moving average (EWMA), cumulative sum control chart (CUSUM). last two techniques also called memory control charts specially designed detect shifts less two standard deviations, using rational samples individual measurements. hand, new control charts based concept data depth developed implemented qcr. \\(r, Q\\) \\(S\\) control charts, nonparametric alternatives individual measurements, mean control chart CUSUM control chart, respectively. one variable defines process quality, multivariate control charts applied. Gaussian assumption met, Hotelling T\\(^2\\) control chart can applied. want detect small deviations, multivariate EWMA (MEWMA) multivariate CUSUM (MCUSUM) can implemented. parametric distribution assumed, \\(r, Q\\) \\(S\\) charts can used.  Another interesting SQC tool, useful industry, Process Capability Analysis (PCA). estimates well process meets tolerances defined company, customers, standards, etc., comparing specification tolerances respect natural range variation CTQ features. process capability measured using capability indicators, Process Capability Ratio (PCR) numerical score helps manufacturers know whether output process meets engineering specifications. Large PCR values show industrial service process capable meeting customer requirements. many diferent PCRs developed last four decades require Gaussian assumption CTQ variable . many processes industry real applications meet hypothesis, thus innacuratelly estimate capability using PCR, hence many authors studied diferent nonparametric alternatives traditional PCR .  qcr package developed R 90 GNU license. Nowadays R packages currently provide quality control tools users. use one shown Figure \\(\\ref{f3}\\). qcc package developed Professor Luca Scrucca Department Economics, Finance Statistics University Perugia. enables us perform Shewhart quality control charts variables attributes, well CUSUM EWMA charts detecting small changes CTQ variable. Multivariate analysis performed applying Hotelling T\\(^2\\) control chart. Additionally, functions implemented obtain operating characteristic curves (OC) estimate process capability analysis indices. Pareto Ishikawa diagrams also implemented. Otherwise, IQCC package maintained Professor Emanuel P. Barbosa Institute Mathematics State University Campinas. smaller number control charts implemented incorporates multivariate graphics. qualityTools package developed aid learning quality sciences. Figure \\(\\ref{f3}\\) shows utilities, e.g. capability analysis (providing comprehensive set parametric distributions) design experiments. addition, SixSigma library provides alternative functions qualityTools qcc packages, possibility 104 implementing process maps.  \\(~~~~~~\\)Furthermore, libraries specifically focused control chart applications. Namely, spcadjust allows us estimate calibration control limits Shewhart, CUSUM EWMA control charts, spc provides tools evaluation EWMA, CUSUM Shiryaev-Roberts control charts using Average Run Length RL quantiles criteria. Moreover, MSQC package set tools multivariate process control, mainly control charts. contains main alternatives multivariate control charts Hotelling (T\\(^2\\)), Chi squared, MEWMA, MCUSUM Generalized Variance control charts. also includes tools evaluate multivariate normal assumption. corresponding multivariate capability analysis can performed using MPCI library provides diferent multivariate capability indices. also interesting mention edcc package ecomomic design control charts minimizing expected cost per hour studied process.   \\(~~~~~~\\)article, new qcr library, implements great deal statistical tools quality control, presented. aim provide scientific community quality assurance users computer application allows simple eficient handling statistical tools quality control, fundamental techniques Six Sigma methodology: control charts variables attributes, capability analysis. important emphasize qcr package also includes new applications nonparametric approaches control charts capability indices, currently unavailable R software.","code":""},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"datasets-in-the-qcr-package","dir":"Articles","previous_headings":"","what":"Datasets in the qcr package","title":"English Material","text":"qcr package contains new databases (see table \\(\\ref{t1}\\)) based study cases tackled authors professional activity well well-known datasets implemented packages focused statistical quality control : archery1: consists stage archer shoots 72 arrows. information given x y coordinates. implemented MSQC package (Santos-Fernandez ). circuit: Number nonconformities observed 26 successive samples 100 printed circuit boards. implemented qcc package (Scrucca ). dowel1: Diameter length dowel pin. implemented MSQC package (Santos-Fernandez ). orangejuice: Frozen concentrated orange juice packed 6-oz cartons. cartons formed machine spinning cardboard stock attaching metal bottom panel. can inspected determine whether, filled, liquid possibly leak either side seam around bottom joint. occurs can considered nonconforming. data collected 30 samples 50 cans half-hour intervals three-shift period machine continuous operation. implemented qcc package (Scrucca ). pcmanufact: personal computer manufacturer counts number nonconformities per unit final assembly line. collects data 20 samples 5 computers . implemented qcc package (Scrucca ). pistonrings: Piston rings automotive engine produced forging process. inside diameter rings manufactured process measured 25 samples, size 5, drawn process considered ‘control’. implemented qcc package (Scrucca ).","code":""},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"univariate-statistical-quality-control-with-shewhart-control-charts","dir":"Articles","previous_headings":"","what":"Univariate statistical quality control with Shewhart control charts","title":"English Material","text":"\\(~~~~~~\\)control chart useful tool statistical process control monitoring controlling manufacturing processes . -line process control technique used detecting occurrence significant process mean (variability) change , accordingly, calling corrective action. construction control chart equivalent plotting acceptance regions sequence hypothesis tests time. Namely, \\(\\bar{x}\\) chart control chart used monitor process mean \\(\\mu\\). plots sample means, \\(\\bar{X}\\)’s, corresponding subgroups \\(\\{X_1,X_2, \\ldots\\}\\) observations equivalent test hypotheses \\(H_0 : \\mu = \\mu_0\\) versus \\(H_{\\alpha} : \\mu \\neq \\mu0\\) (target value \\(\\mu_0\\)) conducted time, using \\(\\bar{x}\\) test statistic. assume \\(\\{X_1,X_2, \\ldots\\}\\) sample measurements particular CTQ feature follows \\(F\\) distribution mean \\(\\mu\\) standard deviation \\(\\sigma\\). insuficient evidence reject \\(H_0\\), can state process control; otherwise, process control. words, processes control sources variation sources common process . decision reject \\(H_0\\) based value sample mean \\(\\bar{x}\\) observed time interval . control charts easy construct, visualize, interpret, important, proven efectiveness practice since 1920’s.","code":""},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"definition-of-univariate-quality-control-objects-and-statistics","dir":"Articles","previous_headings":"Univariate statistical quality control with Shewhart control charts","what":"Definition of univariate quality control objects and statistics","title":"English Material","text":"\\(~~~~~~\\)Control charts defined, one hand, center line represents average value CTQ feature corresponding -control state , hand, two horizontal lines, called upper control limit (UCL) lower control limit (LCL). region control limits corresponds region \\(H_0\\) rejected (defined previous section). consequence, process control observed rational sample individual measurement falls outside limits. suggests studied process may afected special assignable causes, common ones. Even although observations (rational samples individual measurements) inside control limits, process control points represent control chart follow systematic patterns. Consequently, diferent methods Western Electric rules developed order identify sequences non random patterns control chart, therefore helping detect control states . conclussion, control charts useful tool detect shifts respect probability distribution defines state control (characterizes quality level) process, whenever using proper estimated control limits.   \\(~~~~~~\\)Let \\(w\\) sample statistic measures quality characteristic interest, suppose mean \\(w\\) \\(\\mu_w\\) standard deviation \\(w\\) \\(\\sigma_w\\). center line, upper control limit, lower control limit become: \\[\\begin{align*} \\mbox{UCL} & = \\mu_{w}+ L\\sigma_{w}\\\\ \\mbox{CL} & = \\mu_{w}\\\\ \\mbox{LCL} & = \\mu_{w}- L\\sigma_{w} \\end{align*}\\] \\(L\\) “distance” control limits center line, expressed standard deviation units. designing control chart, sample size sampling frequency must specified. Small shifts process detected much easier large samples measured. Taking large samples desirable situation, feasible many cases either economic point view characteristics process studied. Average Run Length (ARL) allows us choose rational sample size sampling frequency. defined number rational samples , average, necessary monitor plot control chart control state identified. observations obtained CTQ feature process correlated, ARL can estimated using Shewhart control charts expression \\[\\begin{align*} \\mbox{ARL} & = \\frac{1}{p} \\end{align*}\\] \\(p\\) probability point exceed natural control limits. performance control charts can evaluated using equation, although sometimes recommended express control chart performance terms Average Time Signal (ATS), defined \\[\\begin{align*} \\mbox{ATS} & = \\mbox{ARL}\\times h\\\\ \\end{align*}\\] whereby \\(h\\) fixed time interval samples taken. functions compute quality control statistics diferent univariate control charts (involving continuous, attribute count data) shown Table \\(\\ref{t2}\\). details given following sections.","code":""},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"statistical-quality-control-with-shewhart-control-charts","dir":"Articles","previous_headings":"Univariate statistical quality control with Shewhart control charts","what":"Statistical quality control with Shewhart control charts","title":"English Material","text":"Control charts can also divided two categories. CTQ feature specific process can take infinite number values continuous interval, called variable, corresponding charts named control charts variables. Otherwise, CTQ feature measured continuous scale, namely can tag unit product either conforming nonconforming basis whether possesses certain attributes, alternatively may count number nonconformities (defects) appearing unit product, talking attributes attribute control charts.  order illustrate use qcr package, control charts variables attributes plotted, construction control limits specified section. first steps loading package dataset  R> library(\"qcr\") R> data(\"pistonrings\")  pistorings data frame consists 200 observations measured 25 samples one size 5.","code":""},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"control-charts-for-x-bar-r-and-s","dir":"Articles","previous_headings":"Univariate statistical quality control with Shewhart control charts > Statistical quality control with Shewhart control charts","what":"Control charts for X-bar, R and S","title":"English Material","text":"working CTQ variables, monitoring mean variability necessary. Hence, \\(\\bar{x}\\) chart used control process mean process variability can monitored control chart range, called R control chart. Taking account control limits \\(\\bar{x}\\) chart depend process variability estimation, recommended develop R chart advance. assessing process control terms variability, estimates can used obtain natural control limits \\(\\bar{x}\\) chart reliable way. Supposing \\(= 1, \\ldots, k\\) rational samples size \\(n\\) avaliable, let \\(R_i\\) range \\(\\)th sample. center line control limits R chart follows: \\[\\begin{align*} \\mbox{LCL} & = D_3R\\\\ \\mbox{CL} & = R\\\\ \\mbox{UCL} & = D_4R \\end{align*}\\] whereby \\(D_4\\) \\(D_3\\) constants tabulated diferent values \\(n\\) , \\(\\bar{R}=\\frac{1}{k}\\sum_{}R_i\\) average \\(k\\) ranges. R, control limits, well center line, computed using qcs.R() function, resulting object may printed using summary function R> x <- droplevels(pistonrings[1:125, ]) R> res.qcs <- qcs.R(x, data.name = \"pistonrings\", std.dev = \"UWAVE-R\") R> summary(res.qcs) corresponding chart can generated plot() method R> plot(res.qcs, title = \"Control chart pistonrings: R\") (see Figure \\(\\ref{f4}\\)). patterns, runs, samples natural control limits, process assumed control terms variability. variability controled, \\(\\sigma\\) can estimated using unbiased estimator \\(\\hat{\\sigma}=\\frac{1}{d_2}\\bar{R}\\), \\(d_2\\) constant tabulated various sample sizes . Consequently, process mean can controled \\(\\bar{x}\\) chart, considering \\(3\\sigma\\) control limits  \\[\\begin{align*} \\mbox{LCL} & = \\bar{x} - \\frac{3}{\\sqrt{n}d_2}\\bar{R}=\\bar{x}-A_2\\bar{R}\\\\ \\mbox{CL} & = \\bar{x} \\\\ \\mbox{UCL} & = \\bar{x} + \\frac{3}{\\sqrt{n}d_2}\\bar{R}=\\bar{x}+A_2\\bar{R} \\end{align*}\\] \\(\\bar{x}=\\frac{1}{k}\\sum_{}\\bar{x_i}\\) global mean. null hypothesis process control tested assessing \\(\\bar{x_i}\\) within interval \\([LCL,UCL]\\). Assuming measured variable Gaussian process control, probability point within natural control limits 0.9973. R, function qcs.xbar() can applied compute center line control limits using range estimating theoretical standard deviation. corresponding chart can generated plot() method R> res.qcs <- qcs.xbar(x, data.name = \"pistonrings\", std.dev = \"UWAVE-R\") R> plot(res.qcs, title = expression(paste(\"Control chart pistonrings: \",+ bar(x)))) (see Figure \\(\\ref{f5}\\)). shown, evidence indicates process control.  process standard deviation can also estimated using sample standard deviation instead sample range. leads control charts \\(\\bar{x}\\) \\(s\\), \\(s\\) sample standard deviation, apply s control chart instead R chart, whose center line control limits \\[\\begin{align*} \\mbox{LCL} & = B_3\\bar{s}\\\\ \\mbox{CL} & = \\bar{s} \\\\ \\mbox{UCL} & = B_4\\bar{s} \\end{align*}\\] whereby \\(B_3\\) \\(B_4\\) tabulated constants depend \\(n\\) , \\(\\bar{s}=\\frac{1}{k}\\sum_{}s_i\\) average \\(k\\) standard deviations. purpose, qcs.S function can used R. case, assuming variability controlled, \\(\\sigma\\) estimated using unbiased estimator \\(\\hat{\\sigma}=\\frac{1}{c_4}\\bar{s}\\). \\(3\\sigma\\) natural control limits monitoring process mean \\[\\begin{align*} \\mbox{LCL} & = \\bar{x} - \\frac{3}{\\sqrt{n}c_4}\\bar{s}=\\bar{x}-A_3\\bar{s}\\\\ \\mbox{CL} & = \\bar{x} \\\\ \\mbox{UCL} & = \\bar{x} + \\frac{3}{\\sqrt{n}c_4}\\bar{s}=\\bar{x}+A_3\\bar{s} \\end{align*}\\] also can programmed R using qcs.xbar() function, specifying std.dev = \"UWAVE-SD\" use sample standard deviation.","code":"#> R chart for pistonrings  #>  #> Summary of group statistics: #>        R           #>  Min.   :0.00800   #>  1st Qu.:0.01800   #>  Median :0.02100   #>  Mean   :0.02276   #>  3rd Qu.:0.02600   #>  Max.   :0.03900   #>  #> Group sample size:  5 #> Number of groups:  25 #> Center of group statistics:  0.02276 #> Standard deviation:  0.009785039  #>  #> Control limits:  #>  LCL        UCL #>    0 0.04812533 #>  #> Number beyond limits: 0  #>  #> Number violationg runs: 0"},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"p-and-np-control-charts","dir":"Articles","previous_headings":"Univariate statistical quality control with Shewhart control charts > Statistical quality control with Shewhart control charts","what":"p and np control charts","title":"English Material","text":"\\(p\\) \\(np\\) charts representative types atribute control charts. \\(k\\) random samples \\(n\\) items avaliable, denoting \\(X_i\\) number defective items sample, assuming item nonconforming probability \\(p\\) also items successively produced independent, nonconfomities follow binomial distribution mean \\(np\\) standard deviation \\(\\sqrt{np(1\\mbox{-}p)}\\). Alternatively, sample nonconforming item fraction \\(\\hat{p}_i =\\frac{X_i}{n}\\) mean \\(p\\) standard deviation \\(\\sqrt{p(1\\mbox{-}p)/n}\\). cases asymptotic distribution normal, center line control limits Shewhart chart can worked . \\(p\\) control chart, given \\[\\begin{align*} \\mbox{LCL} & = \\bar{p} - 3\\sqrt{\\frac{\\bar{p}(1-\\bar{p})}{n}}\\\\ \\mbox{CL} & = \\bar{p} \\\\ \\mbox{UCL} & = \\bar{p} + 3\\sqrt{\\frac{\\bar{p}(1-\\bar{p})}{n}} \\end{align*}\\] \\(\\bar{p}=\\frac{1}{k}\\sum_{}p_i\\) estimate unknown propability \\(p\\). illustrate computation n control charts, orangejuice dataset (described Section 1) considered. qcs.p() function can used compute statistics required \\(p\\) chart. can directly applied data R> data(\"orangejuice\") R> res.qcs <- qcs.p(orangejuice[orangejuice$trial, 1:2], + \\(~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\)sizes = orangejuice$size[orangejuice$trial]) alternatively, qcd object (quality control data) created first R> datos.qcd <- qcd(data = orangejuice[orangejuice$trial, ], var.index = 1, \\(~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\)+ sample.index = 2, sizes = orangejuice$size, type.data = \"atributte\") R> res.qcs <- qcs.p(datos.qcd) R> plot(res.qcs, title = \"Control chart orangejuice: p\")  resulting chart shown Figure \\(\\ref{f6}\\). Samples 6 20 outside control limits removed control limit calculations since assignable causes found. Namely, sample 6 examined inexperienced inspector overlooked several types nonconformities. addition, large number nonconformities sample 20 due problem temperature control welding machine .  objective analyze average number nonconformities rather proportion, \\(np\\) charts can used. statistics chart can computed R qcs.np() function. alternatives perform control attributes \\(c\\) \\(u\\) charts, based Poisson distribution. \\(c\\) chart controls total number defects per unit, whereas \\(u\\) chart controls average number nonconformities per unit. can computed qcr package shown .","code":""},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"cusum-chart","dir":"Articles","previous_headings":"Univariate statistical quality control with Shewhart control charts > Statistical quality control with Shewhart control charts","what":"CUSUM chart","title":"English Material","text":"Cumulative sum control charts (CUSUM), proposed monitor process mean, may now developed individual observations averages rational subgroups. use specially recommended identify changes less \\(2\\sigma\\). \\(s_r\\) statistic used determine whether process control . defined \\[\\begin{align*} s_r=\\displaystyle\\sum_{=1}^{r}(\\bar{x}_1-\\mu_0) \\end{align*}\\] whereby \\(\\mu_0\\) target process mean. Gaussian assumption, center line control limits chart can deduced \\(s_r\\sim N\\left(r(\\mu-\\mu_0),\\frac{r\\sigma_{0}^{2}}{n}\\right)\\) Considering pistorings dataset, chart can analogously generated R> res.qcd <- qcd(pistonrings, type.data = \"dependence\") R> res.qcs <- qcs.cusum(res.qcd, type = \"cusum\") R> plot(res.qcs, title = \"Control chart pistonrings: CUSUM\") shown Figure \\(\\ref{f7}\\).","code":""},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"ewma-control-chart","dir":"Articles","previous_headings":"Univariate statistical quality control with Shewhart control charts > Statistical quality control with Shewhart control charts","what":"EWMA control chart","title":"English Material","text":"exponentially weighted moving average (EWMA) control chart introduced alternative interested detecting small shifts. performance EWMA control chart approximately equivalent cumulative sum control chart since monitor process mean. individual observations rational sample means can controlled type chart, moving averages \\(y_i\\) calculated weighing prior observations follows \\[\\begin{align*} y_i=\\lambda x_i+(1-\\lambda)y_{-1} \\end{align*}\\] \\(0<\\lambda<1\\) \\(y_0 = \\mu_0\\), target. Therefore, EWMA control chart performed plotting \\(y_i\\) versus sample number \\(\\) (time). center line control limits EWMA control chart \\[\\begin{align*} \\mbox{LCL} & = \\mu_0-3\\sigma\\sqrt{\\frac{\\lambda(1-(1-\\lambda)^{2i})}{2-\\lambda}}\\\\ \\mbox{LCS} & = \\mu_0 \\\\ \\mbox{UCL} & = \\mu_0+3\\sigma\\sqrt{\\frac{\\lambda(1-(1-\\lambda)^{2i})}{2-\\lambda}} \\end{align*}\\] value \\(\\) high, control limits : \\[\\begin{align*} \\mbox{LCL} & = \\mu_0-3\\sigma\\sqrt{\\frac{\\lambda}{2-\\lambda}}\\\\ \\mbox{LCS} & = \\mu_0 \\\\ \\mbox{UCL} & =  \\mu_0+3\\sigma\\sqrt{\\frac{\\lambda}{2-\\lambda}}\\\\ \\end{align*}\\] EWMA control chart plotted corresponding statistics estimated using qcs.ewma() function manner CUSUM chart [see ].","code":""},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"example-of-applying-control-charts-to-control-the-mean","dir":"Articles","previous_headings":"Univariate statistical quality control with Shewhart control charts","what":"Example of applying control charts to control the mean","title":"English Material","text":"methodology control central trend CTQ variable application Phase II control charts shown section. case study corresponding pistorings dataset, piston diameter CTQ variable, used purpose.","code":""},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"stabilizing-the-process-and-estimating-the-natural-control-limits","dir":"Articles","previous_headings":"Univariate statistical quality control with Shewhart control charts > Example of applying control charts to control the mean","what":"Stabilizing the process and estimating the natural control limits","title":"English Material","text":"process estimate natural control limits detailed section. control limits can estimated proper way process stabilized, .e., control. aim estimate control limits piston diameter first forty rational samples (calibration sample) intended, Shewhart \\(\\bar{x}\\) control chart can developed code: R> pistonrings.qcd <- qcd(pistonrings) R> res.qcs <- qcs.xbar(pistonrings.qcd) R> plot(res.qcs, title = \"Xbar control chart pistonrings \") (see Figure \\(\\ref{f8}\\)), results can printed calling  R> summary(res.qcs) (sample range used estimate variance default). Figure \\(\\ref{f8}\\) shows two points control limits another point within limits corresponds run, therefore process control . next step, assignable causes shifts identified, remove points fall control limits (red) also runs (orange) recalculate control limits process control. qcr library includes state.control() function removes points indicative --control state also returns qcd object used build new control chart. R> res.qcd <- state.control(res.qcs) R> res.qcs <- qcs.xbar(res.qcd) R> plot(res.qcs, title = \"Xbar control chart pistonrings II\")  Figure \\(\\ref{f9}\\) still shows point outside control limits. Therefore, state.control() function used delete control limits estimated . Figure \\(\\ref{f10}\\) shows process control, thus, control limits estimates reliable. R> res.qcd <- state.control(res.qcs) R> res.qcs <- qcs.xbar(res.qcd) R> plot(res.qcs, title = \"Xbar control chart pistonrings III\")","code":"#> xbar chart for pistonrings  #>  #> Summary of group statistics: #>       xbar       #>  Min.   :73.99   #>  1st Qu.:74.00   #>  Median :74.00   #>  Mean   :74.00   #>  3rd Qu.:74.01   #>  Max.   :74.02   #>  #> Group sample size:  5 #> Number of groups:  40 #> Center of group statistics:  74.0036 #> Standard deviation:  0.01007094  #>  #> Control limits:  #>       LCL      UCL #>  73.99009 74.01712 #>  #> Beyond limits of control:  #> [1] 74.0196 74.0234 #>  #> Violationg runs:  #> [1] 74.0128"},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"monitoring-a-process","dir":"Articles","previous_headings":"Univariate statistical quality control with Shewhart control charts > Example of applying control charts to control the mean","what":"Monitoring a process","title":"English Material","text":"process control (Phase ) control limits calculated, process monitored (Phase II). next case, first 25 subsamples (20 recommended) piston diameter used calibration sample order estimate control limits, whereas remaining subsamples pistonrings dataset form monitoring sample. important stress taken account natural control limits calculation [see ]. Phase II, hypothesis new observation belongs distribution CTQ variable estimated Phase tested. Figure \\(\\ref{f11}\\) shows control limit estimation calibration sample. process described diameter pistons control. corresponding code : R> x <- droplevels(pistonrings[1:125, ]) R> y <- droplevels(pistonrings[126:200, ]) R> res.qcs <- qcs.xbar(x, data.name = \"Xbar control chart pistonrings\") R> plot(res.qcs)  control limits obtained, remaining samples monitored (Figure \\(\\ref{f12}\\)) running R> res.qcs <- qcs.add(x = res.qcs, value = y[, 1:2]) R> plot(res.qcs) Figure \\(\\ref{f12}\\) suggests, process falls control sample number thirty seven onwards, diameters unusually high compared calibration sample counterparts. four points form bunch pattern whose assignable cause identified making corrective actions even recalculating control limits due actual change process.","code":""},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"warning-limits","dir":"Articles","previous_headings":"Univariate statistical quality control with Shewhart control charts > Example of applying control charts to control the mean","what":"Warning limits","title":"English Material","text":"Warning limits applied Phase II using Shewhart control charts, order improve performance small shifts. can defined semi-amplitude \\(2\\sigma\\) shown Figure \\(\\ref{f13}\\). res.qcs <- qcs.xbar(x, data.name = \"Xbar control chart pistonrings\") R> plot(res.qcs, conf.nsigma.alert = 2)  However, ARL reduced process actually control. prevent drawback, CUSUM EWMA control charts excellent alternatives Shewhart control chart detecting small changes (less \\(2\\sigma\\)) Phase II process monitoring.","code":""},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"multivariate-statistical-quality-control","dir":"Articles","previous_headings":"","what":"Multivariate statistical quality control","title":"English Material","text":"several random variables characterize quality process/service, applying statistical multivariate quality control technique becomes necessary. fact, analyze variable separately, probability observation variable fall within calculated limits known process actually control, longer 0.9973 \\(6\\sigma\\) amplitude. Assuming independence, \\(0.9973^p\\), \\(p\\) number CTQ features, probability type actually lead \\(\\alpha'=1-(1-\\alpha)^p\\). Therefore, control limits diferent drawn assuming control CTQ variable independently others. Moreover, variables dependent, calculation \\(\\alpha\\) becomes complex. subject particularly important today, automatic inspection procedures make customary measure many parameters product time.","code":""},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"definition-of-multivariate-quality-control-objects-and-statistics","dir":"Articles","previous_headings":"Multivariate statistical quality control","what":"Definition of multivariate quality control objects and statistics","title":"English Material","text":"order perform multivariate SQC, definitions needed. Thus, suppose random sample obtained multivariate normal distribution, \\((\\mbox{x}_1, \\mbox{x}_2,\\ldots, \\mbox{x}_n)\\), whereby \\(\\)th component contains observations \\(p\\) variables, \\(x_{i1}, x_{i2},\\ldots, x_{ip}\\). , sample mean vector \\[\\begin{align*} \\bar{\\mbox{x}} & =\\frac{1}{n}\\displaystyle\\sum_{=1}^{n}\\mbox{x}_i=(\\bar{x}_1,\\bar{x}_2,\\ldots,\\bar{x}_p) \\end{align*}\\] sample covariance matrix \\[\\begin{align*} S & =\\frac{1}{n-1}\\displaystyle\\sum_{=1}^{n}(\\mbox{x}_i-\\bar{\\mbox{x}})(\\mbox{x}_i-\\bar{\\mbox{x}})^{\\mbox{T}} \\end{align*}\\] \\[\\begin{align*} s_{jk} & =\\frac{1}{n-1}\\displaystyle\\sum_{=1}^{n}(x_{ij}-\\bar{x}_j)(x_{ik}-\\bar{x}_k) \\end{align*}\\] sample mean vector sample covariance matrix unbiased estimators corresponding population parameters, .e., \\[\\begin{align*} E(\\bar{\\mbox{x}})=\\mu=(\\mu_1,\\mu_2,\\ldots,\\mu_p)~~~~\\mbox{}~~~~E(S)=\\Sigma \\end{align*}\\] section uses dowel1 dataset (composed two CTQ variables, diameter length dowel pin, characterize manufacturing process) available MSQC package. data set first transformed array using mqcd() function qcr library R> data(\"dowel1\") R> data.mqcd <- mqcd(dowel1)","code":""},{"path":[]},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"hotelling-t2-control-chart","dir":"Articles","previous_headings":"Multivariate statistical quality control > Statistical control using the T\\(^2\\), MCUSUM and MEWMA charts","what":"Hotelling T\\(^2\\) control chart","title":"English Material","text":"Hotelling T\\(^2\\) control chart popular tool devoted control quality processes services one CTQ variable. Consider control process \\(p\\) variables observed distributed according \\(p\\)-variant normal distribution \\(\\mathcal{N}p(\\mu_0, \\Sigma_0)\\) vector means \\(\\mu_0 = (\\mu_{01}, \\mu_{02},\\ldots,\\mu_{0p})\\) variance-covariance matrix \\(\\Sigma_0\\) order \\(p\\). want test hypothesis: \\(H_0 : \\mu_i = \\mu_0, \\forall ~~ \\mbox{vs} ~~H_1 : \\exists\\mu_j \\neq \\mu_0\\), determine process control. purpose, diferent criteria developed, highlighting T\\(^2\\) Hotelling statistic, defined \\[\\begin{align*} T_{}^{2}=n(\\bar{\\mbox{x}}_i-\\mu_0)^{\\mbox{T}}\\Sigma_{0}^{-1}(\\bar{\\mbox{x}}_i-\\mu_0) \\end{align*}\\] whereby \\(\\bar{\\mbox{x}}_i=(\\bar{x}_{i1},\\bar{x}_{i2},\\ldots,\\bar{x}_{ip})\\) vector means \\(p\\) characteristics \\(\\)th subsample. subgroup size one, vectors observations obtained instead vectors means. process control (\\(\\mu_i=\\mu_0\\)), probability \\(\\alpha\\), \\(T^2_i\\) statistic exceeds critical value \\(\\chi_{p,\\alpha}^2\\). Therefore, value \\(T^2_i\\) statistic exceeding \\(\\chi_{p,\\alpha}^2\\) value taken control signal. geometric point view, \\(T^2\\) statistic ratio squared distance (Mahalanobis) multivariate observation vector target values (vector means), equidistant points form ellipsoids around vector means. greater value \\(T^2\\), greater distance observation target value. \\(\\mu_0\\) \\(\\Sigma_0\\) known process control, \\(T^2_i\\) statistic distributed central chi-squared p degrees freedom (\\(T^2_i\\sim\\chi_{p}^2\\) ). process --control, statistic distributed non central chi-squared \\(p\\) degrees freedom non-centrality parameter \\(\\lambda=n(\\mu_1-\\mu_0)^{\\mbox{T}}\\Sigma_{0}^{-1}(\\mu_1-\\mu_0)\\), \\(\\mu_1\\) mean vector \\(p\\) characteristics change least one \\(d\\) means. practice, value \\(T^2\\) statistic estimated corresponding sample values expression \\[\\begin{align*} T^{2}=n(\\bar{\\mbox{x}}-\\bar{\\bar{\\mbox{x}}})^{\\mbox{T}}\\Sigma^{-1}(\\bar{\\mbox{x}}-\\bar{\\bar{\\mbox{x}}}) \\end{align*}\\] whose distribution null hypothesis \\[\\begin{align*} T^{2}\\sim\\frac{p(m-1)(n-1)}{mn-m-p+1}F_{p,mn-m-p + 1} \\end{align*}\\] Namely, case, statistic follows approximately \\(F\\) distribution \\(p\\) \\((mn-m-p + 1)\\) degrees freedom. Since \\(\\chi^2\\) \\(F\\) distributions asymmetrical right skewness, expression upper control limit considered, given \\[\\begin{align*} \\mbox{UCL}=\\frac{p(m-1)(n-1)}{mn-m-p+1}F_{\\alpha,p,mn-m-p + 1} \\end{align*}\\] LCL = 0 considered lower control limit. addition, processes \\(m\\) suficiently large (\\(m > 100\\)), limit can approximated \\(\\mbox{UCL} =\\chi_{\\alpha,p}^2\\). recommend using limits first phase, called retrospective analysis. control limit estimated, second control limit estimated Phase II process monitoring. Hence, consistent change consisting multiplication UCL \\(\\frac{m+1}{m-1}\\), thus obtaining new value upper control limit. case individual observations, .e., \\(n = 1\\), assuming overall \\(m\\) subsamples evaluate \\(p\\) control variables, corresponding control chart developed following control limits \\[\\begin{align*} \\mbox{UCL}&=\\frac{p(m+1)(n-1)}{m^2-mp}F_{\\alpha,p,m-p}\\\\ \\mbox{LCL}&= 0 \\end{align*}\\] mqcs.t2() function can used compute statistics required \\(T^2\\) chart. R> res.mqcs <- mqcs.t2(data.mqcd) R> plot(res.mqcs, title = \"Hotelling control chart dowel pin\")  shown Figure \\(\\ref{f14}\\), control limits estimated observing Dowell pins process control. next step implement Phase II process monitoring using proper UCL. UCL retrospective analysis monitoring phase can computed setting phase argument 1 2, respectively, mqcs.t2() function.","code":""},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"mcusum-control-charts","dir":"Articles","previous_headings":"Multivariate statistical quality control > Statistical control using the T\\(^2\\), MCUSUM and MEWMA charts","what":"MCUSUM control charts","title":"English Material","text":"Woodall Ncube proposed scheme based multiple univariate CUSUM control charts. method often preferable Hotelling’s \\(T^2\\) procedure controlling processes defined Gaussian bivariate CTQ variables, also happened univariate approach identifying small shifts mean intended. Healy developed following multivariate CUSUM model: \\[\\begin{align*} G_i=\\mbox{max}\\{(G_{-1}+^T(\\bar{\\mbox{x}}_i-\\mu_0)-0,5D),0\\} \\end{align*}\\] whereby \\(\\mu_0\\) mean vector process control, \\(\\Sigma_0\\) variance-covariance matrix process control, \\(\\mu_1\\) acounts mean vector process --control, \\(D=\\sqrt{(\\mu_1-\\mu_0)^{\\mbox{T}}\\Sigma_{0}^{-1}(\\mu_1-\\mu_0)}\\) noncentrality parameter, \\(^T=\\frac{}{D}\\) \\(=(\\mu_1-\\mu_0)^{\\mbox{T}}\\Sigma_{0}^{-1}\\) order interpret chart, alarm signal produced \\(G_i\\) exceeds certain reference value \\(H\\), conveniently chosen tabulated. Hawkins developed model variables adjusted multivariate regression, based assumption change occurs mean, due magnitude variation mean one variables multivariate dataset. proposed MCUSUM charts Crosier Pignatiello Runger . Croiser procedure implemented qcr package. method reduces multivariate observation scalar CUSUM statistic finally developed using following expression: \\[\\begin{align*} S_i=\\mbox{max}\\{0,S_{.1}+T_i-k\\} \\end{align*}\\] \\(T_i=\\sqrt{n(\\bar{\\mbox{x}}_i-\\mu_0)^{\\mbox{T}}\\Sigma_{0}^{-1}(\\bar{\\mbox{x}}_i-\\mu_0)}\\), \\(S_0\\geq 0\\) (generally \\(S_0 = 0\\)) \\(k > 0\\). MCUSUM chart gives control signal value \\(S_i\\) greater certain value \\(h\\) depends value desired ARL process operating target value [\\(S_i > h\\)]. Crosier used Markov processes determining values \\(h\\) \\(k\\) \\(p=2,5,10\\) 20 ARL values 200 500 (process control). tables designed detect change \\(d = 1\\) mean vector, \\(d = \\lambda\\), \\(\\lambda\\) non-centrality parameter. mqcs.mcusum() function qcr package used compute statistics required perform MCUSUM chart R> res.mqcs <- mqcs.mcusum(data.mqcd) R> plot(res.mqcs, title = \"MCUSUM control chart dowel pin\")","code":""},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"mewma-control-charts","dir":"Articles","previous_headings":"Multivariate statistical quality control > Statistical control using the T\\(^2\\), MCUSUM and MEWMA charts","what":"MEWMA control charts","title":"English Material","text":"exponentially weighted moving average chart multivariate case (MEWMA) extension corresponding univariate chart. multivariate extension, proposed Lowry et al. , defined \\[\\begin{align*} Z_i=\\Lambda\\bar{\\mbox{x}}_i+(-\\Lambda)Z_{-1} \\end{align*}\\] \\(\\bar{\\mbox{x}}_i\\) mean vector \\(\\Lambda = diag (\\lambda_1,\\ldots,\\lambda_p)\\), \\(\\lambda_j\\) accounts “depth” memory variable, .e., weights importance previous observations calculating moving average. higher value \\(\\lambda_j\\) , lower depth importance past observations. , \\(\\) identity matrix \\(Z_0 = 0\\) considered initial value. information provided \\(Z_i\\) collected statistic \\[\\begin{align*} T_i^2=Z_i^T\\Sigma_{Z_i}^{-1}Z_{} \\end{align*}\\] Whereby \\(\\Sigma_{Z_i}^{-1}\\) inverse variance-covariance matrix \\(Z_i\\). control output signal occurs \\(T^2_i\\) exceeds certain value \\(h > 0\\), selected order achieve certain ARL value process control. Usually, prior reason weighting diferent weights previous observations one \\(p\\) variables, \\(\\lambda_1 = \\ldots = \\lambda_p\\) assumed. \\(Z_i\\) matrix can obtained elements variance-covariance matrix corresponding variables analyzed expression \\[\\begin{align*} \\Sigma_{Z_i}=\\frac{\\lambda}{2-\\lambda}\\left[1-(1-\\lambda)^{2i}\\right]\\Sigma_x \\end{align*}\\] \\(\\Sigma_x\\) original variance-covariance matrix. \\(r = 1\\), MEWMA chart matches \\(T^2\\) control chart since asymptotic value variance-covariance matrix \\(Z_i\\) \\[\\begin{align*} \\Sigma_{Z_i}=\\frac{\\lambda}{2-\\lambda}\\Sigma_x \\end{align*}\\] Regarding choice upper control limit, Runger Prabhu suggest Markov chain approximation, allows us study performance chart taking account ARL. also provide series recommendations selecting parameters proposed control chart. Moreover, Montgomery recommends \\(\\lambda\\) parameter value 0.05 0.25. higher value parameter, less importance given values away time. Taking account ARL based criteria, \\(\\lambda = 0.1\\) usually chosen practical applications. default value qcr mqcs.mewma() function used compute statistics required MEWMA chart. R> res.mqcs <- mqcs.mewma(data.mqcd) R> plot(res.mqcs, title = \"MEWMA control chart dowel pin\")  See package documentation information arguments function. previous cases, estimation corresponding control limits, MEWMA control chart shown Figure \\(\\ref{f16}\\) indicates process control.","code":""},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"nonparametric-control-charts-based-on-data-depth","dir":"Articles","previous_headings":"","what":"Nonparametric control charts based on data depth","title":"English Material","text":"control charts presented section proposed alternative described previous section. main idea control graphs reduce multivariate measure univariate index, , relative center-exterior classification induced depth data. approach completely nonparametric, therefore, control charts defined parametric assumption regarding process model. Thus, applicable wider number case studies counterparts \\(T^2\\), MSUSUM MEWMA control charts. addition, graphs allow simultaneous detection change location (shift mean) increase scale (change variability) process. Liu proposed justified three types control charts, \\(r\\), \\(Q\\), \\(S\\) charts can considered data-depth-based multivariate generalizations univariate \\(X\\), \\(\\bar{x}\\), CUSUM charts, respectively.","code":""},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"data-depth","dir":"Articles","previous_headings":"Nonparametric control charts based on data depth","what":"Data depth","title":"English Material","text":"multivariate analysis, term depth refers degree centrality point regarding data cloud probability distribution. Therefore, possible define rank multidimensional Euclidean space calculation observation depth. According Cascos et al. , depth function can defined bounded function \\(D_p:R^d\\longrightarrow R\\), \\(P\\) distribution set \\(R^d\\), assigns point \\(R^d\\) degree centrality respect \\(P\\). Depth functions control charts can performed Simplicial depth (Liu et al. ), Mahalanobis depth (Mahalanobis \\cite(b35)), Halfspace Tukey depth (Tukey ), Likelihood depth (Fraiman et al. ), Random projection depth (Zuo Sering ).","code":""},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"statistics-derived-from-data-depth","dir":"Articles","previous_headings":"Nonparametric control charts based on data depth","what":"Statistics derived from data depth","title":"English Material","text":"Let \\(G\\) \\(k\\)-dimensional distribution, let \\(Y_1,\\ldots,Y_m\\) \\(m\\) random observations \\(G\\). sample \\(Y_1,\\ldots,Y_m\\) generally reference sample CTQ variable context quality control, composed measurements products obtained control process. \\(X_1,X_2, \\ldots\\) new observations manufacturing process, assuming diferent \\(X_i\\) values follow \\(F\\) distribution quality studied product deteriorated , words, process control. Otherwise follow \\(G\\) distribution. Let \\(D_{G}(·)\\) denote notion depth, assume \\(G\\) \\(F\\) two continuous distributions. Thus, \\(D_G(Yi)\\) values sorted increasing order, \\(Y_{[j]}\\) denotes sample value associated \\(j\\)th smallest depth value, \\(Y_{[1]},\\ldots,Y_{[m]}\\) order statistics \\(Y_i's\\), \\(Y_{[m]}\\) central point. Therefore, smaller order (rank) point, farther point underlying distribution \\(G(\\cdot)\\). Liu defines rank statistic \\[\\begin{align*} r_G(y)=P\\{D_G(Y) \\leq D_G(y)|Y \\sim G \\} \\end{align*}\\] whereby \\(Y\\sim G\\) indicates random variable \\(Y\\) follows distribution \\(G\\). \\(G\\) unknown, empirical distribution \\(G_m\\) sample \\(\\{Y_1,\\ldots, Y_m\\}\\) can used instead, statistic defined \\[\\begin{align*} r_{G_m}(y)=\\frac{\\#\\{D_{G_m}(Y_j)\\leq D_{G_m}(y), j=1,\\ldots,m\\}}{m} \\end{align*}\\] way \\(r_G\\) \\(r_{G_m}\\), \\(Q\\) statistics can also defined follows \\[\\begin{align*} Q(G,F)=P\\{D_G(Y)\\leq D_G(X)| Y\\sim G, X\\sim F\\}=E_F[r_G(X)] \\end{align*}\\] \\[\\begin{align*} Q(G,F_n)&=\\frac{1}{n}\\displaystyle\\sum_{=1}^{n}r_G(X_i)\\\\ Q(G_m,F_n)&=\\frac{1}{n}\\displaystyle\\sum_{=1}^{n}r_{G_m}(X_i) \\end{align*}\\] whereby \\(F_n(·)\\) denotes empirical distribution sample \\(\\{X_1,\\ldots,X_n\\}\\). control charts corresponding statistics can developed described following sections.","code":""},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"the-r-chart","dir":"Articles","previous_headings":"Nonparametric control charts based on data depth","what":"The r chart","title":"English Material","text":"Calculate \\(\\{r_G(X1),r_G(X2),\\ldots,r_G (Xn)\\}\\) \\(\\{r_{G_m}(X1), r_{G_m}(X2),\\ldots,r_{G_m}(Xn)\\}\\) \\(G\\) unknow \\(Y_1,\\ldots Y_m\\) available. result, \\(r\\) chart consists plotting rank statistic regard time. control chart central line CL = 0.5, whereas lower limit LCL =\\(\\alpha\\), \\(alpha\\) accounting false alarm rate. process control \\(r_G(\\cdot)\\) falls LCL. small value rank statistic \\(r_{G_m}(X)\\) means small proportion \\(Y_i\\) values outlying \\(X\\). Therefore, assuming \\(X\\sim F\\), small value \\(r_{G_m}(X)\\) suggests possible deviation \\(G\\) \\(F\\). may due shifting location /increase scale studied CTQ variable. Taking account UCL defined \\(r\\) chart, CL line serves reference identify emerging patterns, runs trends. \\(r_{G_m}(X)\\) greater 0.5, evidence scale decreasing, also take place negligible location shift. case tackled improvement quality given gain accuracy, thus process considered control.","code":""},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"the-q-chart","dir":"Articles","previous_headings":"Nonparametric control charts based on data depth","what":"The Q chart","title":"English Material","text":"idea behind \\(Q\\) chart similar one behind \\(\\bar{x}\\) chart. \\(X_1,X_2,\\ldots\\) univariate \\(G\\) normal distribution, \\(\\bar{x}\\) chart plots averages consecutive subsets de diferent \\(X_i\\). goal type chart can prevent identification false alarm process actually control (even individual sample points fall control limits due random fuctuations). \\(Q\\) chart nonparametric alternative \\(\\bar{x}\\) chart. performed plotting averages consecutive subsets size \\(n\\) corresponding rank statistic (\\(r_G(Xi)\\) \\(r_{G_m}(Xi)\\)), given \\(Q\\left(G,F_n^j\\right)\\) \\(Q\\left(Gm,F_n^j\\right)\\) whereas \\(F_n^j\\) empirical distribution \\(X_i's\\) \\(j\\)th subset, \\(j = 1, 2,\\ldots\\). Accordingly, \\(\\{Y_1,Y_2,\\ldots,Y_m\\}\\) available, \\(Q\\) chart plots sequence \\(\\{Q\\left(G_m,F_n^j\\right), Q\\left(G_m,F_n^j\\right),\\ldots \\}\\). Depending value \\(n\\), corresponding control limits follows LCL=\\(0.5-Z_\\alpha(12n)^\\frac{1}{2}~~~~\\mbox{}~~~~Q\\left(G,F_n^j\\right)\\) LCL= \\(0.5-Z_{\\alpha}\\sqrt{\\frac{1}{12}\\left(\\frac{1}{m}+\\frac{1}{n}\\right)}~~~~\\mbox{}~~~~Q\\left(Gm,F_n^j\\right)\\) \\(n<5\\), CL=0.5 LCL=\\(\\frac{(n!\\alpha)^{\\frac{1}{2}}}{n}\\)","code":""},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"the-s-control-chart","dir":"Articles","previous_headings":"Nonparametric control charts based on data depth","what":"The S control chart","title":"English Material","text":"\\(S\\) control chart based CUSUM univariate control chart, basically plot \\(\\displaystyle\\sum_{=1}^n(X-\\mu)\\) refects pattern total deviation expected value. mentioned , efective \\(X\\) chart \\(\\bar{x}\\) chart detecting small process changes. nonparametric CUSUM chart based data depth suggests plotting \\(S_n(G)\\) \\(S_n(G_m)\\), defined \\[\\begin{align*} S_n(G)=\\displaystyle\\sum_{=1}^n\\left(r_G(X_i)-\\frac{1}{2}\\right) \\end{align*}\\] control limits CL = 0 LCL = \\(-Z_{\\alpha}\\left(\\frac{n}{12}\\right)^{\\frac{1}{2}}\\), \\[\\begin{align*} S_n(G_m)=\\displaystyle\\sum_{=1}^n\\left(r_{G_m}(X_i)-\\frac{1}{2}\\right) \\end{align*}\\] , \\(Y_1,\\ldots,Y_m\\) available, control limits CL = 0 LCL = \\(-Z_{\\alpha}\\sqrt{n^2\\frac{\\left(\\frac{1}{m}+\\frac{1}{n}\\right)}{12}}\\). LCL control limits cases constitute curve instead straight line; \\(n\\) large, control chart \\(S\\) standardized follows \\[\\begin{align*} S_{n}^{*}(G)&=\\frac{S_n(G)}{\\sqrt{\\frac{n}{12}}}\\\\ S_{n}^{*}(G_m)&=\\frac{S_n(G_m)}{\\sqrt{n^2\\frac{\\left(\\frac{1}{m}+\\frac{1}{n}\\right)}{12}}} \\end{align*}\\] Therefore, \\(S^*\\) chart defined CL = 0 LCL = \\(-Z_{\\alpha}\\).","code":""},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"examples-of-r-q-and-s-control-charts-applied-using-synthetic-data","dir":"Articles","previous_headings":"Nonparametric control charts based on data depth","what":"Examples of r, Q and S control charts applied using synthetic data","title":"English Material","text":"bivariate data set used illustrate previously discussed control charts arise. fact, synthetic dataset composed 540 observations bidimensional standard Gaussian variable simulated, addition 40 individuals corresponding another bidimensional Gaussian variable mean standard deviation equal 2. R> mu <- c(0, 0) R> Sigma <- matrix(c(1, 0, 0, 1), nrow = 2) R> Y <- rmvnorm(540, mean = mu, sigma = Sigma) R> u <- c(2, 2) R> S <- matrix(c(4, 0, 0, 4), nrow = 2) R> x <- rmvnorm(40, mean = u, sigma = S) Prior application nonparametric control charts, dataset converted npqcsd object. synthetic dataset arranged two matrices, G composed 500 first rows (multivariate observations) Y, x remaining ones including belonging second bidimensional variable R> x <- rbind(Y[501:540, ], x) R> G <- Y[1:500, ] R> data.npqcd <- npqcd(x, G) way npqcd function creates data object non parametric quality control, npqcs.r(), npqcs.Q() npqcs.S() functions computes statistics required obtain \\(r, Q\\) \\(S\\) control charts, respectively. argument method = c(\"Tukey\", \"Liu\", \"Mahalanobis\", \"RP\", \"LD\") specify data detph function alpha signification level defines LCL. See obtain additional information functions arguments.","code":""},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"r-chart","dir":"Articles","previous_headings":"Nonparametric control charts based on data depth > Examples of r, Q and S control charts applied using synthetic data","what":"\\(r\\) chart","title":"English Material","text":"\\(r\\) control chart can obtained applying npqcs.r() function npqcd object plotting result R> res.npqcs <- npqcs.r(data.npqcd, method = \"Tukey\", alpha = 0.025) R> plot(res.npqcs, title = \" r Control Chart\")  resulting chart shown Figure \\(\\ref{f17}\\), can observed process control 42nd observation, expected, taking account \\(r_{G_m}(X_i)\\) values falling LCL.","code":""},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"q-chart","dir":"Articles","previous_headings":"Nonparametric control charts based on data depth > Examples of r, Q and S control charts applied using synthetic data","what":"\\(Q\\) chart","title":"English Material","text":"case, dataset assumed composed rational samples size 4, thus, \\(Q\\) nonparametric alternative \\(bar{x}\\) chart proposed applied control bidimensional process R> n <- 4 # samples R> m <- 20 # measurements R> k <- 2 # number variables R> x.<- array( , dim = c(n, k, m)) R> (1:m) { x.[, , ] <- x[(1 + (- 1) * n):(* n), ]} R> data.npqcd <- npqcd(x., G) R> res.npqcs <- npqcs.Q(data.npqcd, method = \"Tukey\", alpha = 0.025) R> plot(res.npqcs, title = \"Q Control Chart\") Figure \\(\\ref{f18}\\) clearly shows process control second half, 20th rotational sample. can also see high random fuctuations \\(r\\) chart attenuated \\(Q\\) chart due averaging effect.","code":""},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"s-chart","dir":"Articles","previous_headings":"Nonparametric control charts based on data depth > Examples of r, Q and S control charts applied using synthetic data","what":"\\(S\\) chart","title":"English Material","text":"Finally, nonparametric counterpart CUSUM control chart performed multivariate individual observations R> data.npqcd <- npqcd(x, G) R> res.npqcs <- npqcs.S(data.npqcd, method = \"Tukey\", alpha = 0.05) R> plot(res.npqcs, title = \"S Control Chart\") Figure \\(\\ref{f19}\\) shows process control 48th observation. Note \\(S\\) graph performs better identifying small changes process. case, performance \\(Q\\) chart better corresponding \\(S\\) chart.","code":""},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"process-capability-analysis","dir":"Articles","previous_headings":"","what":"Process capability analysis","title":"English Material","text":"analysis capability process case statistical quality control done calculation called capability. indices measure whether process capable meeting corresponding technical specifications set customer, manufacturer, comparing natural variability CTQ variable characterizes process. interpretation indices associated result relation. Capability indices generally calculated ratio length specification interval natural variability process terms \\(\\sigma\\). Large values indices mean corresponding process capable producing articles meet requirements client, manufacturers. words, larger value capability index, smaller number products outside specification limits. section, describe capability indices processes whose underlying distribution normal normal (exponential, Weibull, etc.). However, important note development programming tools nonparametric capability analysis one main goals contributions qcr package. addition estimation capability indices, graphical output provided. Based proposal qualityTools package, qcr graphical output capability analysis includes normality test CTQ variable, Q-Q plot, histogram theoretical Gaussian distribution density, parametric nonparametric estimates capability indices contour capability control chart. following lines, parametric nonparametric capability analysis utilities described using different examples application.","code":""},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"assuming-a-normal-distribution","dir":"Articles","previous_headings":"Process capability analysis","what":"Assuming a normal distribution","title":"English Material","text":"widely used capability indexes industry analyze process capability assumptions stabilized process (control) Gaussian distributed CTQ variable. Table \\(\\ref{t3}\\) shows main parametric (assuming Gaussian distribution) indices, namely \\(C_p, C_{pk}, C_{pm},~~\\mbox{}~~C_{pmk}\\). Vännman proposed general formulation indices expression depends non-negative parameters \\(u\\) \\(v\\): \\[\\begin{align*} C_p(u,v)=\\frac{d-u|\\mu-m|}{3\\sqrt{\\sigma^2+v(u+T)^2}} \\end{align*}\\] Whereby \\(d = \\frac{(USL-LSL)}{2}\\), \\(m = \\frac{(LSL + USL)}{2}\\), USL upper specification limit, LSL lower specification limit, \\(\\sigma\\) theoretical standard deviation, \\(\\mu\\) accounts theoretical mean CTQ variable, \\(T\\) specification target (default mean LSL USL). indices shown Table \\(\\ref{t3}\\) obtained expression just considering values 0 1 \\(u\\) \\(v\\): \\(C_p (0, 0) = C_p, C_p (1, 0) = C_{pk}, C_p (0, 1) = C_{pm}, C_p (1, 1) = C_{pmk}\\). piston rings data set used illustrate calculation capability indices using qcs.cp() function based expressions previously described Table \\(\\ref{t3}\\). statistics obtained \\(\\bar{x}\\) control chart pistonrings dataset, \\(\\gamma\\) \\(\\beta\\) values estimated corresponding capability index computed R> data(\"pistonrings\") R> xbar <- qcs.xbar(pistonrings[1:125, ], plot = FALSE) R> limits <- c(lsl = 73.99, usl = 74.01) R> # qcs.cp(object = xbar, parameters = c(0, 0), limits = limits, contour = FALSE) R> # qcs.cp(object = xbar, parameters = c(1, 0), limits = limits, contour = FALSE) R> # qcs.cp(object = xbar, parameters = c(0, 1), limits = limits, contour = FALSE) R> qcs.cp(object = xbar, parameters = c(1, 1), limits = limits, contour = FALSE) Consequently, obtained results \\(C_p = 0.3407, C_{pk} = 0.3006, C_{pm} = 0.3382,~~ \\mbox{}~~ C_{pmk} = 0.2984\\), respectively. argument parameters accounts \\(u\\) \\(v\\) values, object type control chart \\(\\sigma\\) estimated, limits specification control limits, contour parameter indicates process capability contour chart plotted.","code":"#>        Cp delta.usl gamma.usl  #>    0.3407    0.1176    0.9785 #>       Cpk delta.usl gamma.usl  #>    0.3006    0.1176    0.9785 #>       Cpm delta.usl gamma.usl  #>    0.3382    0.1176    0.9785 #>      Cpmk delta.usl gamma.usl  #>    0.2984    0.1176    0.9785"},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"process-capability-plot","dir":"Articles","previous_headings":"Process capability analysis","what":"Process capability plot","title":"English Material","text":"Vännman Deleryd Vännman , graphical method (based common capbility indices) analyze capability process proposed. goal using type plot (compared respect capability indices calculation) provide immediate information location spread CTQ feature, capability meet specifications corresponding process. using chart, process capable process capability index higher certain value \\(k\\), \\(k > 1\\). used values \\(k\\) \\(k = 1, k = 4/3\\), \\(k = \\frac{5}{3}\\), even 2 Six Sigma level, taking account usual index limits process assumed capable. also assumed target value matches center specification interval, , \\(T=\\frac{(USL+LSL)}{2}=m\\). , one indices defined \\(C_p(u, v)\\) family used, e.g., \\(C_{pk}\\) \\(C_{pm}\\), process defined capable \\(C_p(u, v) > k\\), given values \\(u\\), \\(v\\), \\(k\\). Also note \\(\\mu = T\\), \\(C_p(u, v)\\) indices defined expression \\(C_p\\). Moreover, different setting \\(u\\), \\(v\\), \\(k\\) impose different constraints process parameters \\((\\mu, \\sigma)\\). can easily seen process capability plot. graph contour plot \\(C_p(u,v)=k\\) function \\(\\mu\\) \\(\\sigma\\), can also defined function \\(\\delta\\) \\(\\gamma\\) , \\(\\delta=\\frac{\\mu-T}{d}\\) \\(\\gamma=\\frac{\\sigma}{d}\\). contour line obtained rewriting index \\(C_p(u,v)\\) function \\(\\delta\\) \\(\\gamma\\) follows \\(C_p(u,v) =\\frac{1-u|\\delta|}{3\\sqrt{\\gamma^2+v(\\delta)^2}}\\). Therefore, \\(C_p(u,v) = k\\) equation solved, plotting \\(\\gamma\\) depending values \\(\\delta\\). resulting expressions : \\[\\begin{align*} \\gamma=\\sqrt{\\frac{(1-u|\\delta|)}{9k^2}-v\\delta^2},~~|\\delta|\\leq\\frac{1}{u+3k\\sqrt{v}},~~ (u,v)\\neq(0,0) \\end{align*}\\] \\(u = v = 0\\), , consider index \\(C_p = k\\), \\(\\gamma= \\frac{1}{3k}\\), \\(|\\delta|\\leq 1\\). important highlight axis accounts process spread, whereas \\(\\delta\\) axis accounts process location. values parameters \\(\\mu\\) \\(\\sigma\\) provide values \\((\\delta,\\gamma )\\) within region bounded contour line \\(C_p(u,v)=k\\) \\(delta\\) axis provide larger \\(C_p(u,v)\\) value \\(k\\), leading capable process. Furthermore, values \\(\\mu\\) \\(\\sigma\\) provide values \\((\\delta,\\gamma )\\) outside region provide value \\(C_p(u,v)\\) smaller \\(k\\), .e., non-capable process. case process capable, type plot useful understand corrective actions performed decrease process spread, process location (deviation respect target) even changes needed improve process capability. can observed observing distance respect \\(x\\) \\(y\\) axis. examples capability plot application can generated application qcs.cp function contour=TRUE k=1 (default values) R> oldpar <- par(mfrow = c(2, 2)) R> qcs.cp(object = xbar, parameters = c(0, 0), limits = limits, ylim = c(0, 1)) R> qcs.cp(object = xbar, parameters = c(1, 0), limits = limits, ylim = c(0, 1)) R> qcs.cp(object = xbar, parameters = c(0, 1), limits = limits, ylim = c(0, 1)) R> qcs.cp(object = xbar, parameters = c(1, 1), limits = limits, ylim = c(0, 1)) R> par(oldpar)     result shown Figure \\(\\ref{f20}\\). cases points red area defined line blue \\(\\delta\\) axis. Thus, corresponding process capable matter capability index used. case, note \\(C_p\\) index useless identifying non capable processes due location shifts respect target. way, \\(C_pk\\) index assumes capable processes far target long close specification limits (shown Figure \\(\\ref{f20}\\)). Thus, use \\(C_{pm}\\) \\(C_{pmk}\\) recommended due take account shifts target spread. present case process capable due spread rather target shift. Therefore, process changes due decreases variability process.","code":"#>        Cp delta.usl gamma.usl  #>    0.3407    0.1176    0.9785 #>       Cpk delta.usl gamma.usl  #>    0.3006    0.1176    0.9785 #>       Cpm delta.usl gamma.usl  #>    0.3382    0.1176    0.9785 #>      Cpmk delta.usl gamma.usl  #>    0.2984    0.1176    0.9785"},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"estimated-process-capability-plot","dir":"Articles","previous_headings":"Process capability analysis","what":"Estimated process capability plot","title":"English Material","text":"practice, process parameters unknown need estimate . can perform decision rule based sample statistics provide sample estimate capability index , finally called estimated process capability plot, also called \\(\\gamma^*-\\delta^*\\) plot . allows us decide whether process capable assuming \\(\\mu\\) \\(\\sigma\\) parameters unknown estimated \\(\\hat{\\mu}=\\bar{X}\\) \\(\\hat{\\sigma}^2=\\frac{1}{n}\\displaystyle\\sum_{=1}^{n}\\left(X_i^2-\\bar{X}^2\\right)\\). maximum likelihood estimators CTQ variable process normally distributed, \\(X_1,X_2, . . . ,X_n\\) random sample normal distribution \\(\\mu\\) mean \\(\\sigma^2\\) variance. qcr package provides \\(\\gamma^*-\\delta^*\\) plot corresponding \\(C_{pm}\\) index taking account capability indices consider shifts target value calculations. general case, see work . order obtain appropriate decision rule case \\(C_{pm}\\) index, test hypotheses \\(H_0 : C_{pm} \\leq k_0\\) versus \\(H_1 : C_{pm} > k_0\\), using \\[\\begin{align*} \\hat{C}_{pm}=\\frac{d}{3\\sqrt{\\hat{\\sigma}^2+(\\hat{\\mu}-T)^2}} \\end{align*}\\] test statistic. null hypothesis rejected \\(\\hat{C}_{pm}>c_\\alpha\\), constant \\(c_\\alpha\\) determined previously defining signifition test level \\(\\alpha\\). Vännman [40] showed null hypothesis \\(H_0 : C_{pm}\\leq k_0\\) can reduced \\(H_0 : C_{pm} = k_0\\). Thus, given values \\(alpha\\) \\(n\\), process considered capable \\(\\hat{C}_{pm}>c_\\alpha\\), \\(c_{\\alpha} > k_0\\). Hubele Vännman [42] proved , \\(C_{pm}\\) index used, critical value given \\(\\alpha\\) obtained \\[\\begin{align*} c_{\\alpha}=k_0\\sqrt{\\frac{n}{\\chi_{\\alpha,n}^2}} \\end{align*}\\] \\(\\chi_{\\alpha,n}^2\\) quantile \\(\\alpha\\) \\(\\chi^2\\) distribution \\(n\\) degrees freedom. qcr package includes qcs.hat.cpm() function obtain theoretical capability plot estimated capability plot sample statistics. Among options, user can indicate control chart estimates \\(\\hat{\\mu}\\) \\(\\hat{\\sigma}\\) obtained (alternatively, \\(\\hat{\\mu}\\) \\(\\hat{\\sigma}\\) can introduced mu std.dev), specification limits using limits. Furthermore, signification level capability limit can modified, set \\(\\alpha\\) = 0.05 \\(k_0 = 1\\) default. following code illustrates application pistonrings data R> xbar <- qcs.xbar(pistonrings[1:125, ], plot = FALSE) R> limits <- c(lsl = 73.99, usl = 74.01) R> # qcs.hat.cpm(object = xbar, limits = limits, ylim = c(0,1)) R> mu <- xbar$center R> std.dev <- xbar$std.dev R> qcs.hat.cpm(limits = limits, mu = mu, std.dev = std.dev, ylim = c(0,1))  result shown Figure \\(\\ref{f21}\\). contour line corresponding capability region obtained capability index sample always restrictive corresponding theoretical one.","code":""},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"nonparametric-capability-analysis","dir":"Articles","previous_headings":"Process capability analysis","what":"Nonparametric capability analysis","title":"English Material","text":"Traditional assumptions data normality independence frequently violated many real situations. Thus, scenarios assumptions normality verified, indices defined previous sections valid. Pearn Chen Tong Chen proposed generalizations \\(C_p(u,v)\\) case arbitrary distributions data \\[\\begin{align*} C_{Np}(u,v)=\\frac{d-u|M-m|}{3\\sqrt{\\left(\\frac{F_{99,865}-F_{0,135}}{6}\\right)^2+v(M-T)^2}} \\end{align*}\\] \\(F_{\\alpha}\\) percentile \\(\\alpha\\)% corresponding distribution \\(M\\) median process. However, distribution underlying process always unknown. calculated estimates \\(F_{99.865}\\), \\(F_{0.135}\\) \\(M\\) based sample percentiles. Pearn Chen proposed following estimator \\[\\begin{align*} \\hat{C}_{Np}(u,v)=\\frac{d-u|\\hat{M}-m|}{3\\sqrt{\\left(\\frac{U_p-L_p}{6}\\right)^2+v(\\hat{M}-T)^2}} \\end{align*}\\] estimator \\(F_{99.865}\\), Lp estimator \\(F_{0.135}\\) \\(\\hat{M}\\) estimator \\(M\\), obtained tables developed . qcs.cpn() function qcr calculates \\(CN_p, CN_{pk}, CN_{pm}~~\\mbox{}~~CN_{pmk}\\) using formulation described Tong Chen . code illustrates use shown . obtain nonparametric capability indices necessary indicate \\(u\\) \\(v\\) parameters. R> xbar <- qcs.xbar(pistonrings[1:125, ], plot = FALSE) R> limits <- c(lsl = 73.99, usl = 74.01) R> # x <- xbar$statistics[[1]] R> # median <- median(x) R> # q = quantile(x, probs = c(0.00135, 0.99865)) # c(lq, uq) R> # qcs.cpn(parameters = c(0, 0), limits = limits, median = median, q = q) R> qcs.cpn(object = xbar, parameters = c(0, 0), limits = limits) R> qcs.cpn(object = xbar, parameters = c(1, 0), limits = limits) R> qcs.cpn(object = xbar, parameters = c(0, 1), limits = limits) R> qcs.cpn(object = xbar, parameters = c(1, 1), limits = limits) Thus, values obtained \\(CN_p = 1.0082, CN_{pk} = 0.9275, CN_{pm} = 0.9799~\\mbox{}~CN_{pmk} = 0.9015\\). capability limit \\(k = 1\\) \\(k = 1.33\\) assumed, can infer process actually capable meet customers manager’s requirements. ## Tools comprehensive processs capability analysis Function qcs.ca() provides comprehensive information capability process, summarized trough graphica output. function calculates process capability indices \\(C_p, C_{pk}, C_{pL}, C_{pU}, C_{pm}, C_{pmk}\\) qcs object, assuming Gaussian distribution. Moereover, computes confidence limits \\(C_p\\) using method described Chou et al. . Approximate confidence limits \\(C_{pl}, C_{pu} ~\\mbox{}~ C_{pk}\\) also estimated using method described Bissell , confidence limits \\(C_{pm}\\) based aproximated method Boyles , assumes target mean specification limits. Moreover, \\(CN_{p}, CN_{pk}, CN_{pm}, ~\\mbox{}~ CN_{pmk}\\) nonparametric capability indices also obtained. also specific box within summary plot shows proportion observations, expected observations Gaussian assumption, specification limits (nonconforming observations). , histogram data sample provided, addition corresponding Gaussian density curves obtained sample estimates (one per standard deviation estimate procedure). displayed along specification limits, quantile-quantile plot specified distribution process capability plot obtained Cpm index (using theoretical sample alternatives). order describe qcs.ca() performance, following code corresponds analysis first 125 observations pistonrings dataset (corresponding output shown Figure \\(\\ref{f22}\\)).  R> qcs.ca(xbar, limits = c(lsl = 73.99, usl = 74.01))","code":"#>    CNp  #> 1.0082 #>   CNpk  #> 0.9275 #>   CNpm  #> 0.9799 #>  CNpmk  #> 0.9015 #>  #> Process Capability Analysis #>  #> Call: #> qcs.ca(object = xbar, limits = c(lsl = 73.99, usl = 74.01)) #>  #> Number of obs = 125          Target = 74 #>        Center =  74               LSL =  73.99 #>        StdDev =  0.009785         USL =  74.01 #>  #> Paremetric Capability indices: #>  #>        Value    0.1%   99.9% #> Cp    0.3407  0.2771  0.4065 #> Cp_l  0.3807  0.2739  0.4875 #> Cp_u  0.3006  0.2021  0.3991 #> Cp_k  0.3006  0.1944  0.4068 #> Cpm   0.3382  0.2749  0.4038 #>  #>  #> Non parametric Capability indices: #>  #>         Value #> CNp    1.0082 #> CNpK   0.9275 #> CNpm   0.9799 #> CNpmk  0.9015 #>  #>  #> PPM: #>  #>          Exp<LSL 1.267e+07       Obs<LSL 0 #>          Exp>USL 1.836e+07       Obs>USL 8e+05 #>        Exp Total 3.103e+07     Obs Total 8e+05 #>  #> Test: #>  #>  #>  Anderson Darling Test for normal distribution #>  #> data:  xbar  #> A = 0.1399, mean = 74.001, sd = 0.005, p-value = 0.9694 #> alternative hypothesis: true distribution is not equal to normal"},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"conclusions","dir":"Articles","previous_headings":"","what":"Conclusions","title":"English Material","text":"qcr package developed provide users comprehensive set functions manage statistical process control, ranging univariate parametric analysis multivariate nonparametric statistics. package includes main types control charts capability indices. combines main features reputed SQC packages R qcc qualityTools proposal new graphical appearance implementation new SQC tools increasing importance Industry 4.0 multivariate nonparametric analysis. addition utilities provided reference R packages qcc, SixSigma qualityTools, qcr implements important statistical techniques Control Analysis tasks Six Sigma procedure included libraries. case control charts, tools MEWMA MCUSUM multivariate control charts, one hand, \\(r\\), \\(Q\\) \\(S\\) nonparametric control charts (univariate multivariate cases) based data depth, hand. also important note qcr provides functions perform nonparametric capability analysis. addition, new implementation process capability plots main parametric capability indices allows us analyze improvements process spread /process location needed obtain capable process. comparison suppliers, machines, etc., enabled capability plots. qcr package also includes automatic way delete control states process chart natural control limits estimation. utilities intend make qcr useful tool users wide variety industries, providing competitive alternative commercial software. study founded eCOAR project (PC18/03) CITIC. addition, work Salvador Naya, Javier Tarrío-Saavedra, Miguel Flores Rubén Fernéndez-Casal supported MINECO grants MTM2014-52876-R, MTM2017-82724-R, Xunta de Galicia (Grupos de Referencia Competitiva ED431C-2016-015, Centro Singular de Investigación de Galicia ED431G/01 2016-19), ERDF. research Miguel Flores partially supported Grant PII-DM-002-2016 Escuela Politécnica Nacional Ecuador. authors thank Mateo Larco Bibiana Santiso valuable help English edition.","code":""},{"path":"https://mflores72000.github.io/qcr/articles/en_material.html","id":"references","dir":"Articles","previous_headings":"Conclusions","what":"References","title":"English Material","text":"Pande, P.S.; Neuman, R.P.; Cavanagh, R.R. six sigma way: GE, Motorola, top companies honing performance; McGraw-Hill (New York), 2000. Montgomery, D.C. Introduction statistical quality control; John Wiley & Sons (New York), 2009. Champ, C.W.; Woodall, W.H. Exact results Shewhart control charts supplementary runs rules.Technometrics 1987, 29, 393-399. Liu, R.Y. Control charts multivariate processes. Journal American Statistical Association 1995, 90, 1380-1387. Boyles, R.. Taguchi capability index. Journal Quality Technology 1991, 23, 17-26. Polansky, .M. Process Capability Indices, Nonparametric. Encyclopedia Statistics Quality Reliability 2007. R Core Team. R: Language Environment Statistical Computing. R Foundation Statistical Computing, Vienna, Austria, 2018. Scrucca, L. qcc: R package quality control charting statistical process control. R News 2004, 4/1, 11-17. Barros, F. IQCC: Improved Quality Control Charts, 2017. R package version 0.7. Roth, T. qualityTools: Statistics Quality Science., 2016. R package version 1.55 http://www.r-qualitytools.org. Cano, E.L.; Moguerza, J.M.; Redchuk, . ; Vol. 36, Use R!, Springer-Verlag: New York, 2012. Cano, E.L.; Moguerza, J.M.; Corcoba, M.P. ; Use R!, Springer-Verlag: New York, 2015. Gandy, .; Kvaloy, J.T. Guaranteed Conditional Performance Control Charts via Bootstrap Methods. 2013, , 647-668. doi:10.1002/sjos.12006. Knoth, S. , 2018. R package version 0.6.0. Santos-Fernandez, E. ; Vol. 14, Springer-Verlag, 2013. Santos-Fernández, E.; Scagliarini, M. MPCI: R Package Computing Multivariate Process Capability Indices. 2012, , 1-15. Zhu, W.; Park, C. edcc: R Package Economic Design Control Chart. 2013, , 1-24. Brown, D.W.; Wetherill, G.B. ; Chapman Hall, 1990. Liu, R.Y.; Tang, J. Control charts dependent independent measurements based bootstrap methods. 1996, , 1694-1700. Flores, M.; Fernandez-Casal, R.; Naya, S.; Tarrio-Saavedra, J. , 2016. R package version 1.0. Page, E.S. Continuous inspection schemes. 1954, , 100-115. Roberts, S. Control chart tests based geometric moving averages. 1959, , 239-250. Woodall, W.H. Controversies contradictions statistical process control. 2000, 32, 341-350. Alt, F.B.; Smith, N.D. 17 multivariate process control. 1988, , 333-351. Woodall, W.H.; Ncube, M.M. Multivariate CUSUM quality-control procedures. 1985, , 285-292. Healy, J.D. note multivariate CUSUM procedures. 1987, , 409-412. Hawkins, D.M. Multivariate quality control based regression-adiusted variables. 1991, , 61-75. Crosier, R.B. Multivariate generalizations cumulative sum quality-control schemes. 1988, , 291-303. Pignatiello, J.J.; Runger, G.C. Comparisons multivariate CUSUM charts. 1990, , 173-186. Lowry, C..; Woodall, W.H.; Champ, C.W.; Rigdon, S.E. multivariate exponentially weighted moving average control chart. 1992, , 46-53. Runger, G.C.; Prabhu, S.S. Markov chain model multivariate exponentially weighted moving averages control chart. 1996, 91, 1701-1706. Dyckerhoff, R. Data depths satisfying projection property. 2004,, 163-190. Cascos, .; López, .; Romo, J. Data depth multivariate statistics. 2011, , 151-174. Liu, R.Y.; others. notion data depth based random simplices. 1990,, 405-414. Mahalanobis, P.C. generalised distance statistics. , 1936, pp. 49-55. Tukey, J.W. Mathematics picturing data. , 1975, Vol. 2, pp. 523-531. Fraiman, R.; Liu, R.Y.; Meloche, J. Multivariate density estimation probing depth. 1997, pp. 415-430. Zuo, Y.; Serfing, R. General notions statistical depth function. 2000, pp. 461-482. Vännman, K. unified approach capability indices. 1995, pp. 805-820. Vännman, K. graphical method control process capability. ; Springer-Verlag, 2001; pp. 290-311. Deleryd, M.; Vännman, K. Process capability plots-quality improvement tool. 1999, , 213-227. Hubele, N.F.; Vannman, K. Efect Pooled Un-pooled Variance Estimators \\(\\hat{C}\\) sub \\(\\hat{pn}\\) Using Subsamples. 2004, , 207. Pearn, W.; Chen, K. practical implementation process capability index Cpk. 1997, , 721-737. Tong, L..; Chen, J.P. Lower confidence limits process capability indices non-normal process distributions. 1998, , 907-919. Chang, P.L.; Lu, K.H. PCI calculations shape distribution percentile. 1994, pp. 110-114. Gruska, G.; Mirkhani, K.; Lamberson, L. Non Normal Data Analysis. St. Clair Shores, MI: 1989. Chou, Y.M.; Owen, D.; Borrego , S. Lower confidence limits process capability indices. 1990, , 223-229. Bissell, . reliable capability index? 1990, pp. 331-340. \\end{thebibliography}","code":""},{"path":"https://mflores72000.github.io/qcr/articles/material.html","id":"nuevas-librerias-para-el-control-estadísitco-de-la-calidad-qcr-y-estudios-interlaboratorio-ils-en-la-industria","dir":"Articles","previous_headings":"","what":"Nuevas Librerias para el Control Estadísitco de la Calidad (qcr) y Estudios Interlaboratorio (ILS) en la Industria:","title":"Material Extra","text":"Se presenta el Proyecto presentado para el cumplimiento de los requisitos para culminar el Máster en Técnicas Estadísticas de la Universidad de La Coruña del Dr. Miguel Flores, titulado:","code":""},{"path":[]},{"path":"https://mflores72000.github.io/qcr/articles/material.html","id":"cite","dir":"Articles","previous_headings":"Desarrollo de una aplicación para gráficos de control de procesos industriales","what":"Cite","title":"Material Extra","text":"Flores Sánchez, M. . (2013). Desarrollo de una aplicación para gráficos de control de calidad de procesos industriales (Master’s thesis, ESPAÑA/Facultad de Matemáticas-Universidad de La Coruña/2013). Se presenta la Tesis de Doctorado del Dr. Miguel Flores titulado:","code":"@mastersthesis{flores2013desarrollo,   title={Desarrollo de una aplicaci{\\'o}n para gr{\\'a}ficos de control de calidad de procesos industriales},   author={Flores S{\\'a}nchez, Miguel Alfonso},   year={2013},   school={ESPA{\\~N}A/Facultad de Matem{\\'a}ticas-Universidad de La Coru{\\~n}a/2013} }"},{"path":[]},{"path":"https://mflores72000.github.io/qcr/articles/material.html","id":"cite-1","dir":"Articles","previous_headings":"Nuevas Aportaciones del Análisis de Datos Funcionales en el Control Estadístico de Procesos","what":"Cite","title":"Material Extra","text":"Flores Sánchez, M. (2018). Nuevas aportaciones del análisis de datos funcionales en el control estadístico de procesos.","code":"@article{flores2018nuevas,   title={Nuevas aportaciones del an{\\'a}lisis de datos funcionales en el control estad{\\'\\i}stico de procesos},   author={Flores S{\\'a}nchez, Miguel},   year={2018} }"},{"path":"https://mflores72000.github.io/qcr/articles/Mqcc.html","id":"hotelling","dir":"Articles","previous_headings":"","what":"Hotelling","title":"Gráficos de Control de la calidad Multivariante","text":"Consideremos un proceso de control en el que se observan \\(p\\) variables que se distribuyen segúnn una Normal \\(p\\) variante con un vector de medias \\(\\mu_0=\\left(\\mu_{01},\\mu_{02},\\dots,\\mu_{0p}\\right)\\) y una matriz \\(\\Sigma_0\\) de varianzas-covarianzas de orden \\(p\\) denotada por \\(N_p\\left(\\mu_0,\\Sigma_0\\right)\\). Se desea contrastar las hipótesis: \\(H_0: \\mu_i = \\mu_0\\) vs. \\(H_1: \\mu_i \\ne \\mu_0\\) para determinar si el proceso está bajo control. Para esto se diseñan criterios para determinar si el proceso esta fuera de control que utilizan el estadístico \\(T^2\\) de Hotelling que dependiendo del estado de proceso sigue una determinada distribución. Cuando el proceso está bajo control, (\\(\\mu_i = \\mu_0\\)), existe una probabilidad \\(\\alpha\\) de que el estadístico \\(T^2_i\\) exceda al valor crítico \\(\\mathcal{X}^2_{p,\\alpha}\\). Por ello se toma como indicación o señal de fuera de control un valor del estadístico \\(T^2_i\\) que supera al valor \\(\\mathcal{X}^2_{p,\\alpha}\\). El estadístico \\(T^2\\) Hotelling es: \\[T^2_i=n\\left( \\bar{X}_i-\\mu_0\\right)^t \\Sigma_0^{-1}\\left( \\bar{X}_i-\\mu_0\\right)\\] donde \\(\\bar{X}_i=\\left( \\bar{X}_{i1},\\dots,\\bar{X}_{ip}\\right)\\) es el vector de medias para las \\(p-\\)características, en la \\(-\\)ésima muestra. Cuando el tamaño del subgrupo \\(n = 1\\), se obtendrán vectores de observaciones en lugar de vectores de medias. En el contexto geométrico, el estadístico \\(T^2\\) es una proporción de la distancia (Mahalanobis) al cuadrado entre una observación multivariada y el vector de valores objetivo (vector de media), donde puntos equidistantes forman elipsoides alrededor de dicho vector. mayor valor de \\(T^2\\), mayor es la distancia entre la observación y el valor objetivo. Si \\(\\mu_0\\) y \\(\\Sigma_0\\) son conocidos y el proceso está bajo control, el estadístico \\(T^2_i\\) se distribuye como una chi-cuadrado central con \\(p\\) grados de libertad (\\(T^2_i\\approx \\mathcal{X}^2_p\\)). Cuando el proceso está bajo control, el estadístico \\(T^2_i\\) se distribuye como una variable chi- cuadrado central con \\(p\\) grados de libertad y con parámetro de centralidad: \\(\\lambda = n\\left( \\mu_1-\\mu_0\\right)^t \\Sigma_0^{-1}\\left( \\mu_1-\\mu_0\\right)\\), con \\(\\mu_1 \\ne \\mu_0\\); donde \\(\\mu_1\\) es el vector de medias de las \\(p\\) características, cuando existe un cambio \\(d\\) en al menos una de las medias. En la práctica, el valor del estadístico \\(T^2\\) se estima mediante los correspondientes valores muestrales, dando como resultado la siguiente expresión: \\[ T^2=n\\left( \\bar{X}-\\bar{\\bar{X}}\\right)^t S^{-1}\\left( \\bar{X}-\\bar{\\bar{X}}\\right)\\] Con distribución bajo la hipótesis nula: \\[T^2 \\approx \\frac{p\\left( m-1\\right) \\left(n-1 \\right) }{mn-m-p+1}F_{\\alpha,p,mn-m-p+1}\\] Es decir, el estadístico \\(T^2\\) sigue apróximadamente en este caso una \\(F\\) de Snedecor con \\(p\\) y \\(\\left( mn-m-p+1\\right)\\) grados de libertad, para un nivel de significación del \\(\\alpha \\%\\). Dado que tanto la distribución \\(\\mathcal{X}^2\\) y la \\(F\\) son asimétricas con sesgo la derecha, se considera únicamente la expresión para el límite de control superior, que viene dada por: \\[LCS=\\frac{p\\left( m-1\\right) \\left(n-1 \\right) }{mn-m-p+1}F_{\\alpha,p,mn-m-p+1}\\] Para el límite inferior se considera \\(LCI=0\\) Además, para procesos en los que el \\(m\\) es suficientemente grande, \\(m>100\\), se puede aproximar este límite por \\(LCS=\\textit{X}^2_{\\alpha,p}\\). Alt (1985) recomienda usar estos límites en una primera fase, lo que denomina análisis retrospectivo, para una vez estimado el límite de control por este medio, calcular un segundo límite para la segunda fase, la de monotorización del proceso, para ello propone un cambio consistente en multiplicar por la expresión \\(\\frac{m+1}{m-1}\\) obteniendo así una nueva expresión para el límite de control superior LCS. En el caso de observaciones individuales, es decir \\(n=1\\), suponiendo que se tienen un total de \\(m\\) muestras, para evaluar \\(p\\) variables de control, el correspondiente gráfico de control se construye mediante: \\[LCS=\\frac{p\\left( m+1\\right) \\left(n-1 \\right) }{m^2-mp}F_{\\alpha,p,m-p}\\] \\[LCI=0\\]","code":"data(dowel1) str(dowel1) #> 'data.frame':    40 obs. of  2 variables: #>  $ diameter: num  0.492 0.501 0.491 0.492 0.505 0.5 0.497 0.509 0.49 0.499 ... #>  $ length  : num  0.988 1.011 1.008 0.97 1.003 ... data.mqcd <- mqcd(dowel1) res.mqcs <- mqcs.t2(data.mqcd) summary(res.mqcs) #>  #> Summary of group statistics: #>        V1          #>  Min.   :0.09137   #>  1st Qu.:0.60154   #>  Median :1.66096   #>  Mean   :1.95000   #>  3rd Qu.:2.64402   #>  Max.   :5.34020   #>  #> Number of quality characteristics:  2 #> Number of samples or observations:  40 #> Number of observations or sample size:  1 #>  #> Mean Vector:  #>  0.500875 1.001825 #> Covariance Matrix: #>          diameter       length #> [1,] 4.908654e-05 8.584936e-05 #> [2,] 8.584936e-05 4.199429e-04 #>  #> Control limits:  #>      lcl      ucl  #>  0.00000 12.44888  #>  #> Number beyond limits: 0 plot(res.mqcs, title =\" Hotelling Control Chart for dowel1\")"},{"path":"https://mflores72000.github.io/qcr/articles/Mqcc.html","id":"gráficos-mcusum","dir":"Articles","previous_headings":"","what":"Gráficos MCUSUM","title":"Gráficos de Control de la calidad Multivariante","text":"Los gráficos CUSUM pueden extenderse también al caso multivariante, aunque hay una única forma de hacerlo. Los primeros en realizar estudios en la materia fueron Woodall y Ncube (1985), usando un esquema basado en múltiples (\\(p\\)) CUSUM univariantes. Healy (1987) desarrolló un modelo de gráfico CUSUM multivariante mediante: \\[G_i=max\\left\\lbrace \\left( G_{-1}+^t\\left( x_i-\\mu_0\\right)-0,5\\lambda\\mu_1 \\right),0 \\right\\rbrace \\] Donde: \\(\\mu_0\\): Vector de medias cuando el proceso está bajo control \\(\\Sigma_0\\): Matriz de varianzas-covarianzas bajo control \\(\\mu_1\\): Vector de medias cuando el proceso est’bajo control \\(\\lambda\\mu_1\\): Ra’iz cuadrada del par’ametro de descentrado \\(^t=\\frac{}{\\lambda\\mu_1}\\), \\(=\\left(\\mu_1-\\mu_0\\right)^t\\Sigma_0^{-1}\\) Para interpretar el gráfico se considera que se produce una señal de alarma cuando \\(G_i\\) supera un cierto valor de referencia \\(H\\), convenientemente elegido y que se encuentra tabulado. Hawkins (1991) desarrolla un modelo para variables ajustadas mediante regresión multivariante, en base la suposición de que cuando se produce un cambio en la media, se produce de una determinada manera. Concretamente se asume que el cambio se debe una variación de magnitud \\(d\\) en la media de una de las variables. Otras propuesta de gráficos MCUSUM son los de Croisier (1988) o los de Pignatiello y Runger (1990). En el paquete qcr se ha implementado el procedimiento de Croisier que reduce cada observación multivariada un escalar y luego construye el estadístico CUSUM con los escalares. Croisier considera el siguiente estadístico: \\(T_i=\\sqrt{T^2_i}=\\sqrt{n\\left( \\bar{X}_i-\\mu_0\\right)^t \\Sigma_0^{-1}\\left( \\bar{X}_i-\\mu_0\\right)}\\) Crosier considera el estadístico \\(T\\) porque de esa manera, se acumulan distancias en lugar de distancias al cuadrado. El estadístico MCUSUM se calcula de la siguiente manera: %\\[ S_i=max\\left\\lbrace0,S_{-1}+T_i-k \\right\\rbrace \\] donde \\(S_0\\ge 0\\) (en general se considera \\(S_0=0\\)) y \\(k>0\\). El gráfico MCUSUM da una señal de fuera de control cuando el valor de \\(S_i\\) es mayor que un cierto valor \\(h\\) que depende del valor del \\(ARL\\) deseado cuando el proceso está funcionando en el valor objetivo \\(\\left[ S_i > h \\right]\\). Para determinar los valores de h y k para \\(p = 2, 5,10\\) y \\(20\\) y para valores de \\(ARL\\) de \\(200\\) y de \\(500\\) cuando el proceso está bajo control Crosier empleo procesos de Markov. Estas tablas se diseñaron para detectar un cambio \\(d = 1\\) en el vector de medias, donde \\(d = \\lambda\\) , con \\(\\lambda\\) parámetro de centralidad. En este caso especial los valores de \\(k\\) ’optimos se aproximan \\(p\\).","code":"data(dowel1) str(dowel1) #> 'data.frame':    40 obs. of  2 variables: #>  $ diameter: num  0.492 0.501 0.491 0.492 0.505 0.5 0.497 0.509 0.49 0.499 ... #>  $ length  : num  0.988 1.011 1.008 0.97 1.003 ... data.mqcd <- mqcd(dowel1) res.mqcs <- mqcs.mcusum(data.mqcd) summary(res.mqcs) #>  #> Summary of group statistics: #>        V1         #>  Min.   :0.0000   #>  1st Qu.:0.7749   #>  Median :1.1501   #>  Mean   :1.3818   #>  3rd Qu.:1.9987   #>  Max.   :3.8409   #>  #> Number of quality characteristics:  2 #> Number of samples or observations:  40 #> Number of observations or sample size:  1 #>  #> Mean Vector:  #>  0.500875 1.001825 #> Covariance Matrix: #>          diameter       length #> [1,] 4.908654e-05 8.584936e-05 #> [2,] 8.584936e-05 4.199429e-04 #>  #> Control limits:  #> lcl ucl  #> 0.0 5.5  #>  #> Number beyond limits: 0 plot(res.mqcs, title =\" MCUSUM Control Chart for dowel1\")"},{"path":"https://mflores72000.github.io/qcr/articles/Mqcc.html","id":"gráficos-mewma","dir":"Articles","previous_headings":"","what":"Gráficos MEWMA","title":"Gráficos de Control de la calidad Multivariante","text":"El gráfico de medias móviles ponderadas exponencialmente para el caso multivariante (MEWMA) es una extensión esta nueva situación del correspondiente gráfico univariante. La extensión multivariante, propuesta por Lowry (1992), adopta la forma: \\[Z_i=\\Lambda X_i +\\left( -\\Lambda\\right)Z_{-1}\\] donde: \\(X_i\\) es el vector de medias muestrales y \\(\\Lambda\\) es la matriz diagonal formada por los valores \\(\\lambda\\) para las distintas variables. Los \\(\\lambda_j\\) marcan la profundidad de la memoria para cada variable. mayor valor de \\(r_j\\), menor profundidad. \\(\\) es la matriz identidad y se considera como valor inicial \\(Z_0=0\\). La información que proporcionan los \\(Z_i\\) se recoge en el estadístico: \\[T^2_i=Z_i^t\\Sigma_{Z_i}^{-1}Z_i\\] Donde \\(\\Sigma_{Z_i}^{-1}\\) es la inversa de la matriz de varianzas-covarianzas de los \\(Z_i\\). La señal de salida de control se produce cuando \\(T_i^2\\) supera un cierto valor \\(h\\), (\\(h>0\\)) seleccionado de manera tal de lograr un cierto valor de \\(ARL\\) cuando el proceso está bajo control. Si existe priori ninguna razón para ponderar en forma diferente las observaciones pasadas de cada una de las \\(p\\) variables (como generalmente sucede), entonces se considera \\(\\lambda_1=\\dots=\\lambda_p\\). La matriz \\(\\Sigma_{Z_i}\\) puede obtenerse partir de los elementos de la matriz de varianzascovarianzas correspondiente las variables analizadas mediante la expresi’: \\[\\Sigma_{Z_i}=\\frac{\\lambda}{2-\\lambda}\\left[ 1-\\left( 1-\\lambda\\right)^{2i} \\right]\\Sigma_x \\] donde \\(\\Sigma_x\\) es la matriz de varianzas-covarianzas original. Cuando \\(r=1\\), el gráfico MEWMA coincide con el gráfico de control \\(T^2\\) dado que el valor asintótico de la matriz de varianza-covarianza de \\(Z_i\\) es: \\[\\Sigma_{Z_i}=\\frac{\\lambda}{2-\\lambda}\\Sigma_x \\] En lo que respecta al límite de control (superior) empleado, Runger y Prabhu (1996) sugieren una aproximación mediante cadenas de Markov, que permite estudiar el funcionamiento del gráfico referente al \\(ARL\\). Proporcionan además una serie de recomendaciones para la selección de los par’ametros del gráfico. En lo que se refiere al parámetro \\(\\lambda\\), Montgomery (1991) recomienda que su valor está comprendido entre 0.05 y 0.25. Cuanto mayor sea el valor del parámetro, menor importancia se le estará dando los valores más alejados en el tiempo. En aplicaciones prácticas se elige 0.1 como el valor del parámetro \\(\\lambda\\).","code":"data(dowel1) str(dowel1) #> 'data.frame':    40 obs. of  2 variables: #>  $ diameter: num  0.492 0.501 0.491 0.492 0.505 0.5 0.497 0.509 0.49 0.499 ... #>  $ length  : num  0.988 1.011 1.008 0.97 1.003 ... data.mqcd <- mqcd(dowel1) res.mqcs <- mqcs.mewma(data.mqcd) summary(res.mqcs) #>  #> Summary of group statistics: #>        V1          #>  Min.   :0.04165   #>  1st Qu.:0.95586   #>  Median :1.69276   #>  Mean   :1.62204   #>  3rd Qu.:1.89606   #>  Max.   :4.17595   #>  #> Number of quality characteristics:  2 #> Number of samples or observations:  40 #> Number of observations or sample size:  1 #>  #> Mean Vector:  #>  0.500875 1.001825 #> Covariance Matrix: #>          diameter       length #> [1,] 4.908654e-05 8.584936e-05 #> [2,] 8.584936e-05 4.199429e-04 #>  #> Control limits:  #>    lcl    ucl  #> 0.0000 8.6336  #>  #> Number beyond limits: 0 plot(res.mqcs, title =\" MEWMA Control Chart for dowel1\")"},{"path":"https://mflores72000.github.io/qcr/articles/Npqcc.html","id":"gráficos-de-control-de-la-calidad-no-paramétricos","dir":"Articles","previous_headings":"","what":"Gráficos de control de la calidad no paramétricos","title":"Gráficos de control de la calidad no paramétricos","text":"Los gráficos de control que se presenta en esta sección son propuestas por Regina Liu (Liu, 1995). La idea principal bajo sus gráficos de control es reducir cada medida multivariante un índice univariado, o mejor dicho su ordenamiento relativo del centro hacia afuera inducido por profundidad de datos. Este planteo es completamente paramétrico, y así las cartas resultantes son válidas sin suposiciones paramétricas en el modelo del proceso. Estos gráficos permiten detectar simultáneamente el cambio en localización (desplazamiento de la media) y el incremento de escala (cambio en variabilidad) en un proceso. Liu desarrolló los gráficos de control r, Q y S los cuales pueden ser vistos como generalizaciones multivariadas basadas en profundidad de datos de los gráficos univariadas X, \\(\\bar{x}\\) y Cusum respectivamente.","code":""},{"path":"https://mflores72000.github.io/qcr/articles/Npqcc.html","id":"profundidad-de-datos","dir":"Articles","previous_headings":"Gráficos de control de la calidad no paramétricos","what":"Profundidad de datos","title":"Gráficos de control de la calidad no paramétricos","text":"En el análisis multivariante, el término profundidad se refiere al grado de centralidad de un punto con respecto una nube de puntos o una distribución de probabilidad. Por tanto, es posible definir un orden en el espacio euclídeo multidimensional través de la profunidad de un dato. Según Dyckerhoff ,(Dyckerhoff, 2004) y expuestas por Cascos (Cascos, 2011) la definición de la función de profundidad es: Si se fija una distribución \\(P\\) en \\(R^{d}\\), una función de profundidad es una función acotada \\(D_{p}:R^{d} \\longrightarrow R\\) que asigna cada punto de \\(R^{d}\\) su grado de centralidad respecto de P. Las funciones de profundidad con las que se pueden realizar los gráficos de control son: Profundidad Simplicial (Liu, 1990) Profundidad de Mahalanobis (Mahalanobis 1936) Profundidad Semiespacial (Half-Space) o de Tukey (Hodges, 1955, Tukey, 1975) Profundidad de Verosimilitud (Likelihood Depth), (Fraiman y Meloche, 1996), (Liu, 1999) Profundidad de las Proyecciones (Random Projection Depth) (Zuo y Serfling, 2000) Para el cálculo de las profundidades se utiliza el paquete fda.qcr.","code":""},{"path":"https://mflores72000.github.io/qcr/articles/Npqcc.html","id":"estadísticos-derivados-de-la-profundidad-de-datos","dir":"Articles","previous_headings":"Gráficos de control de la calidad no paramétricos > Profundidad de datos","what":"Estadísticos derivados de la profundidad de datos","title":"Gráficos de control de la calidad no paramétricos","text":"Sea \\(G\\) la distribución \\(k-\\)dimensional y \\(Y_1,Y_2,\\ldots,Y_m\\); m observaciones aleatorias de \\(G\\). La mencionada muestra es una muestra de referencia en el contexto de control de calidad y se considera como medidas de los productos producidos en un proceso bajo control. Sean \\(X_1,X_2,\\ldots,X_n\\) las nuevas observaciones provenientes del proceso de manufactura, se asume que siguen una distribución \\(F\\), si la calidad del producto se ha deteriorado o si el proceso está fuera de control, caso contrario siguen una distribución \\(G\\). Si se ordenan todas las profundidades \\(D_{G}\\left(Y_{}\\right)\\) en orden ascendente y se usa \\(Y_{\\left[ j\\right] }\\) para denominar al punto de la muestra asociado con el \\(j-\\)ésimo valor de profundidad más pequeño, entonces \\(Y_{\\left[ 1\\right]},\\ldots,Y_{\\left[ m\\right]}\\) siendo \\(Y_{\\left[ m\\right]}\\) el punto más central. Mientras más pequeño el índice (o rango) de un punto, más externo será ese punto respecto de la distribución subyacente \\(G\\left( .\\right)\\). Liu (Liu, 1995) define el rango (Rank): \\(r_{G}\\left( y\\right)= P\\left\\lbrace D_{G}\\left( Y\\right) \\leq D_{G}\\left( y\\right) \\mid Y\\sim G \\right\\rbrace\\) \\(Y\\sim G\\) indica que la variable aleatoria \\(Y\\) sigue la distribución \\(G\\). Para el caso en que \\(G\\) es desconocida y sólo se conoce la muestra \\(\\left\\lbrace Y_{1},\\ldots,Y_{m} \\right\\rbrace\\): \\(r_{G_{m}}\\left( y\\right)= \\frac{ \\sharp \\left\\lbrace D_{G_{m}}\\left( Y_j\\right) \\leq D_{G_{m}}\\left( y\\right), j = 1,\\ldots,m \\right\\rbrace}{m}\\) Si \\(F_{n}\\left( .\\right)\\) representa la distribución empírica de la muestra \\(X_1,X_2, ...,X_n\\) entonces en el mismo trabajo, Liu define, (Liu, 1995). índice \\(Q\\): \\(Q\\left( G,F\\right)= P\\left\\lbrace D_{G}\\left( Y\\right) \\leq D_{G}\\left( X\\right) \\mid Y\\sim G, X\\sim F \\right\\rbrace=E_{F}\\left[ r_{G}\\left( X\\right) \\right]\\) \\(Q\\left( G,F_{n}\\right)= \\frac{1}{n} \\sum _{=1}^{n} r_{G}\\left( X_i\\right)\\) \\(Q\\left( G_{m},F_{n}\\right)= \\frac{1}{n} \\sum _{=1}^{n} r_{G_{m}}\\left( X_i\\right)\\)","code":""},{"path":"https://mflores72000.github.io/qcr/articles/Npqcc.html","id":"gráfico-de-control-r","dir":"Articles","previous_headings":"Gráficos de control de la calidad no paramétricos","what":"Gráfico de control r","title":"Gráficos de control de la calidad no paramétricos","text":"Se calcula \\(\\left\\lbrace r_{G}\\left( X_1\\right),r_{G}\\left( X_2\\right),\\ldots,r_{G}\\left( X_n\\right)\\right\\rbrace\\) ó \\(\\left\\lbrace r_{G_{m}}\\left( X_1\\right),r_{G_{m}}\\left( X_2\\right),\\ldots,r_{G_{m}}\\left( X_n\\right)\\right\\rbrace\\) si sólo está disponible \\(Y_1,\\ldots,Y_m\\) pero \\(G\\). El gráfico de control r, consiste en graficar el estadístico rank versus el tiempo. Cuyo límite de control central \\(LC = 0.5\\) y límite inferior es \\(LCI = \\alpha\\), donde \\(\\alpha\\) es la tasa de falsa alarma. El proceso es declarado fuera de control si al menos uno de los estadísticos rank cae bajo \\(LCI\\). Un valor pequeño del estadístico rank \\(r_{G_{m}}\\left( X\\right)\\) significa que sólo una muy pequeña proporción de \\(Y_i~^{'}\\) son más externos que \\(X\\). Entonces, si se asume que \\(X \\sim F\\) entonces un valor pequeño de \\(r_{G_{m}}\\left( X\\right)\\) sugiere una posible desviación desde \\(G\\) \\(F\\). Esta puede ser por un desplazamiento en la localización y/o un incremento en escala de la variable de calidad. Aunque el gráfico r dispone de la línea UCL para hacer de CL la línea central de la región bajo control, la línea CL sirve como punto de referencia que permite observar si aparece o se está gestando un patrón o tendencia en una secuencia de muestras. Sí \\(r_{G_{m}}\\left( X\\right)\\) es mayor que \\(0.5\\); hay indicios de una disminución en escala con quizás un despreciable desplazamiento de localización. Esto es visto como una mejora en calidad dada una ganancia en la precisión, y así el proceso se vería como fuera de control.","code":"set.seed(356) mu<-c(0,0) Sigma<- matrix(c(1,0,0,1),nrow = 2,ncol = 2) u <- c(2,2) S <- matrix(c(4,0,0,4),nrow = 2,ncol = 2) G <- rmvnorm(540, mean = mu, sigma = Sigma) x<- rmvnorm(40,mean=u,sigma = S) x <- rbind(G[501:540,],x) M <- G[1:500,] data.npqcd <- npqcd(x,M) str(data.npqcd) #> List of 2 #>  $ x: num [1:80, 1:2, 1] 0.995 -1.274 -1.174 -0.347 0.931 ... #>  $ G: num [1:500, 1:2] 0.306 -0.322 1.389 1.438 -0.784 ... #>  - attr(*, \"data.name\")= chr \"DATA\" #>  - attr(*, \"type.data\")= chr \"Multivariate\" #>  - attr(*, \"class\")= chr [1:2] \"npqcd\" \"list\" res.npqcs <- npqcs.r(data.npqcd,method = \"Liu\", alpha=0.025) str(res.npqcs) #> List of 9 #>  $ npqcd     :List of 2 #>   ..$ x: num [1:80, 1:2, 1] 0.995 -1.274 -1.174 -0.347 0.931 ... #>   ..$ G: num [1:500, 1:2] 0.306 -0.322 1.389 1.438 -0.784 ... #>   ..- attr(*, \"data.name\")= chr \"DATA\" #>   ..- attr(*, \"type.data\")= chr \"Multivariate\" #>   ..- attr(*, \"class\")= chr [1:2] \"npqcd\" \"list\" #>  $ type      : chr \"r\" #>  $ depth.data: num [1:80, 1] 0.0243 0.0866 0.0292 0.2412 0.1214 ... #>  $ statistics: num [1:80, 1] 0.242 0.532 0.268 0.974 0.666 0.268 0.42 0.136 0.824 0.118 ... #>  $ alpha     : num 0.025 #>  $ limits    : Named num [1:2] 0.025 0.5 #>   ..- attr(*, \"names\")= chr [1:2] \"lcl\" \"cl\" #>  $ data.name : chr \"DATA\" #>  $ method    : chr \"Liu\" #>  $ violations: int [1:25] 42 43 44 46 48 49 50 52 53 54 ... #>  - attr(*, \"class\")= chr [1:2] \"npqcs.r\" \"npqcs\" summary(res.npqcs) #>  #> Summary of group statistics: #>        V1         #>  Min.   :0.0140   #>  1st Qu.:0.0140   #>  Median :0.1970   #>  Mean   :0.3018   #>  3rd Qu.:0.4810   #>  Max.   :0.9760   #>  #> Number of quality characteristics:  2 #> Number of samples or observations:  80 #> Number of observations or sample size:  1 #> Control limits:  #>   lcl    cl  #> 0.025 0.500  #>  #> Beyond limits of control:  #>  [1] 0.014 0.014 0.014 0.014 0.014 0.014 0.014 0.014 0.014 0.014 0.014 0.014 #> [13] 0.014 0.014 0.014 0.014 0.016 0.014 0.014 0.014 0.014 0.014 0.014 0.014 #> [25] 0.014 plot(res.npqcs,title =\" r Control Chart\")"},{"path":"https://mflores72000.github.io/qcr/articles/Npqcc.html","id":"gráfico-de-control-q","dir":"Articles","previous_headings":"Gráficos de control de la calidad no paramétricos","what":"Gráfico de control Q","title":"Gráficos de control de la calidad no paramétricos","text":"La idea detrás del gráfico Q es similar la del gráfico \\(\\bar{X}\\). Si \\(X_1,X_2,\\ldots\\) son univariadas y \\(G\\) es normal, el gráfico \\(\\bar{X}\\) dibuja los promedios de subconjuntos consecutivos de tamaño. Una característica de este gráfico, es que puede prevenir una falsa alarma cuando el proceso en realidad está en control pero algún punto de la muestra individual cayó fuera de los límites de control debido sólo fluctuaciones aleatorias. Esta es una ventaja del gráfico \\(\\bar{X}\\) sobre el gráfico \\(X\\). Para el caso del gráfico Q, se dibuja los promedios de subconjuntos consecutivos de tama~o n, del estadístico rank (\\(r_{G}\\left( X_i\\right)\\) ó \\(r_{G_{m}}\\left( X_i\\right)\\)) que se denota por \\(Q\\left( G,F_{n}^j\\right)\\) ó \\(Q\\left( G_{m},F_{n}^j\\right)\\), aquí \\(F_n^j\\) es la distribución empírica de los \\(X_i\\). El gráfico Q dibuja los siguientes conjuntos de puntos: \\(\\left\\lbrace Q\\left( G_{m},F_{n}^j\\right),Q\\left( G_{m},F_{n}^j\\right),.\\ldots\\right\\rbrace\\), si sólo se dispone de \\(\\left\\lbrace Y_1, Y_2,\\ldots, Y_m \\right\\rbrace\\). Los límites de control son los siguientes: \\(n \\geq 5\\) \\(CL = 0.5; LCL = 0.5-Z_{\\alpha}\\left( 12n\\right)^{\\frac{1}{2}} \\quad para \\quad dibujar \\quad Q\\left( G,F_{n}^j\\right)\\) \\(CL = 0.5; LCL = 0.5-Z_{\\alpha}\\sqrt{\\frac{1}{12•}\\left(\\frac{1}{m}+\\frac{1}{n}\\right) } \\quad para \\quad dibujar \\quad Q\\left( G_m,F_{n}^j\\right)\\) \\(n < 5\\) \\(CL = 0.5; LCL = \\frac{\\left( n!\\alpha\\right)^{\\frac{1}{n}}}{n}\\)","code":"set.seed(12345) mu<-c(0,0) Sigma<- matrix(c(1,0,0,1),nrow = 2,ncol = 2) u <- c(2,2) S <- matrix(c(4,0,0,4),nrow = 2,ncol = 2) G <- rmvnorm(540, mean = mu, sigma = Sigma) x<- rmvnorm(40,mean=u,sigma = S) x <- rbind(G[501:540,],x) n <- 4 # samples m <- 20  # measurements k <- 2  # number of variables x.a <- array(,dim=c(n,k,m)) for (i in 1:m){   x.a[,,i] <- x[(1+(i-1)*n):(i*n),] } M <- G[1:500,] data.npqcd <- npqcd(x.a,M) str(data.npqcd) #> List of 2 #>  $ x: num [1:4, 1:2, 1:20] 1.6775 -0.8564 -0.3809 -0.0718 0.0795 ... #>  $ G: num [1:500, 1:2] 0.586 -0.109 0.606 0.63 -0.284 ... #>  - attr(*, \"data.name\")= chr \"DATA\" #>  - attr(*, \"type.data\")= chr \"Multivariate\" #>  - attr(*, \"class\")= chr [1:2] \"npqcd\" \"list\" res.npqcs <- npqcs.Q(data.npqcd,method = \"Liu\", alpha=0.025) str(res.npqcs) #> List of 8 #>  $ npqcd     :List of 2 #>   ..$ x: num [1:4, 1:2, 1:20] 1.6775 -0.8564 -0.3809 -0.0718 0.0795 ... #>   ..$ G: num [1:500, 1:2] 0.586 -0.109 0.606 0.63 -0.284 ... #>   ..- attr(*, \"data.name\")= chr \"DATA\" #>   ..- attr(*, \"type.data\")= chr \"Multivariate\" #>   ..- attr(*, \"class\")= chr [1:2] \"npqcd\" \"list\" #>  $ type      : chr \"Q\" #>  $ statistics: num [1:20] 0.352 0.604 0.346 0.623 0.456 ... #>  $ alpha     : num 0.025 #>  $ limits    : Named num [1:2] 0.22 0.5 #>   ..- attr(*, \"names\")= chr [1:2] \"lcl\" \"cl\" #>  $ data.name : chr \"DATA\" #>  $ method    : chr \"Liu\" #>  $ violations: int [1:10] 11 12 13 14 15 16 17 18 19 20 #>  - attr(*, \"class\")= chr [1:2] \"npqcs.Q\" \"npqcs\" summary(res.npqcs) #>  #> Summary of group statistics: #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #> 0.01400 0.08637 0.25725 0.28715 0.46450 0.62350  #>  #> Number of quality characteristics:  2 #> Number of samples or observations:  4 #> Number of observations or sample size:  20 #> Control limits:  #>       lcl        cl  #> 0.2200279 0.5000000  #>  #> Beyond limits of control:  #>  [1] 0.1135 0.1580 0.0590 0.1680 0.0565 0.0900 0.0140 0.0755 0.0640 0.1115 plot(res.npqcs,title =\" Q Control Chart\")"},{"path":"https://mflores72000.github.io/qcr/articles/Npqcc.html","id":"gráfico-de-control-s","dir":"Articles","previous_headings":"Gráficos de control de la calidad no paramétricos","what":"Gráfico de control S","title":"Gráficos de control de la calidad no paramétricos","text":"El gráfico de control S se inspira en el gráfico de control univariado CUSUM. Esta dibuja \\(\\sum_{=1}^{n}\\left( X - \\mu \\right)\\) lo cual refleja el patrón de la desviación total del valor esperado. Este gráfico de control es más efectivo que los gráficos \\(X\\) o \\(\\bar{X}\\) en detectar pequeños cambios del proceso. En el gráfico de control S se dibujan los puntos correspondientes las expresiones siguientes: En el caso de contar con \\(G\\): \\(S_n\\left( G\\right) = \\sum_{=1}^{n}\\left( r_G\\left( X_i\\right) - \\frac{1}{2} \\right)\\) Los límites de control son los siguientes: \\(CL = 0; LCL = -Z_{\\alpha}\\left(\\frac{n}{12}\\right)^{\\frac{1}{2}}\\) En el caso de contar con \\(Y_1,\\ldots,Y_m\\): \\(S_n\\left( G_m\\right) = \\sum_{=1}^{n}\\left( r_{G_{m}}\\left( X_i\\right) - \\frac{1}{2} \\right)\\) Los Límites de Control son los siguientes: \\(CL = 0; LCL = -Z_{\\alpha}\\sqrt{n^2\\frac{\\left(\\frac{1}{m}+\\frac{1}{n}\\right)}{12}}\\) Los límites de control LCL en ambos casos constituyen una curva en vez de una recta; si n es grande el gráfico de control S fácilmente excedería el tamaño del papel, por lo que se estandariza de la siguiente manera respectivamente: \\(S_n^{*}\\left( G\\right) = \\frac{S_n^{*}\\left(G\\right)}{\\sqrt{\\frac{n}{12}}}\\) \\(S_n^{*}\\left( G_m\\right) = \\frac{S_n\\left(G_m\\right)}{\\sqrt{n^2\\frac{\\left(\\frac{1}{m}+\\frac{1}{n}\\right)}{12}}}\\) Los límites de control en los dos casos son los siguientes: \\(CL = 0; LCL = -Z_{\\alpha}\\)","code":"set.seed(12345) mu<-c(0,0) Sigma<- matrix(c(1,0,0,1),nrow = 2,ncol = 2) u <- c(2,2) S <- matrix(c(4,0,0,4),nrow = 2,ncol = 2) G <- rmvnorm(540, mean = mu, sigma = Sigma) x<- rmvnorm(40,mean=u,sigma = S) x.a <- rbind(G[501:540,],x) M <- G[1:500,] data.npqcd <- npqcd(x.a,M) str(data.npqcd) #> List of 2 #>  $ x: num [1:80, 1:2, 1] 1.6775 -0.8564 -0.3809 -0.0718 0.6707 ... #>  $ G: num [1:500, 1:2] 0.586 -0.109 0.606 0.63 -0.284 ... #>  - attr(*, \"data.name\")= chr \"DATA\" #>  - attr(*, \"type.data\")= chr \"Multivariate\" #>  - attr(*, \"class\")= chr [1:2] \"npqcd\" \"list\" res.npqcs <- npqcs.S(data.npqcd,method = \"Liu\", alpha=0.05) str(res.npqcs) #> List of 8 #>  $ npqcd     :List of 2 #>   ..$ x: num [1:80, 1:2, 1] 1.6775 -0.8564 -0.3809 -0.0718 0.6707 ... #>   ..$ G: num [1:500, 1:2] 0.586 -0.109 0.606 0.63 -0.284 ... #>   ..- attr(*, \"data.name\")= chr \"DATA\" #>   ..- attr(*, \"type.data\")= chr \"Multivariate\" #>   ..- attr(*, \"class\")= chr [1:2] \"npqcd\" \"list\" #>  $ type      : chr \"S\" #>  $ statistics: num [1:80] -0.741 -0.66 -1.292 -1.025 -0.515 ... #>  $ alpha     : num 0.05 #>  $ limits    : Named num [1:2] 0 -1.64 #>   ..- attr(*, \"names\")= chr [1:2] \"cl\" \"lcl\" #>  $ data.name : chr \"DATA\" #>  $ method    : chr \"Liu\" #>  $ violations: int [1:33] 48 49 50 51 52 53 54 55 56 57 ... #>  - attr(*, \"class\")= chr [1:2] \"npqcs.S\" \"npqcs\" summary(res.npqcs) #>  #> Summary of group statistics: #>     Min.  1st Qu.   Median     Mean  3rd Qu.     Max.  #> -6.12323 -3.58085 -0.85896 -2.00763 -0.42436  0.03105  #>  #> Number of quality characteristics:  2 #> Number of samples or observations:  80 #> Number of observations or sample size:  1 #> Control limits:  #>        cl       lcl  #>  0.000000 -1.644854  #>  #> Beyond limits of control:  #>  [1] -1.710765 -1.836190 -2.043093 -2.245696 -2.444181 -2.638716 -2.829460 #>  [8] -2.937644 -2.929749 -3.040439 -3.220669 -3.397692 -3.569932 -3.613600 #> [15] -3.782822 -3.949234 -4.112929 -4.273995 -4.432519 -4.588579 -4.742254 #> [22] -4.893616 -4.947340 -5.095040 -5.240611 -5.384115 -5.525610 -5.665153 #> [29] -5.728754 -5.743827 -5.879246 -6.012889 -6.123226 plot(res.npqcs,title =\" S Control Chart\")"},{"path":[]},{"path":"https://mflores72000.github.io/qcr/articles/Uqcc.html","id":"gráficos-para-la-media-y-el-rango","dir":"Articles","previous_headings":"Gráficos de control de la calidad univariantes","what":"Gráficos para la media y el rango","title":"Gráficos de control de la calidad univariantes","text":"Calcular la media y el rango de cada muestra, \\(\\bar{x}_i\\) y \\(R_i\\), respectivamente \\(=1,\\dots,k\\). Calcular la media y el rango global. Puesto que \\(R_i/d_2\\) es un estimador insesgado de \\(\\sigma\\), y definiendo \\[ \\bar{R}=\\frac{\\sum_iR_i}{k} \\] se utilizará \\[ \\frac{\\bar{R}}{d_2}=\\frac{\\sum_iR_i}{d_2k} \\] como estimador centrado de la desviación típica teórica. Contrastar si cada valor \\(\\bar{x}_i\\) debe estar en el intervalo \\[ \\left[\\bar{\\bar{x}}-\\frac{3\\bar{R}}{\\sqrt{n}d_2},\\bar{\\bar{x}}+\\frac{3\\bar{R}}{\\sqrt{n}d_2}\\right] \\] con probabilidad aproximada del 97.73% (utilizando intervalos de amplitud \\(3\\sigma\\)) Podremos encontrar los valores de los límites de control \\(3\\sigma\\) para la media como: \\(LCL = \\bar{\\bar{x}}-\\frac{3}{\\sqrt{n}d_2}\\bar{R}=\\bar{\\bar{x}}-A_2\\bar{R}\\) \\(CL = \\bar{\\bar{x}}\\) \\(UCL = \\bar{\\bar{x}}+\\frac{3}{\\sqrt{n}d_2}\\bar{R}=\\bar{\\bar{x}}+A_2\\bar{R}\\)","code":"x <- droplevels(pistonrings[1:125,]) res.qcs <- qcs.xbar(x, data.name=\"pistonrings\", std.dev = \"UWAVE-R\") plot(res.qcs, title = expression(paste(\"Gráfico de control para pistonrings:\", bar(x),\" \")))"},{"path":"https://mflores72000.github.io/qcr/articles/Uqcc.html","id":"gráficos-r","dir":"Articles","previous_headings":"Gráficos de control de la calidad univariantes","what":"Gráficos R","title":"Gráficos de control de la calidad univariantes","text":"Dado \\(n\\), encontrar los valores \\(D_3\\) y \\(D_4\\) y calcular \\(\\bar{R}\\). Con todo ello obtener los límites inferior \\(D_3\\bar{R}\\) y superior \\(D_4\\bar{R}\\) de control. Construir un gráfico que presente en abscisas y en ordenadas los valores \\(R_i\\). Trazar también la línea central (\\(\\bar{R}\\)) y los límites de control (\\(D_3\\bar{R}\\) y \\(D_4\\bar{R}\\)). Si alguna de los rangos se sale de los límites de control, se admite que el proceso está bajo control en ese instante.","code":"x <- droplevels(pistonrings[1:125,]) res.qcs <- qcs.R(x, data.name=\"pistonrings\",std.dev = \"UWAVE-R\") plot(res.qcs, title = \"Gráfico de control para pistonrings: R\")"},{"path":"https://mflores72000.github.io/qcr/articles/Uqcc.html","id":"gráficos-para-la-media-y-la-desviación-estándar","dir":"Articles","previous_headings":"Gráficos de control de la calidad univariantes","what":"Gráficos para la media y la desviación estándar","title":"Gráficos de control de la calidad univariantes","text":"Calcular la media y la desviación típica de cada muestra, \\(\\bar{x}_i\\) y \\(s_i\\), respectivamente \\(=1,\\dots,k\\). Calcular la media y la desviación típica global. La media global \\(\\bar{\\bar{x}}\\) resulta ser un estimador insesgado de la media teórica. Como la desviación típica muestral es un estimador sesgado de la desviación típica teórica, se utilizará \\(s_i/c_2\\), siendo \\(c_2\\) una constante dependiente de \\(n\\) y por ello se utilizará \\[ \\hat{\\sigma}=\\frac{\\bar{s}}{c_2}=\\frac{\\sum_is_i}{c_2k} \\] como estimador centrado de la desviación típica teórica.} Contrastar si cada valor \\(\\bar{x}_i\\) está en el intervalo \\[ \\left[\\bar{\\bar{x}}-\\frac{3\\bar{s}}{\\sqrt{n}c_2},\\bar{\\bar{x}}+\\frac{3\\bar{s}}{\\sqrt{n}c_2}\\right] \\] con probabilidad aproximada del 97.74%. Podremos encontrar los valores de los límites de control \\(3\\sigma\\) para la media como: \\(LCL = \\bar{\\bar{x}}-\\frac{3}{\\sqrt{n}c_2}\\bar{s}=\\bar{\\bar{x}}-A_1\\bar{s}\\) \\(CL = \\bar{\\bar{x}}\\) \\(UCL = \\bar{\\bar{x}}+\\frac{3}{\\sqrt{n}c_2}\\bar{s}=\\bar{\\bar{x}}+A_1\\bar{s}\\)","code":"x <- droplevels(pistonrings[1:125,]) res.qcs <- qcs.xbar(x, data.name = \"pistonrings\", std.dev = \"UWAVE-SD\") plot(res.qcs, title = expression(paste(\"Gráfico de control para pistonrings:\", bar(x),\" \")))"},{"path":"https://mflores72000.github.io/qcr/articles/Uqcc.html","id":"gráfico-s","dir":"Articles","previous_headings":"Gráficos de control de la calidad univariantes","what":"Gráfico s","title":"Gráficos de control de la calidad univariantes","text":"Dado \\(n\\), encontrar los valores \\(B_3\\) y \\(B_4\\) y calcular \\(\\bar{s}\\). Con todo ello obtener los límites inferior \\(B_3\\bar{s}\\) y superior \\(B_4\\bar{s}\\) de control. Construir un gráfico que presente en abscisas y en ordenadas los valores \\(s_i\\). Trazar también la línea central (\\(\\bar{s}\\)) y los límites de control (\\(B_3\\bar{s}\\) y \\(B_4\\bar{s}\\)). Si alguna de las desviaciones típicas se sale de los límites de control, se admite que el proceso está bajo control en ese instante.","code":"x <- droplevels(pistonrings[1:125,]) res.qcs <- qcs.S(x, data.name = \"pistonrings\", std.dev = \"UWAVE-SD\") plot(res.qcs, title = \"Gráfico de control para pistonrings: S\")"},{"path":"https://mflores72000.github.io/qcr/articles/Uqcc.html","id":"gráficos-p","dir":"Articles","previous_headings":"Gráficos de control de la calidad univariantes","what":"Gráficos \\(p\\)","title":"Gráficos de control de la calidad univariantes","text":"Supóngase un artículo está conforme con probabilidad \\(p\\), y que los artículos producidos sucesivamente son independientes; si seleccionamos \\(k\\) muestras aleatorias de \\(n\\) artículos, y representando por \\(X_i\\) al número de artículos defectuosos, tendremos que \\(X_i\\sim B(n,p)\\). Sabemos que \\(\\mu=np\\) y \\(\\sigma=\\sqrt{np(1-p)}\\). Para cada muestra, definimos la variable aleatoria fracción disconforme muestral como \\(\\hat{p}_i=\\frac{X_i}{n}\\). Observar que \\(\\hat{p}_i\\) seguirá una distribución binomial con varianza: \\(E(\\hat{p}_i)=\\frac{E(X_i)}{n}=p\\) \\(Var(\\hat{p}_i)=\\frac{Var(X_i)}{n^2}=\\frac{p(1-p)}{n}\\). Por tanto, \\(\\lim_{n\\rightarrow \\infty}\\hat{p}_i=N\\left( p,\\sqrt{\\frac{p(1-p)}{n}} \\right)\\). Si \\(p\\) es desconocida, la podemos estimar: \\(\\bar{p}=\\frac{1}{k}\\sum_{=1}^{k}\\hat{p}_i\\). Según el modelo de Shewart tendremos que: \\(LCL = \\bar{p}-3\\sqrt{\\frac{\\bar{p}(1-\\bar{p})}{n}}\\) \\(CL = \\bar{p}\\) \\(UCL = \\bar{p}+3\\sqrt{\\frac{\\bar{p}(1-\\bar{p})}{n}}\\) En caso de que el tamaño muestral (\\(n_i\\)) diferentes, el estimador para \\(p\\) ser??: \\(\\bar{p}=\\frac{\\sum_{=1}^{k}n_i\\hat{p}_i}{\\sum_{=1}^{k}n_i}.\\) Datos Jugo de naranja (orangejuice): Es un data frame con 54 Observaciones y 4 variables. Donde se mide el jugo de naranja concentrado congelado que se envasa en latas de cartón de 6 oz. Estas latas se forman en una máquina de hilatura. Una lata es inspeccionado para determinar si, cuando se llena, el líquido puede derramarse ya sea en la costura lateral o alrededor de la articulación de la parte inferior. Si esto ocurre, una lata se considera conforme. Se tomaron 30 muestras de 50 latas cada una en intervalos de media hora durante un período de tres turnos (la máquina estaba en funcionamiento continuo). partir de la muestra 15 se utiliza un nuevo bacth de stock. Las variables del data frame son: sample (muestra): identificación de la muestra D: número de unidades defectuosas size (tamaño): tamaño de la muestra trial (ensayo): muestras de prueba (verdadero / falso)","code":"data(orangejuice) str(orangejuice) #> 'data.frame':    54 obs. of  4 variables: #>  $ D     : int  12 15 8 10 4 7 16 9 14 10 ... #>  $ sample: int  1 2 3 4 5 6 7 8 9 10 ... #>  $ size  : int  50 50 50 50 50 50 50 50 50 50 ... #>  $ trial : logi  TRUE TRUE TRUE TRUE TRUE TRUE ...  datos.qcd <- qcd(data = orangejuice, var.index = 1, sample.index = 2,                 sizes = orangejuice$size, type.data = \"atributte\")  res.qcs <- qcs.p(datos.qcd) summary(res.qcs) #> p chart for orangejuice  #>  #> Summary of group statistics: #>        p          #>  Min.   :0.0400   #>  1st Qu.:0.1000   #>  Median :0.1400   #>  Mean   :0.1778   #>  3rd Qu.:0.2400   #>  Max.   :0.4800   #>  #> Group sample size:  50 #> Number of groups:  54 #> Center of group statistics:  0.1777778 #> Standard deviation:  0.3823256  #>  #> Control limits:  #>         LCL       UCL #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  #> Beyond limits of control:  #> [1] 0.34 0.44 0.40 0.36 0.48 #>  #> Violationg runs:  #>  [1] 0.18 0.24 0.12 0.04 0.08 0.06 0.12 0.10 0.08 0.16 0.10 0.12 0.14 0.10 0.12 #> [16] 0.06 0.10 plot(res.qcs) datos.qcs <- qcs.p(orangejuice[orangejuice$trial,c(1,2)], sizes = orangejuice[orangejuice$trial,3]) plot(datos.qcs)"},{"path":"https://mflores72000.github.io/qcr/articles/Uqcc.html","id":"gráfico-np","dir":"Articles","previous_headings":"Gráficos de control de la calidad univariantes","what":"Gráfico np","title":"Gráficos de control de la calidad univariantes","text":"En algunas ocasiones interesa analizar el número medio de disconformidades en lugar de su proporción; en este caso se utilizarón los llamados gráficos NP. Para la construcción de este tipo de gráficos se estimarán las proporciones de la misma forma que en los gráficos P pero se construirán los gráficos basados en la media del proceso del siguiente modo: \\(LCL = n\\bar{p}-3\\sqrt{\\frac{n\\bar{p}(1-\\bar{p})}{n}}\\) \\(CL = n\\bar{p}\\) \\(UCL = n\\bar{p}+3\\sqrt{\\frac{n\\bar{p}(1-\\bar{p})}{n}}\\)","code":"data(orangejuice) str(orangejuice) #> 'data.frame':    54 obs. of  4 variables: #>  $ D     : int  12 15 8 10 4 7 16 9 14 10 ... #>  $ sample: int  1 2 3 4 5 6 7 8 9 10 ... #>  $ size  : int  50 50 50 50 50 50 50 50 50 50 ... #>  $ trial : logi  TRUE TRUE TRUE TRUE TRUE TRUE ... datos.qcd <- qcd(data = orangejuice, var.index = 1, sample.index = 2,                 sizes = orangejuice$size, type.data = \"atributte\")  res.qcs <- qcs.np(datos.qcd) summary(res.qcs) #> np chart for orangejuice  #>  #> Summary of group statistics: #>        np         #>  Min.   : 2.000   #>  1st Qu.: 5.000   #>  Median : 7.000   #>  Mean   : 8.889   #>  3rd Qu.:12.000   #>  Max.   :24.000   #>  #> Group sample size:  50 #> Number of groups:  54 #> Center of group statistics:  8.888889 #> Standard deviation:  2.70345  #>  #> Control limits:  #>        LCL      UCL #>  0.7785388 16.99924 #>  #> Beyond limits of control:  #> [1] 17 22 20 18 24 #>  #> Violationg runs:  #>  [1]  9 12  6  2  4  3  6  5  4  8  5  6  7  5  6  3  5 plot(res.qcs) datos.qcs <- qcs.np(orangejuice[orangejuice$trial,c(1,2)], sizes = orangejuice[orangejuice$trial,3]) plot(datos.qcs)"},{"path":"https://mflores72000.github.io/qcr/articles/Uqcc.html","id":"gráfico-c","dir":"Articles","previous_headings":"Gráficos de control de la calidad univariantes","what":"Gráfico c","title":"Gráficos de control de la calidad univariantes","text":"Para construir el diagrama de control C empezamos por tomar \\(k\\) muestras \\(X1,X_2,\\dots,X_k\\) , de \\(n_i\\) unidades cada una, por ejemplo \\(X_i=(X_{i1},\\dots,X_{in_i})\\). Sea \\(u\\) el número esperado de unidades defectuosas en cada una de las muestras. Para cada muestra se calcula el número \\(u_{ij}\\) de defectos de la unidad \\(X_{ij}\\), \\(j=1,\\dots,n_i\\). Si denotamos por \\(c_i\\) al número de defectos totales en la muestra \\(\\)-ésima, es claro que + Por otro lado, si denotamos por \\(u_i\\) al valor esperado de defectos en la muestra \\(\\)-ésima, tendremos que \\(u_i=\\frac{1}{n_i}\\sum_{j=1}^{n_i}u_{ij}\\). Observar pues que \\(u_i=\\frac{1}{n_i}c_i\\), es decir, \\(c_i=u_in_i\\). Notar además que \\(\\mathbb{E}(c_i)=\\mathbb{E}(u_in_i)=n_i\\mathbb{E}(u_i)=n_iu\\).} Es frecuente suponer que el número de defectos (sucesos habituales) en una poblacion grande sigue una distribucion de Poisson: \\(c_i\\sim Poiss(n_iu)\\). Se cumplirá que \\(\\lim_{n\\rightarrow{\\infty}}c_i=N(n_iu,\\sqrt{n_iu})\\). Si \\(u=\\mathbb{E}[u_i]\\) es desconocida, la podemos estimar: \\[ \\hat{u}=\\frac{1}{k}\\sum_{=1}^{k}u_i. \\] Según el modelo de Shewart tendremos que: \\(LCL = n_i\\hat{u}-3\\sqrt{{\\hat{u}}{n_i}}\\) \\(CL = n_i\\hat{u}\\) \\(UCL = n_i\\hat{u}+3\\sqrt{{\\hat{u}}{n_i}}\\) Como el tamaño muestral (\\(n_i\\)) es diferente para cada subgrupo, para calcular los límites podemos optar por distintos métodos. Datos Placas impresas (Circuit boards data): Número de conformidades observadas en 26 muestras sucesivas de 100 placas de circuitos impresos. Muestra 6 y 20 están fuera de los límites de control. Muestra 6 fue examinado por un nuevo inspector que había reconocido varios tipos de conformidades. Además, el número inusualmente grande de las conformidades en la muestra 20 se debío un problema de control de la temperatura en la máquina de soldadura, que fue reparado subsequentemente. Los últimos 20 muestras son otras muestras recogidas en las unidades de inspección (cada una formada por 100 paneles). Las variables del data frame son: x : número de unidades defectuosas en 100 placas de circuito impreso (unidad de control) size (tamaño): tamaño de la muestra trial (ensayo) indicador muestra ensayo (verdadero / falso)","code":"data(circuit) str(circuit) #> 'data.frame':    46 obs. of  4 variables: #>  $ x     : int  21 24 16 12 15 5 28 20 31 25 ... #>  $ sample: int  1 2 3 4 5 6 7 8 9 10 ... #>  $ size  : int  100 100 100 100 100 100 100 100 100 100 ... #>  $ trial : logi  TRUE TRUE TRUE TRUE TRUE TRUE ... datos <- circuit datos$sample <- 1:length(datos$x) str(datos) #> 'data.frame':    46 obs. of  4 variables: #>  $ x     : int  21 24 16 12 15 5 28 20 31 25 ... #>  $ sample: int  1 2 3 4 5 6 7 8 9 10 ... #>  $ size  : int  100 100 100 100 100 100 100 100 100 100 ... #>  $ trial : logi  TRUE TRUE TRUE TRUE TRUE TRUE ...  datos.qcd <- qcd(data = datos, var.index = 1,sample.index = 2,                 sizes = 100, type.data = \"atributte\") res.qcs <- qcs.c(datos.qcd) summary(res.qcs) #> c chart for datos  #>  #> Summary of group statistics: #>        c         #>  Min.   : 5.00   #>  1st Qu.:16.00   #>  Median :19.00   #>  Mean   :19.17   #>  3rd Qu.:22.00   #>  Max.   :39.00   #>  #> Group sample size:  100 #> Number of groups:  46 #> Center of group statistics:  19.17391 #> Standard deviation:  4.378803  #>  #> Control limits:  #>       LCL      UCL #>  6.037505 32.31032 #>  #> Beyond limits of control:  #> [1] 39  5 #>  #> Violationg runs:  #> [1] 12 15 plot(res.qcs)"},{"path":"https://mflores72000.github.io/qcr/articles/Uqcc.html","id":"gráfico-cusum","dir":"Articles","previous_headings":"Gráficos de control de la calidad univariantes","what":"Gráfico Cusum","title":"Gráficos de control de la calidad univariantes","text":"Los gráficos CUSUM se basan en la decisión de comprobar si el proceso está bajo control o analizando toda o la mayor parte de la muestra. Para este fin se usará el estadístico \\(s_r\\): \\[ s_r=\\sum_{=1}^{r}(\\bar{x}_i-\\mu_0). \\] Bajo supuestos de normalidad es evidente deducir la distribución del estadístico \\(s_r\\): \\[ s_r\\N\\left( r(\\mu-\\mu_0), \\frac{r\\sigma_0^2}{n} \\right). \\]","code":"data(pistonrings) res.qcd <- qcd(pistonrings, type.data = \"dependence\") res.qcs <- qcs.cusum(res.qcd, type = \"cusum\") summary(res.qcs) #> cusum chart for pistonrings  #>  #> Summary of group statistics: #>      cusum       #>  Min.   :73.99   #>  1st Qu.:74.00   #>  Median :74.00   #>  Mean   :74.00   #>  3rd Qu.:74.01   #>  Max.   :74.02   #>  #> Group sample size:  5 #> Number of groups:  40 #> Center of group statistics:  74.0036 #> Standard deviation:  0.01007094  #>  #> Control limits:  #> [1] -5  5 #>  #> Beyond limits of control:  #>  [1] 73.9902 74.0060 73.9966 74.0008 74.0074 73.9982 74.0092 73.9998 74.0016 #> [10] 74.0024 73.9982 73.9922 73.9974 #>  #> Violationg runs:  #> [1] 74.0196 74.0234 74.0128 plot(res.qcs)"},{"path":"https://mflores72000.github.io/qcr/articles/Uqcc.html","id":"gráfico-ewma","dir":"Articles","previous_headings":"Gráficos de control de la calidad univariantes","what":"Gráfico Ewma","title":"Gráficos de control de la calidad univariantes","text":"En los gráficos EWMA se representan promedios de la observación contemporánea y las observaciones anteriores, donde se da más peso las observaciones más recientes (medias móviles \\(y_i\\)). Se define como: \\[ y_i=\\lambda x_i+(1-\\lambda)y_{-1} \\] Los límites de control y la línea central son entonces: \\(LCL = \\mu_0-3\\sigma\\sqrt{\\frac{\\lambda(1-(1-\\lambda)^{2i})}{2-\\lambda}}\\) \\(LCS = \\mu_0\\) \\(UCL = \\mu_0+3\\sigma\\sqrt{\\frac{\\lambda(1-(1-\\lambda)^{2i})}{2-\\lambda}}\\) Si \\(\\) es muy elevado se tiene que, aproximadamente, \\(LCL = \\mu_0-3\\sigma\\sqrt{\\frac{\\lambda}{2-\\lambda}}\\) \\(LCS = \\mu_0\\) \\(UCL = \\mu_0+3\\sigma\\sqrt{\\frac{\\lambda}{2-\\lambda}}\\)","code":"data(pistonrings)  res.qcd <- qcd(pistonrings, type.data = \"dependence\")  res.qcs <- qcs.ewma(res.qcd, type = \"ewma\")  summary(res.qcs)  plot(res.qcs)"},{"path":"https://mflores72000.github.io/qcr/articles/Uqcc.html","id":"ejemplos-gráfico-para-la-media","dir":"Articles","previous_headings":"Gráficos de control de la calidad univariantes","what":"Ejemplos Gráfico para la media","title":"Gráficos de control de la calidad univariantes","text":"En la siguiente sección se presentan gráficos de control para monitorizar la tendencia central de la variable de calidad: diamétro de los aros de los pistones.","code":""},{"path":"https://mflores72000.github.io/qcr/articles/Uqcc.html","id":"estabilizando-el-proceso","dir":"Articles","previous_headings":"Gráficos de control de la calidad univariantes > Ejemplos Gráfico para la media","what":"Estabilizando el proceso","title":"Gráficos de control de la calidad univariantes","text":"Se realiza un gráfico de medias para monitorizar el diámetro de los piston rings:  Se crea el objeto qcd (Quality Control Data) y el objeto qcs (Quality Control Statistics) del tipo xbar. Con el comando summary se obtienen las estimaciones de la media y la varianza así como los límites de control y con el comando plot se realiza el correspondiente gráfico de control. Además para indicar que el tipo de estimación de la varianza es por medio de Rangos, en la opción std.dev = “UWAVE-R” (método de estimación por defecto). Se puede observar tres puntos que indican que el proceso está fuera de control. Dos de estos salen fuera de los límites de control y un punto que está dentro de los límites pero corresponde una racha. Por tanto, el proceso esta bajo control. Se utiliza la función state.control que permite eliminar los puntos fuera de control y adempás devuelve un objeto del tipo qcd que se utiliza para construir un nuevo gráfico de control.  Aún existe un punto fuera de los límites de control. Se utiliza la función state.control para la eliminación de puntos fuera de control y se estiman los límites de control hasta que el proceso este bajo control, es decir, existan puntos fuera de los límites o rachas.","code":"str(pistonrings) #> 'data.frame':    200 obs. of  3 variables: #>  $ diameter: num  74 74 74 74 74 ... #>  $ sample  : int  1 1 1 1 1 2 2 2 2 2 ... #>  $ trial   : logi  TRUE TRUE TRUE TRUE TRUE TRUE ... pistonrings.qcd<-qcd(pistonrings) class(pistonrings.qcd) #> [1] \"qcd\"        \"data.frame\"  res.qcs <- qcs.xbar(pistonrings.qcd) plot(res.qcs,title=\"Control Chart Xbar for pistonrings I\", std.dev = \"UWAVE-R\") summary(res.qcs)   #> xbar chart for pistonrings  #>  #> Summary of group statistics: #>       xbar       #>  Min.   :73.99   #>  1st Qu.:74.00   #>  Median :74.00   #>  Mean   :74.00   #>  3rd Qu.:74.01   #>  Max.   :74.02   #>  #> Group sample size:  5 #> Number of groups:  40 #> Center of group statistics:  74.0036 #> Standard deviation:  0.01007094  #>  #> Control limits:  #>       LCL      UCL #>  73.99009 74.01712 #>  #> Beyond limits of control:  #> [1] 74.0196 74.0234 #>  #> Violationg runs:  #> [1] 74.0128 res.qcd <- state.control(res.qcs) res.qcs <- qcs.xbar(res.qcd) plot(res.qcs,title=\"Control Chart Xbar for pistonrings II\") summary(res.qcs)   #> xbar chart for pistonrings  #>  #> Summary of group statistics: #>       xbar       #>  Min.   :73.99   #>  1st Qu.:74.00   #>  Median :74.00   #>  Mean   :74.00   #>  3rd Qu.:74.01   #>  Max.   :74.02   #>  #> Group sample size:  5 #> Number of groups:  37 #> Center of group statistics:  74.00239 #> Standard deviation:  0.009992796  #>  #> Control limits:  #>       LCL     UCL #>  73.98898 74.0158 #>  #> Beyond limits of control:  #> [1] 74.0166 #>  #> Number violationg runs: 0 res.qcd <- state.control(res.qcs) res.qcs <- qcs.xbar(res.qcd) plot(res.qcs,title=\"Control Chart Xbar for pistonrings III\") summary(res.qcs)   #> xbar chart for pistonrings  #>  #> Summary of group statistics: #>       xbar       #>  Min.   :73.99   #>  1st Qu.:74.00   #>  Median :74.00   #>  Mean   :74.00   #>  3rd Qu.:74.01   #>  Max.   :74.01   #>  #> Group sample size:  5 #> Number of groups:  36 #> Center of group statistics:  74.00199 #> Standard deviation:  0.01004347  #>  #> Control limits:  #>       LCL      UCL #>  73.98852 74.01547 #>  #> Number beyond limits: 0  #>  #> Number violationg runs: 0"},{"path":"https://mflores72000.github.io/qcr/articles/Uqcc.html","id":"monitoriando-un-proceso","dir":"Articles","previous_headings":"Gráficos de control de la calidad univariantes","what":"Monitoriando un proceso","title":"Gráficos de control de la calidad univariantes","text":"En este ejemplo se parte de un proceso bajo control (Fase ) y una vez calculado los límites se realiza la monitorización del proceso (Fase II). Para la Fase se considera las primeras 25 muestras de los datos de piston rings y para la Fase II se utilizan el resto de las muestras.","code":"x <- droplevels(pistonrings[1:125,]) y <- droplevels(pistonrings[126:200,])  res.qcs <- qcs.xbar(x, data.name=\"Control Chart Xbar for pistonrings\") plot(res.qcs) res.qcs <- qcs.add(x = res.qcs, value = y[,c(1,2)])  plot(res.qcs) summary(res.qcs) #> xbar chart for Control Chart Xbar for pistonrings  #>  #> Summary of group statistics: #>       xbar       #>  Min.   :73.99   #>  1st Qu.:74.00   #>  Median :74.00   #>  Mean   :74.00   #>  3rd Qu.:74.01   #>  Max.   :74.02   #>  #> Group sample size:  5 #> Number of groups:  40 #> Center of group statistics:  74.0036 #> Standard deviation:  0.01007094  #>  #> Control limits:  #>       LCL     UCL #>  73.98805 74.0143 #>  #> Beyond limits of control:  #> [1] 74.0166 74.0196 74.0234 #>  #> Violationg runs:  #> [1] 74.0128"},{"path":"https://mflores72000.github.io/qcr/articles/Uqcc.html","id":"límites-de-alerta","dir":"Articles","previous_headings":"Gráficos de control de la calidad univariantes","what":"Límites de alerta","title":"Gráficos de control de la calidad univariantes","text":"","code":"x <- droplevels(pistonrings[1:125,]) res.qcs <- qcs.xbar(x, data.name=\"Control Chart Xbar for pistonrings\") plot(res.qcs,conf.nsigma.alert=2)"},{"path":"https://mflores72000.github.io/qcr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Miguel Flores. Author, maintainer. Ruben Fernandez-Casal. Author. Salvador Naya. Author. Javier Tarrio-Saavedra. Author. Jorge Sosa Donoso. Contributor.","code":""},{"path":"https://mflores72000.github.io/qcr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Flores M, Fernandez-Casal R, Naya S, Tarrio-Saavedra J (2021). qcr: Quality Control Review. R package version 1.3, https://CRAN.R-project.org/package=qcr.","code":"@Manual{,   title = {qcr: Quality Control Review},   author = {Miguel Flores and Ruben Fernandez-Casal and Salvador Naya and Javier Tarrio-Saavedra},   year = {2021},   note = {R package version 1.3},   url = {https://CRAN.R-project.org/package=qcr}, }"},{"path":[]},{"path":"https://mflores72000.github.io/qcr/index.html","id":"version-13","dir":"","previous_headings":"","what":"Version 1.3","title":"Quality Control Review","text":"package implements univariate multivariate Statistical Quality Control (SQC) tools completes increases SQC techniques available R. Apart integrating different R packages devoted SQC (qcc,MSQC), provides nonparametric tools highly useful Gaussian assumption met. package computes standard univariate control charts individual measurements, X-bar, S, R, p, np, c, u, EWMA CUSUM. package also includes functions perform multivariate control charts Hotelling T2, MEWMA MCUSUM. representative feature, multivariate nonparametric alternatives based data depth implemented package: r, Q S control charts. addition, Phase II control charts functional data included. package also allows estimation complete set capability indices first fourth generation, covering nonparametric alternatives, performing corresponding capability analysis graphical outputs, including process capability plots.","code":""},{"path":"https://mflores72000.github.io/qcr/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Quality Control Review","text":"Flores, M., Naya, S., Fernández-Casal, R., Zaragoza, S., Raña, P., Tarrío-Saavedra, J. (2020). Constructing control chart using functional data. Mathematics, 8, 58, DOI. Flores, M., Fernández-Casal, R., Naya, S., & Tarrío-Saavedra, J. (2021). Statistical Quality Control qcr Package. R Journal, 13, 194-217. DOI. Naya, S., Devia-Rivera, ., Saavedra, J. T., & Flores, M. . (2016). Nueva propuesta de índices de capacidad robustos para el control de la calidad. Dyna, 83(198), 94-101. DOI.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/archery1.html","id":null,"dir":"Reference","previous_headings":"","what":"Target archery dataset in the ranking round (used as Phase I) — archery1","title":"Target archery dataset in the ranking round (used as Phase I) — archery1","text":"consists stage archer shoots 72 arrows 12 ends six arrows.  information given x y coordinates.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/archery1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Target archery dataset in the ranking round (used as Phase I) — archery1","text":"array (24 x 2 x 3). x-coordinate x-coordinate y-coordinate y-coordinate","code":""},{"path":"https://mflores72000.github.io/qcr/reference/archery1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Target archery dataset in the ranking round (used as Phase I) — archery1","text":"","code":"data(archery1) str(archery1) ; plot(archery1) #>  num [1:24, 1:2, 1:3] 24.14 28.55 3.97 28.57 -3.43 ... #>  - attr(*, \"dimnames\")=List of 3 #>   ..$ : NULL #>   ..$ : chr [1:2] \"x-coordinate\" \"y-coordinate\" #>   ..$ : NULL #>  - attr(*, \"names\")= chr [1:144] \"x-coordinate\" \"y-coordinate\" NA NA ..."},{"path":"https://mflores72000.github.io/qcr/reference/circuit.html","id":null,"dir":"Reference","previous_headings":"","what":"Circuit boards data — circuit","title":"Circuit boards data — circuit","text":"Number nonconformities observed 26 successive samples 100 printed circuit boards. Sample 6 20 control limits. Sample 6 examined new inspector recognize several type nonconformities present. Furthermore, unusually large number nonconformities sample 20 resulted temperature control problem wave soldering machine, subsequentely repaired. last 20 samples samples collected inspection units (formed 100 boards).","code":""},{"path":"https://mflores72000.github.io/qcr/reference/circuit.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Circuit boards data — circuit","text":"data frame 46 observations following 4 variables: x Number defectives 100 printed circuit boards (inspection unit) sample Sample ID size Sample size trial Trial sample indicator (TRUE/FALSE)","code":""},{"path":"https://mflores72000.github.io/qcr/reference/circuit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Circuit boards data — circuit","text":"Montgomery, D.C. (1991) Introduction Statistical Quality Control, 2nd ed, New York, John Wiley & Sons, pp. 173--175","code":""},{"path":"https://mflores72000.github.io/qcr/reference/circuit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Circuit boards data — circuit","text":"","code":"data(circuit) attach(circuit) summary(circuit) #>        x             sample           size       trial         #>  Min.   : 5.00   Min.   : 1.00   Min.   :100   Mode :logical   #>  1st Qu.:16.00   1st Qu.:12.25   1st Qu.:100   FALSE:20        #>  Median :19.00   Median :23.50   Median :100   TRUE :26        #>  Mean   :19.17   Mean   :23.50   Mean   :100                   #>  3rd Qu.:22.00   3rd Qu.:34.75   3rd Qu.:100                   #>  Max.   :39.00   Max.   :46.00   Max.   :100                   boxplot(x ~ trial)  plot(x, type=\"b\")  detach(circuit)"},{"path":"https://mflores72000.github.io/qcr/reference/counters.html","id":null,"dir":"Reference","previous_headings":"","what":"The performance of the counters data — counters","title":"The performance of the counters data — counters","text":"water supply company wants control performance  water counters installed throughout city. purpose,  60 rational samples taken, one composed 3 measurements,  age (10 years) caliber water counters corresponding  two different brands, period 5 years. dataset based study case Coruña’s water supply company, Empresa  Municipal de Aguas de La Coruña (Emalcsa).","code":""},{"path":"https://mflores72000.github.io/qcr/reference/counters.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The performance of the counters data — counters","text":"data frame 180 observations following 3 variables: error measurement error counters (Error:  (Real Volume - Measured Volume)/Real Volume) sample Sample ID brand Brands providers counters","code":""},{"path":"https://mflores72000.github.io/qcr/reference/counters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The performance of the counters data — counters","text":"","code":"data(counters) attach(counters) summary(counters) #>      error               sample      brand  #>  Min.   :-0.001156   Min.   : 1.00   A:90   #>  1st Qu.: 0.001908   1st Qu.:15.75   B:90   #>  Median : 0.009774   Median :30.50          #>  Mean   : 0.027942   Mean   :30.50          #>  3rd Qu.: 0.035789   3rd Qu.:45.25          #>  Max.   : 0.150982   Max.   :60.00          plot(error, type=\"b\")  detach(counters)"},{"path":"https://mflores72000.github.io/qcr/reference/dowel1.html","id":null,"dir":"Reference","previous_headings":"","what":"Dowel pin dataset — dowel1","title":"Dowel pin dataset — dowel1","text":"Diameter length manufacturing process dowel pin.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/dowel1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dowel pin dataset — dowel1","text":"data frame 40 observations following 2 variables. diameter numeric vector length numeric vector","code":""},{"path":"https://mflores72000.github.io/qcr/reference/dowel1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dowel pin dataset — dowel1","text":"","code":"data(dowel1) str(dowel1) ; plot(dowel1) #> 'data.frame':\t40 obs. of  2 variables: #>  $ diameter: num  0.492 0.501 0.491 0.492 0.505 0.5 0.497 0.509 0.49 0.499 ... #>  $ length  : num  0.988 1.011 1.008 0.97 1.003 ..."},{"path":"https://mflores72000.github.io/qcr/reference/employment.html","id":null,"dir":"Reference","previous_headings":"","what":"Level of employment data — employment","title":"Level of employment data — employment","text":"Spaniard-Argentinian hotel company wants control  level occupancy (measured  application continuous control. purpose, 48 subsamples taken six hotels corresponding two different countries.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/employment.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Level of employment data — employment","text":"data frame 288 observations following 3 variables: occupantion amount occupants terms percentage sample Sample ID hemisphere Hemisphere","code":""},{"path":"https://mflores72000.github.io/qcr/reference/employment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Level of employment data — employment","text":"","code":"data(employment) attach(employment) summary(employment) #>   occupantion          sample      hemisphere #>  Min.   :  2.478   Min.   : 1.00   N:144      #>  1st Qu.: 48.046   1st Qu.:12.75   S:144      #>  Median : 63.376   Median :24.50              #>  Mean   : 62.748   Mean   :24.50              #>  3rd Qu.: 78.423   3rd Qu.:36.25              #>  Max.   :119.943   Max.   :48.00              boxplot(occupantion ~ hemisphere)  plot(occupantion, type=\"b\")  detach(employment)"},{"path":"https://mflores72000.github.io/qcr/reference/fdqcd.html","id":null,"dir":"Reference","previous_headings":"","what":"It creates a data object to be used in Functional Data Quality Control — fdqcd","title":"It creates a data object to be used in Functional Data Quality Control — fdqcd","text":"Create object class 'fdqcd' perform statistical quality control. object used plot Functional Data Control Charts.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/fdqcd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"It creates a data object to be used in Functional Data Quality Control — fdqcd","text":"","code":"fdqcd(x, data.name = NULL, ...)"},{"path":"https://mflores72000.github.io/qcr/reference/fdqcd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"It creates a data object to be used in Functional Data Quality Control — fdqcd","text":"x Matrix set cases dimension (n x m), 'n' number curves  'm' points observed curve. data.name string specifies title displayed plots.  provided taken name object x. ... Arguments passed methods.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/fdqcd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"It creates a data object to be used in Functional Data Quality Control — fdqcd","text":"","code":"library(qcr) m <- 30 tt<-seq(0,1,len=m) mu<-30 * tt * (1 - tt)^(3/2) n0 <- 100 set.seed(12345) mdata<-matrix(NA,ncol=m,nrow=n0) sigma <- exp(-3*as.matrix(dist(tt))/0.9) for (i in 1:n0) mdata[i,]<- mu+0.5*mvrnorm(mu = mu,Sigma = sigma ) fdchart <- fdqcd(mdata) plot(fdchart,type=\"l\",col=\"gray\")"},{"path":"https://mflores72000.github.io/qcr/reference/fdqcs.depth.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot depth functional data (DFD) - chart — fdqcs.depth","title":"Function to plot depth functional data (DFD) - chart — fdqcs.depth","text":"function used compute statistics required DFD chart.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/fdqcs.depth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot depth functional data (DFD) - chart — fdqcs.depth","text":"","code":"fdqcs.depth(x, ...)  # S3 method for default fdqcs.depth(   x,   data.name = NULL,   func.depth = depth.mode,   nb = 200,   type = c(\"trim\", \"pond\"),   ns = 0.01,   plot = TRUE,   trim = 0.025,   smo = 0.05,   draw.control = NULL,   ... )  # S3 method for fdqcd fdqcs.depth(   x,   func.depth = depth.mode,   nb = 200,   type = c(\"trim\", \"pond\"),   ns = 0.01,   plot = TRUE,   trim = 0.025,   smo = 0.05,   draw.control = NULL,   ... )"},{"path":"https://mflores72000.github.io/qcr/reference/fdqcs.depth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot depth functional data (DFD) - chart — fdqcs.depth","text":"x object class 'fdqcd'. ... Arguments passed methods. data.name string specifies title displayed plots.  provided taken name object x. func.depth Type depth measure, default depth.mode. nb number bootstrap samples. type method used trim data (trim pond). ns Quantile determine cutoff Bootstrap procedure. plot Logical value. TRUE DFD chart plotted. trim percentage trimming. smo smoothing parameter bootstrap samples. draw.control specifies col, lty lwd objects: fdataobj, statistic, .","code":""},{"path":"https://mflores72000.github.io/qcr/reference/fdqcs.depth.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Function to plot depth functional data (DFD) - chart — fdqcs.depth","text":"Flores, M.; Naya, S.; Fernández-Casal,R.; Zaragoza, S.; Raña, P.; Tarrío-Saavedra, J.  Constructing Control Chart Using Functional Data. Mathematics 2020, 8, 58.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/fdqcs.depth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot depth functional data (DFD) - chart — fdqcs.depth","text":"","code":"if (FALSE) { library(qcr) m <- 30 tt<-seq(0,1,len=m) mu<-30 * tt * (1 - tt)^(3/2) n0 <- 100 set.seed(12345) mdata<-matrix(NA,ncol=m,nrow=n0) sigma <- exp(-3*as.matrix(dist(tt))/0.9) for (i in 1:n0) mdata[i,]<- mu+0.5*mvrnorm(mu = mu,Sigma = sigma ) fdchart <- fdqcd(mdata) plot.fdqcd(fdchart,type=\"l\",col=\"gray\") set.seed(1234) fddep <- fdqcs.depth(fdchart,plot = T) plot(fddep,title.fdata = \"Fdata\",title.depth = \"Depth\") summary(fddep) }"},{"path":"https://mflores72000.github.io/qcr/reference/fdqcs.rank.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot rank functional data (RFD) - chart — fdqcs.rank","title":"Function to plot rank functional data (RFD) - chart — fdqcs.rank","text":"function used compute statistics required RFD chart.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/fdqcs.rank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot rank functional data (RFD) - chart — fdqcs.rank","text":"","code":"fdqcs.rank(x, ...)  # S3 method for fdqcd fdqcs.rank(   x,   y = x,   func.depth = depth.FM,   alpha = 0.01,   plot = TRUE,   trim = 0.1,   draw.control = NULL,   ... )"},{"path":"https://mflores72000.github.io/qcr/reference/fdqcs.rank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot rank functional data (RFD) - chart — fdqcs.rank","text":"x set reference curves respect depth computed. fdqcd class object. ... Arguments passed methods. y set new curves evaluate depth. fdqcd class object. func.depth Type depth measure, default depth.FM alpha Quantile determine cutoff Bootstrap procedure. plot Logical value. TRUE RFD chart plotted. trim percentage trimming. draw.control specifies col, lty lwd objects:  fdataobj, statistic, .","code":""},{"path":"https://mflores72000.github.io/qcr/reference/fdqcs.rank.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Function to plot rank functional data (RFD) - chart — fdqcs.rank","text":"Flores, M.; Naya, S.; Fernández-Casal,R.; Zaragoza, S.; Raña, P.; Tarrío-Saavedra, J.  Constructing Control Chart Using Functional Data. Mathematics 2020, 8, 58.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/fdqcs.rank.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot rank functional data (RFD) - chart — fdqcs.rank","text":"","code":"if (FALSE) { library(qcr) m <- 30 tt<-seq(0,1,len=m) mu<-30 * tt * (1 - tt)^(3/2) n0 <- 100 set.seed(12345) mdata<-matrix(NA,ncol=m,nrow=n0) sigma <- exp(-3*as.matrix(dist(tt))/0.9) for (i in 1:n0) mdata[i,]<- mu+0.5*mvrnorm(mu = mu,Sigma = sigma ) fdchart <- fdqcd(mdata) summary(fdchart) plot(fdchart,type=\"l\",col=\"gray\") out <- fddep$out ## Outliers - State in Control alpha <- 0.005 trim <- 0.1 while (length(out)>0) {  mdata <- fddep$fdata$data[-out,]  fddep <- fdqcs.depth(mdata,ns = alpha, trim=trim, plot=FALSE)  out <- fddep$out } plot(fddep,title.fdata = \"FD-State in Control\",title.depth = \"Depth\") # Ha mu_a<- 30 * tt^(3/2) * (1 - tt) n_a <- 50 set.seed(12345) mdata_a<-matrix(NA,ncol=m,nrow=n_a) for (i in 1:n_a) mdata_a[i,]<- mu_a+0.5*mvrnorm(mu = mu_a,Sigma = sigma ) fdchart_a <- fdqcd(mdata_a,\"Curves Monitoring\") plot(fdchart_a) plot(fdchart,fdchart_a,main=\"Phase II\") pashe2.chart <- fdqcs.rank(fdchart,fdchart_a) plot(pashe2.chart,title.fdata = \"FDA\",title.rank = \"Rank\") summary(pashe2.chart) }"},{"path":"https://mflores72000.github.io/qcr/reference/mqcd.html","id":null,"dir":"Reference","previous_headings":"","what":"It creates a data object to be used in Multivariante Quality Control — mqcd","title":"It creates a data object to be used in Multivariante Quality Control — mqcd","text":"Create object class 'mqcd' perform statistical quality control. object used plot Multivariate Control Charts.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/mqcd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"It creates a data object to be used in Multivariante Quality Control — mqcd","text":"","code":"mqcd(x, data.name = NULL)"},{"path":"https://mflores72000.github.io/qcr/reference/mqcd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"It creates a data object to be used in Multivariante Quality Control — mqcd","text":"x matrix, data-frame array contain data. data.name string specifies title displayed plots.  provided taken name object x.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/mqcd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"It creates a data object to be used in Multivariante Quality Control — mqcd","text":"","code":"library(qcr) data(dowel1) str(dowel1) #> 'data.frame':\t40 obs. of  2 variables: #>  $ diameter: num  0.492 0.501 0.491 0.492 0.505 0.5 0.497 0.509 0.49 0.499 ... #>  $ length  : num  0.988 1.011 1.008 0.97 1.003 ... data.mqcd <- mqcd(dowel1) str(data.mqcd) #>  'mqcd' num [1:40, 1:2, 1] 0.492 0.501 0.491 0.492 0.505 0.5 0.497 0.509 0.49 0.499 ... #>  - attr(*, \"dimnames\")=List of 3 #>   ..$ : NULL #>   ..$ : chr [1:2] \"diameter\" \"length\" #>   ..$ : NULL #>  - attr(*, \"data.name\")= chr \" DATA\" #>  - attr(*, \"type.data\")= chr \"Multivariate\""},{"path":"https://mflores72000.github.io/qcr/reference/mqcs.add.html","id":null,"dir":"Reference","previous_headings":"","what":"mqcs.add Add a matrix, data.frame or array object with a mqcs object — mqcs.add","title":"mqcs.add Add a matrix, data.frame or array object with a mqcs object — mqcs.add","text":"function used join two objects type matrix, data.frame array mqcs.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/mqcs.add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mqcs.add Add a matrix, data.frame or array object with a mqcs object — mqcs.add","text":"","code":"mqcs.add(x, ...)  # S3 method for default mqcs.add(x, value, ...)"},{"path":"https://mflores72000.github.io/qcr/reference/mqcs.add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mqcs.add Add a matrix, data.frame or array object with a mqcs object — mqcs.add","text":"x Object type mqcs ... arguments passed methods. value Object type data.frame, matrix array","code":""},{"path":"https://mflores72000.github.io/qcr/reference/mqcs.html","id":null,"dir":"Reference","previous_headings":"","what":"It computes statistics to be used in Multivariante Quality Control — mqcs","title":"It computes statistics to be used in Multivariante Quality Control — mqcs","text":"Create object class 'mqcs' perform statistical quality control. function used compute statistics required plot Multivariate Control Charts","code":""},{"path":"https://mflores72000.github.io/qcr/reference/mqcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"It computes statistics to be used in Multivariante Quality Control — mqcs","text":"","code":"mqcs(x, method = \"sw\", ...)"},{"path":"https://mflores72000.github.io/qcr/reference/mqcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"It computes statistics to be used in Multivariante Quality Control — mqcs","text":"x object class 'mqcd' (Multivariante Quality Control Data) method method employed compute covariance matrix individual observation case. Two methods used \"sw\"  compute according (Sullivan,Woodall 1996a) \"hm\"  (Holmes,Mergen 1993) ... Arguments passed methods.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/mqcs.mcusum.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot mcusum chart — mqcs.mcusum","title":"Function to plot mcusum chart — mqcs.mcusum","text":"function used compute statistics required Multivariate  Cumulative Sum (MCUSUM) chart.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/mqcs.mcusum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot mcusum chart — mqcs.mcusum","text":"","code":"mqcs.mcusum(x, ...)  # S3 method for default mqcs.mcusum(   x,   data.name = NULL,   limits = NULL,   Xmv = NULL,   S = NULL,   k = 0.5,   h = 5.5,   method = \"sw\",   plot = FALSE,   ... )  # S3 method for mqcd mqcs.mcusum(   x,   limits = NULL,   Xmv = NULL,   S = NULL,   k = 0.5,   h = 5.5,   method = \"sw\",   plot = FALSE,   ... )"},{"path":"https://mflores72000.github.io/qcr/reference/mqcs.mcusum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot mcusum chart — mqcs.mcusum","text":"x object class 'mqcd'. ... Arguments passed methods. data.name string specifies title displayed plots.  provided taken name object x. limits two-values vector specifying control limits. Xmv mean vector. specified Phase II  parameters distribution known. S sample covariance matrix. used Phase II  parameters distribution known. k constant used MCUSUM chart. Frequently k = 0.5 h constant used MCUSUM chart. Usually h = 5.5 method method employed compute covariance matrix individual observation case. Two methods used \"sw\"  compute according (Sullivan,Woodall 1996a) \"hm\"  (Holmes,Mergen 1993) plot Logical value. TRUE mcusum chart plotted.","code":""},{"path":[]},{"path":"https://mflores72000.github.io/qcr/reference/mqcs.mcusum.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to plot mcusum chart — mqcs.mcusum","text":"Edgar Santos-Fernandez","code":""},{"path":"https://mflores72000.github.io/qcr/reference/mqcs.mcusum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot mcusum chart — mqcs.mcusum","text":"","code":"## ##  Continuous data  ## library(qcr) data(dowel1) str(dowel1) #> 'data.frame':\t40 obs. of  2 variables: #>  $ diameter: num  0.492 0.501 0.491 0.492 0.505 0.5 0.497 0.509 0.49 0.499 ... #>  $ length  : num  0.988 1.011 1.008 0.97 1.003 ... data.mqcd <- mqcd(dowel1) res.mqcs <- mqcs.mcusum(data.mqcd) summary(res.mqcs) #>  #> Summary of group statistics: #>        V1         #>  Min.   :0.0000   #>  1st Qu.:0.7749   #>  Median :1.1501   #>  Mean   :1.3818   #>  3rd Qu.:1.9987   #>  Max.   :3.8409   #>  #> Number of quality characteristics:  2 #> Number of samples or observations:  40 #> Number of observations or sample size:  1 #>  #> Mean Vector:  #>  0.500875 1.001825 #> Covariance Matrix: #>          diameter       length #> [1,] 4.908654e-05 8.584936e-05 #> [2,] 8.584936e-05 4.199429e-04 #>  #> Control limits:  #> lcl ucl  #> 0.0 5.5  #>  #> Number beyond limits: 0  plot(res.mqcs, title =\" MCUSUM Control Chart for dowel1\")"},{"path":"https://mflores72000.github.io/qcr/reference/mqcs.mewma.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot mewma chart — mqcs.mewma","title":"Function to plot mewma chart — mqcs.mewma","text":"function used compute statistics required Multivariate  Exponentially Weighted Moving Average (MEWMA) chart.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/mqcs.mewma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot mewma chart — mqcs.mewma","text":"","code":"mqcs.mewma(x, ...)  # S3 method for default mqcs.mewma(   x,   data.name = NULL,   limits = NULL,   Xmv = NULL,   S = NULL,   method = \"sw\",   plot = FALSE,   ... )  # S3 method for mqcd mqcs.mewma(   x,   limits = NULL,   Xmv = NULL,   S = NULL,   lambda = 0.1,   method = \"sw\",   plot = FALSE,   ... )"},{"path":"https://mflores72000.github.io/qcr/reference/mqcs.mewma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot mewma chart — mqcs.mewma","text":"x object class 'mqcd' ... Arguments passed methods. data.name string specifies title displayed plots.  provided taken name object x. limits two-values vector specifying control limits. Xmv mean vector. specified Phase II  parameters distribution known. S sample covariance matrix. used Phase II  parameters distribution known. method method employed compute covariance matrix individual observation case. Two methods used \"sw\"  compute according (Sullivan,Woodall 1996a) \"hm\"  (Holmes,Mergen 1993) plot Logical value. TRUE mewma chart plotted. lambda smoothing constant. values 0.1, 0.2,...,0.9 allowed.","code":""},{"path":[]},{"path":"https://mflores72000.github.io/qcr/reference/mqcs.mewma.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to plot mewma chart — mqcs.mewma","text":"Edgar Santos-Fernandez","code":""},{"path":"https://mflores72000.github.io/qcr/reference/mqcs.mewma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot mewma chart — mqcs.mewma","text":"","code":"## ##  Continuous data  ## library(qcr) data(dowel1) str(dowel1) #> 'data.frame':\t40 obs. of  2 variables: #>  $ diameter: num  0.492 0.501 0.491 0.492 0.505 0.5 0.497 0.509 0.49 0.499 ... #>  $ length  : num  0.988 1.011 1.008 0.97 1.003 ... data.mqcd <- mqcd(dowel1) res.mqcs <- mqcs.mewma(data.mqcd) summary(res.mqcs) #>  #> Summary of group statistics: #>        V1          #>  Min.   :0.04165   #>  1st Qu.:0.95586   #>  Median :1.69276   #>  Mean   :1.62204   #>  3rd Qu.:1.89606   #>  Max.   :4.17595   #>  #> Number of quality characteristics:  2 #> Number of samples or observations:  40 #> Number of observations or sample size:  1 #>  #> Mean Vector:  #>  0.500875 1.001825 #> Covariance Matrix: #>          diameter       length #> [1,] 4.908654e-05 8.584936e-05 #> [2,] 8.584936e-05 4.199429e-04 #>  #> Control limits:  #>    lcl    ucl  #> 0.0000 8.6336  #>  #> Number beyond limits: 0  plot(res.mqcs, title =\" MEWMA Control Chart for dowel1\")"},{"path":"https://mflores72000.github.io/qcr/reference/mqcs.t2.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot t2 Hotelling chart — mqcs.t2","title":"Function to plot t2 Hotelling chart — mqcs.t2","text":"function used compute statistics required t2 HOTELLING  Shewhart Multivariate chart.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/mqcs.t2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot t2 Hotelling chart — mqcs.t2","text":"","code":"mqcs.t2(x, ...)  # S3 method for default mqcs.t2(   x,   data.name = NULL,   limits = NULL,   Xmv = NULL,   S = NULL,   colm = NULL,   alpha = 0.01,   phase = 1,   method = \"sw\",   plot = FALSE,   ... )  # S3 method for mqcd mqcs.t2(   x,   limits = NULL,   Xmv = NULL,   S = NULL,   colm = NULL,   alpha = 0.01,   phase = 1,   method = \"sw\",   plot = FALSE,   ... )"},{"path":"https://mflores72000.github.io/qcr/reference/mqcs.t2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot t2 Hotelling chart — mqcs.t2","text":"x object class 'mqcd' ... Arguments passed methods. data.name string specifies title displayed plots.  provided taken name object x. limits two-values vector specifying control limits. Xmv mean vector. specified Phase II  parameters distribution known. S sample covariance matrix. used Phase II  parameters distribution known. colm number samples (m) used Hotelling  control chart Phase II. alpha significance level (0.01 default) phase Allows select type UCL use. values phase = 1 2 allowed. method method employed compute covariance matrix individual observation case. Two methods used \"sw\"  compute according (Sullivan,Woodall 1996a) \"hm\"  (Holmes,Mergen 1993) plot Logical value. TRUE t2 chart plotted.","code":""},{"path":[]},{"path":"https://mflores72000.github.io/qcr/reference/mqcs.t2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to plot t2 Hotelling chart — mqcs.t2","text":"Edgar Santos-Fernandez","code":""},{"path":"https://mflores72000.github.io/qcr/reference/mqcs.t2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot t2 Hotelling chart — mqcs.t2","text":"","code":"## ##  Continuous data  ## library(qcr) data(dowel1) str(dowel1) #> 'data.frame':\t40 obs. of  2 variables: #>  $ diameter: num  0.492 0.501 0.491 0.492 0.505 0.5 0.497 0.509 0.49 0.499 ... #>  $ length  : num  0.988 1.011 1.008 0.97 1.003 ... data.mqcd <- mqcd(dowel1) res.mqcs <- mqcs.t2(data.mqcd) summary(res.mqcs) #>  #> Summary of group statistics: #>        V1          #>  Min.   :0.09137   #>  1st Qu.:0.60154   #>  Median :1.66096   #>  Mean   :1.95000   #>  3rd Qu.:2.64402   #>  Max.   :5.34020   #>  #> Number of quality characteristics:  2 #> Number of samples or observations:  40 #> Number of observations or sample size:  1 #>  #> Mean Vector:  #>  0.500875 1.001825 #> Covariance Matrix: #>          diameter       length #> [1,] 4.908654e-05 8.584936e-05 #> [2,] 8.584936e-05 4.199429e-04 #>  #> Control limits:  #>      lcl      ucl  #>  0.00000 12.44888  #>  #> Number beyond limits: 0  plot(res.mqcs, title =\" Hotelling Control Chart for dowel1\")   data(archery1) str(archery1) #>  num [1:24, 1:2, 1:3] 24.14 28.55 3.97 28.57 -3.43 ... #>  - attr(*, \"dimnames\")=List of 3 #>   ..$ : NULL #>   ..$ : chr [1:2] \"x-coordinate\" \"y-coordinate\" #>   ..$ : NULL #>  - attr(*, \"names\")= chr [1:144] \"x-coordinate\" \"y-coordinate\" NA NA ... data.mqcd <- mqcd(archery1) res.mqcs <- mqcs.t2(data.mqcd) summary(res.mqcs) #>  #> Summary of group statistics: #>        V1          #>  Min.   :0.04769   #>  1st Qu.:0.37341   #>  Median :0.92883   #>  Mean   :1.51997   #>  3rd Qu.:2.11386   #>  Max.   :6.16892   #>  #> Number of quality characteristics:  2 #> Number of samples or observations:  24 #> Number of observations or sample size:  3 #>  #> Mean Vector:  #>  6.779028 5.772917 #> Covariance Matrix: #>           [,1]      [,2] #> [1,] 105.25999  48.44271 #> [2,]  48.44271 149.28805 #>  #> Control limits:  #>      lcl      ucl  #> 0.000000 9.958262  #>  #> Number beyond limits: 0  plot(res.mqcs, title =\" Hotelling Control Chart for archery1\")"},{"path":"https://mflores72000.github.io/qcr/reference/mstate.control.html","id":null,"dir":"Reference","previous_headings":"","what":"Multivariate process state — mstate.control","title":"Multivariate process state — mstate.control","text":"function removes observations sample violates  rules process control.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/mstate.control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multivariate process state — mstate.control","text":"","code":"mstate.control(x)"},{"path":"https://mflores72000.github.io/qcr/reference/mstate.control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multivariate process state — mstate.control","text":"x Object mqcd (Multivariate Quality Control Statistical) control logical value indicating whether initial sample comes  process control.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/mstate.control.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multivariate process state — mstate.control","text":"","code":"## ##  Continuous data  ## library(qcr) set.seed(356) x <- matrix(rnorm(66),ncol=3) x <- rbind(x,matrix(rexp(66,100),ncol=3)) dim(x) #> [1] 44  3 x <-mqcd(x) str(x) #>  'mqcd' num [1:44, 1:3, 1] 0.306 -1.179 -0.322 -0.258 1.389 ... #>  - attr(*, \"data.name\")= chr \" DATA\" #>  - attr(*, \"type.data\")= chr \"Multivariate\" x <-mqcs.mewma(x) str(x) #> List of 9 #>  $ mqcd      : 'mqcd' num [1:44, 1:3, 1] 0.306 -1.179 -0.322 -0.258 1.389 ... #>   ..- attr(*, \"data.name\")= chr \" DATA\" #>   ..- attr(*, \"type.data\")= chr \"Multivariate\" #>  $ type      : chr \"mewma\" #>  $ statistics: num [1:44, 1] 13.9 14.6 10.1 15 14.1 ... #>  $ mean      : num [1:3] 0.1665 0.0843 0.3165 #>  $ S         : num [1:3, 1:3] 0.6165 0.0546 0.0468 0.0546 0.6994 ... #>  $ lambda    : num 0.1 #>  $ limits    : Named num [1:2] 0 10.8 #>   ..- attr(*, \"names\")= chr [1:2] \"lcl\" \"ucl\" #>  $ data.name : chr \" DATA\" #>  $ violations: int [1:5] 1 2 4 5 19 #>  - attr(*, \"class\")= chr [1:2] \"mqcs.mewma\" \"mqcs\" plot(x)  data.mqcs <- mstate.control(x) x <-mqcs.mewma(data.mqcs) plot(x)"},{"path":"https://mflores72000.github.io/qcr/reference/npqcd.html","id":null,"dir":"Reference","previous_headings":"","what":"It creates a data object for Non Parametric Quality Control — npqcd","title":"It creates a data object for Non Parametric Quality Control — npqcd","text":"creates object class 'npqcd' perform statistical quality control. object used plot Non Parametric Multivariate Control Charts.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/npqcd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"It creates a data object for Non Parametric Quality Control — npqcd","text":"","code":"npqcd(x, G = NULL, data.name = NULL)"},{"path":"https://mflores72000.github.io/qcr/reference/npqcd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"It creates a data object for Non Parametric Quality Control — npqcd","text":"x matrix, data-frame array contain data.  Dimension observations. G x matrix, data frame list. matrix data frame, row viewed one multivariate observation. data.name string specifies title displayed plots.  provided taken name object x.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/npqcd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"It creates a data object for Non Parametric Quality Control — npqcd","text":"","code":"library(qcr)  set.seed(356) data <- matrix(rnorm(999), nc = 3) x <-rexp(999,0.5)  x <-matrix(x,ncol=3)  data.npqcd <- npqcd(data,x) str(data.npqcd) #> List of 2 #>  $ x: num [1:333, 1:3, 1] 0.306 -1.179 -0.322 -0.258 1.389 ... #>  $ G: num [1:333, 1:3] 1.75 1.47 5.4 0.97 1.55 ... #>  - attr(*, \"data.name\")= chr \"DATA\" #>  - attr(*, \"type.data\")= chr \"Multivariate\" #>  - attr(*, \"class\")= chr [1:2] \"npqcd\" \"list\""},{"path":"https://mflores72000.github.io/qcr/reference/npqcs.add.html","id":null,"dir":"Reference","previous_headings":"","what":"npqcs.add Add a matrix, data.frame or array object with a npqcs object — npqcs.add","title":"npqcs.add Add a matrix, data.frame or array object with a npqcs object — npqcs.add","text":"function used join two objects type matrix, data.frame array npqcs.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/npqcs.add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"npqcs.add Add a matrix, data.frame or array object with a npqcs object — npqcs.add","text":"","code":"npqcs.add(x, ...)  # S3 method for default npqcs.add(x, value, ...)"},{"path":"https://mflores72000.github.io/qcr/reference/npqcs.add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"npqcs.add Add a matrix, data.frame or array object with a npqcs object — npqcs.add","text":"x Object type npqcs ... Arguments passed methods. value Object type data.frame, matrix array.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/npqcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Statistical Quality Control Object — npqcs","title":"Statistical Quality Control Object — npqcs","text":"Create object class 'npqcs' perform statistical quality control. function used compute statistics required plot  Non Parametric Multivariate Control Charts.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/npqcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Statistical Quality Control Object — npqcs","text":"","code":"npqcs(x, method = c(\"Tukey\", \"Liu\", \"Mahalanobis\", \"RP\", \"LD\"), ...)"},{"path":"https://mflores72000.github.io/qcr/reference/npqcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Statistical Quality Control Object — npqcs","text":"x Object npqcd (Non Parametric Multivariate Quality Control Data) method Character string determines depth function used.  method can \"Tukey\" (default), \"Liu\", \"Mahalanobis\", \"RP\" Random Project \"LD\" Likelihood depth. ... Arguments passed methods.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/npqcs.Q.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot the Q chart — npqcs.Q","title":"Function to plot the Q chart — npqcs.Q","text":"function used compute statistics required Non Parametric Q chart.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/npqcs.Q.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot the Q chart — npqcs.Q","text":"","code":"npqcs.Q(x, ...)  # S3 method for default npqcs.Q(   x,   G,   data.name = NULL,   limits = NULL,   method = c(\"Tukey\", \"Liu\", \"Mahalanobis\", \"RP\", \"LD\"),   alpha = 0.01,   plot = FALSE,   ... )  # S3 method for npqcd npqcs.Q(   x,   data.name,   limits = NULL,   method = c(\"Tukey\", \"Liu\", \"Mahalanobis\", \"RP\", \"LD\"),   alpha = 0.01,   plot = FALSE,   ... )"},{"path":"https://mflores72000.github.io/qcr/reference/npqcs.Q.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot the Q chart — npqcs.Q","text":"x object class \"npqcd\". ... Arguments passed methods. G x matrix, data frame list. matrix data frame, row viewed one multivariate observation. data.name string specifies title displayed plots.  provided taken name object x. limits two-value vector specifying control limits lower central. method Character string determines depth function used.  method can \"Tukey\" (default), \"Liu\", \"Mahalanobis\", \"RP\" Random Project \"LD\" Likelihood depth. alpha significance level (0.01 default) plot Logical value. TRUE Q chart plotted.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/npqcs.Q.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Function to plot the Q chart — npqcs.Q","text":"Regina Liu (1995)","code":""},{"path":"https://mflores72000.github.io/qcr/reference/npqcs.Q.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot the Q chart — npqcs.Q","text":"","code":"if (FALSE) {  ## ##  Continuous data  ## library(qcr) set.seed(12345) mu<-c(0,0) Sigma<- matrix(c(1,0,0,1),nrow = 2,ncol = 2) u <- c(2,2) S <- matrix(c(4,0,0,4),nrow = 2,ncol = 2) G <- rmvnorm(540, mean = mu, sigma = Sigma) x<- rmvnorm(40,mean=u,sigma = S) x <- rbind(G[501:540,],x) n <- 4 # samples m <- 20  # measurements k <- 2  # number of variables x.a <- array(,dim=c(n,k,m)) for (i in 1:m){ x.a[,,i] <- x[(1+(i-1)*n):(i*n),] } M <- G[1:500,] data.npqcd <- npqcd(x.a,M) str(data.npqcd) res.npqcs <- npqcs.Q(data.npqcd,method = \"Liu\", alpha=0.025) str(res.npqcs) summary(res.npqcs) plot(res.npqcs,title =\" Q Control Chart\")}"},{"path":"https://mflores72000.github.io/qcr/reference/npqcs.r.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot the r chart — npqcs.r","title":"Function to plot the r chart — npqcs.r","text":"function used compute statistics required Non Parametric r chart.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/npqcs.r.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot the r chart — npqcs.r","text":"","code":"npqcs.r(x, ...)  # S3 method for default npqcs.r(   x,   G,   data.name = NULL,   limits = NULL,   method = c(\"Tukey\", \"Liu\", \"Mahalanobis\", \"RP\", \"LD\"),   alpha = 0.01,   plot = FALSE,   ... )  # S3 method for npqcd npqcs.r(   x,   data.name,   limits = NULL,   method = c(\"Tukey\", \"Liu\", \"Mahalanobis\", \"RP\", \"LD\"),   alpha = 0.01,   plot = FALSE,   ... )"},{"path":"https://mflores72000.github.io/qcr/reference/npqcs.r.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot the r chart — npqcs.r","text":"x object class \"npqcd\". ... Arguments passed methods. G x matrix, data frame list. matrix data frame, row viewed one multivariate observation. data.name string specifies title displayed plots.  provided taken name object x. limits two-value vector specifying control limits lower central. method Character string determines depth function used.  method can \"Tukey\" (default), \"Liu\", \"Mahalanobis\", \"RP\" Random Project \"LD\" Likelihood depth. alpha significance level (default alpha = 0.01) plot Logical value. TRUE r chart plotted.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/npqcs.r.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Function to plot the r chart — npqcs.r","text":"Regina Liu (1995)","code":""},{"path":"https://mflores72000.github.io/qcr/reference/npqcs.r.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot the r chart — npqcs.r","text":"","code":"if (FALSE) { library(qcr) set.seed(356) mu<-c(0,0) Sigma<- matrix(c(1,0,0,1),nrow = 2,ncol = 2) u <- c(2,2) S <- matrix(c(4,0,0,4),nrow = 2,ncol = 2) G <- rmvnorm(540, mean = mu, sigma = Sigma) x<- rmvnorm(40,mean=u,sigma = S) x <- rbind(G[501:540,],x) M <- G[1:500,] data.npqcd <- npqcd(x,M) str(data.npqcd) res.npqcs <- npqcs.r(data.npqcd,method = \"Liu\", alpha=0.025) str(res.npqcs) summary(res.npqcs) plot(res.npqcs,title =\" r Control Chart\")  }"},{"path":"https://mflores72000.github.io/qcr/reference/npqcs.S.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot the S chart — npqcs.S","title":"Function to plot the S chart — npqcs.S","text":"function used compute statistics required Non Parametric S chart.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/npqcs.S.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot the S chart — npqcs.S","text":"","code":"npqcs.S(x, ...)  # S3 method for default npqcs.S(   x,   G,   data.name = NULL,   limits = NULL,   method = c(\"Tukey\", \"Liu\", \"Mahalanobis\", \"RP\", \"LD\"),   alpha = 0.01,   plot = FALSE,   standardize = FALSE,   ... )  # S3 method for npqcd npqcs.S(   x,   data.name,   limits = NULL,   method = c(\"Tukey\", \"Liu\", \"Mahalanobis\", \"RP\", \"LD\"),   alpha = 0.01,   plot = FALSE,   standardize = F,   ... )"},{"path":"https://mflores72000.github.io/qcr/reference/npqcs.S.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot the S chart — npqcs.S","text":"x object class \"npqcd\". ... Arguments passed methods. G x matrix, data frame list. matrix data frame, row viewed one multivariate observation. data.name string specifies title displayed plots.  provided taken name object x. limits two-value vector specifying control limits lower central. method Character string determines depth function used.  method can \"Tukey\" (default), \"Liu\", \"Mahalanobis\", \"RP\" Random Project \"LD\" Likelihood depth. alpha significance level (default alpha = 0.01) plot Logical value. TRUE S chart plotted. standardize logical value indicating data standardized.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/npqcs.S.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Function to plot the S chart — npqcs.S","text":"Regina Liu (1995)","code":""},{"path":"https://mflores72000.github.io/qcr/reference/npqcs.S.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot the S chart — npqcs.S","text":"","code":"if (FALSE) { ## ##  Continuous data  ## set.seed(12345) mu<-c(0,0) Sigma<- matrix(c(1,0,0,1),nrow = 2,ncol = 2) u <- c(2,2) S <- matrix(c(4,0,0,4),nrow = 2,ncol = 2) G <- rmvnorm(540, mean = mu, sigma = Sigma) x<- rmvnorm(40,mean=u,sigma = S) x.a <- rbind(G[501:540,],x) M <- G[1:500,] data.npqcd <- npqcd(x.a,M) res.npqcs <- npqcs.S(data.npqcd,method = \"Liu\", alpha=0.05) summary(res.npqcs) plot(res.npqcs,title =\" S Control Chart\")}"},{"path":"https://mflores72000.github.io/qcr/reference/npstate.control.html","id":null,"dir":"Reference","previous_headings":"","what":"Non parametric process state — npstate.control","title":"Non parametric process state — npstate.control","text":"function removes observations sample violates  rules process control.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/npstate.control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Non parametric process state — npstate.control","text":"","code":"npstate.control(x, control = FALSE)"},{"path":"https://mflores72000.github.io/qcr/reference/npstate.control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Non parametric process state — npstate.control","text":"x object class \"npqcd\" (Quality Control Statitical Non Parametric). control logical value indicating whether initial sample comes  process control.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/npstate.control.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Non parametric process state — npstate.control","text":"","code":"if (FALSE) { ## ##  Continuous data  ## library(qcr) set.seed(356) mu<-c(0,0) Sigma<- matrix(c(1,0,0,1),nrow = 2,ncol = 2) mu <- c(2,2) S <- matrix(c(4,0,0,4),nrow = 2,ncol = 2) G <- rmvnorm(540, mean = mu, sigma = Sigma) x<- rmvnorm(40,mean=mu,sigma = S) x <- rbind(G[501:540,],x) M <- G[1:500,] data.npqcd <- npqcd(x,M) str(data.npqcd) res.npqcs <- npqcs.r(data.npqcd,method = \"Liu\", alpha=0.025) str(res.npqcs) summary(res.npqcs) plot(res.npqcs) new.npqcd <- npstate.control(x = res.npqcs) res.npqcs <- npqcs.r(new.npqcd) summary(res.npqcs) plot(res.npqcs)   }"},{"path":"https://mflores72000.github.io/qcr/reference/orangejuice.html","id":null,"dir":"Reference","previous_headings":"","what":"Orange juice data — orangejuice","title":"Orange juice data — orangejuice","text":"Frozen orange juice concentrate packed 6-oz cardboard cans. cans formed machine spinning cardboard stock attaching metal bottom panel. can inspected determine whether, filled, liquid possible leak either side seam around bottom joint. occurs can considered nonconforming. data collected 30 samples 50 cans half-hour intervals three-shift period machine continuous operation. sample 15 used, new bacth cardboard stock punt production. Sample 23 obtained inexperienced operator temporarily assigned machine. first 30 samples, machine adjustment made. 24 samples taken process.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/orangejuice.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Orange juice data — orangejuice","text":"data frame 54 observations following 4 variables: sample Sample ID D Number defectives size Sample sizes trial Trial samples (TRUE/FALSE)","code":""},{"path":"https://mflores72000.github.io/qcr/reference/orangejuice.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Orange juice data — orangejuice","text":"Montgomery, D.C. (1991) Introduction Statistical Quality Control, 2nd ed, New York, John Wiley & Sons, pp. 152--155.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/orangejuice.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Orange juice data — orangejuice","text":"","code":"data(orangejuice) orangejuice$d <- orangejuice$D/orangejuice$size attach(orangejuice) summary(orangejuice) #>        D              sample           size      trial               d          #>  Min.   : 2.000   Min.   : 1.00   Min.   :50   Mode :logical   Min.   :0.0400   #>  1st Qu.: 5.000   1st Qu.:14.25   1st Qu.:50   FALSE:24        1st Qu.:0.1000   #>  Median : 7.000   Median :27.50   Median :50   TRUE :30        Median :0.1400   #>  Mean   : 8.889   Mean   :27.50   Mean   :50                   Mean   :0.1778   #>  3rd Qu.:12.000   3rd Qu.:40.75   3rd Qu.:50                   3rd Qu.:0.2400   #>  Max.   :24.000   Max.   :54.00   Max.   :50                   Max.   :0.4800   boxplot(d ~ trial)  mark <- ifelse(trial, 1, 2) plot(sample, d, type=\"b\", col=mark, pch=mark)"},{"path":"https://mflores72000.github.io/qcr/reference/oxidation.html","id":null,"dir":"Reference","previous_headings":"","what":"Oxidation Onset Temperature — oxidation","title":"Oxidation Onset Temperature — oxidation","text":"database contains information level purity  batch Picual varities. type oil  measuring Oxidation Onset Temperature (OOT).  50 subsamples oil temperature oxide, subsample size 5.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/oxidation.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Oxidation Onset Temperature — oxidation","text":"data frame 250 observations following 2 variables: OOT quantitative variable controls quality oil. sample sample id","code":""},{"path":"https://mflores72000.github.io/qcr/reference/oxidation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Oxidation Onset Temperature — oxidation","text":"","code":"data(oxidation) attach(oxidation) #> The following object is masked from orangejuice: #>  #>     sample summary(oxidation) #>       OOT            sample     #>  Min.   :103.3   Min.   : 1.0   #>  1st Qu.:143.7   1st Qu.:13.0   #>  Median :162.1   Median :25.5   #>  Mean   :160.4   Mean   :25.5   #>  3rd Qu.:178.0   3rd Qu.:38.0   #>  Max.   :221.3   Max.   :50.0   plot(OOT, type=\"b\",xlab='Observations')  detach(oxidation)"},{"path":"https://mflores72000.github.io/qcr/reference/pcmanufact.html","id":null,"dir":"Reference","previous_headings":"","what":"Personal computer manufacturer data — pcmanufact","title":"Personal computer manufacturer data — pcmanufact","text":"personal computer manufacturer counts number nonconformities per unit final assembly line. collects data 20 samples 5 computers .","code":""},{"path":"https://mflores72000.github.io/qcr/reference/pcmanufact.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Personal computer manufacturer data — pcmanufact","text":"data frame 20 observations following 3 variables. x quantitative variable measures number nonconformities sample. sample Sample ID size Number computers inspected.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/pcmanufact.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Personal computer manufacturer data — pcmanufact","text":"Montgomery, D.C. (1991) Introduction Statistical Quality Control, 2nd ed, New York, John Wiley & Sons, pp. 181--182","code":""},{"path":"https://mflores72000.github.io/qcr/reference/pcmanufact.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Personal computer manufacturer data — pcmanufact","text":"","code":"data(pcmanufact) summary(pcmanufact) #>        x             sample           size   #>  Min.   : 5.00   Min.   : 1.00   Min.   :5   #>  1st Qu.: 7.00   1st Qu.: 5.75   1st Qu.:5   #>  Median :10.00   Median :10.50   Median :5   #>  Mean   : 9.65   Mean   :10.50   Mean   :5   #>  3rd Qu.:11.25   3rd Qu.:15.25   3rd Qu.:5   #>  Max.   :16.00   Max.   :20.00   Max.   :5   plot(pcmanufact$x/pcmanufact$size, type=\"b\")"},{"path":"https://mflores72000.github.io/qcr/reference/pistonrings.html","id":null,"dir":"Reference","previous_headings":"","what":"Piston rings data — pistonrings","title":"Piston rings data — pistonrings","text":"database contains information inside  diameter piston rings. Piston rings manufactured automobile  engine produced forging process. process  considered \"control\" measured 25 samples, size 5.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/pistonrings.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Piston rings data — pistonrings","text":"data frame 200 observations following 3 variables. diameter numeric vector. sample Sample ID trial Trial sample indicator (TRUE/FALSE)","code":""},{"path":"https://mflores72000.github.io/qcr/reference/pistonrings.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Piston rings data — pistonrings","text":"Montgomery, D.C. (1991) Introduction Statistical Quality Control, 2nd ed, New York, John Wiley & Sons, pp. 206--213","code":""},{"path":"https://mflores72000.github.io/qcr/reference/pistonrings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Piston rings data — pistonrings","text":"","code":"data(pistonrings) attach(pistonrings) #> The following objects are masked from orangejuice: #>  #>     sample, trial summary(pistonrings) #>     diameter         sample        trial         #>  Min.   :73.97   Min.   : 1.00   Mode :logical   #>  1st Qu.:74.00   1st Qu.:10.75   FALSE:75        #>  Median :74.00   Median :20.50   TRUE :125       #>  Mean   :74.00   Mean   :20.50                   #>  3rd Qu.:74.01   3rd Qu.:30.25                   #>  Max.   :74.04   Max.   :40.00                   boxplot(diameter ~ sample)  plot(sample, diameter, cex=0.7) lines(tapply(diameter,sample,mean))  detach(pistonrings)"},{"path":"https://mflores72000.github.io/qcr/reference/plates.html","id":null,"dir":"Reference","previous_headings":"","what":"Vickers hardness data — plates","title":"Vickers hardness data — plates","text":"known chemical company developing patent  new variant artificial stone composed mostly quartz ( 93wt  polyester resin . company launching pilot plant  begins produce plates material industry scale. order  measure degree product homogeneity, 50 samples taken,  performed 5 measurements per plate corresponding different areas  artificial stone Vickers hardness","code":""},{"path":"https://mflores72000.github.io/qcr/reference/plates.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Vickers hardness data — plates","text":"data frame 250 observations following 2 variables: hardness quantitative variable measure Vickers hardness corresponding different    areas artificial stone. sample Sample ID","code":""},{"path":"https://mflores72000.github.io/qcr/reference/plates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vickers hardness data — plates","text":"","code":"data(plates) attach(plates) #> The following object is masked from orangejuice: #>  #>     sample summary(plates) #>     hardness          sample     #>  Min.   : 55.98   Min.   : 1.0   #>  1st Qu.:180.29   1st Qu.:13.0   #>  Median :195.30   Median :25.5   #>  Mean   :192.05   Mean   :25.5   #>  3rd Qu.:204.75   3rd Qu.:38.0   #>  Max.   :242.69   Max.   :50.0   plot(hardness, type=\"b\")  detach(plates)"},{"path":"https://mflores72000.github.io/qcr/reference/plot.fdqcd.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for 'fdqcd' objects — plot.fdqcd","title":"Plot method for 'fdqcd' objects — plot.fdqcd","text":"Generic function plotting Multivarite charts object class 'fdqcd'  perform statistical quality control.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/plot.fdqcd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for 'fdqcd' objects — plot.fdqcd","text":"","code":"# S3 method for fdqcd plot(x, y = NULL, title = NULL, xlab = NULL, ylab = NULL, col = NULL, ...)"},{"path":"https://mflores72000.github.io/qcr/reference/plot.fdqcd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for 'fdqcd' objects — plot.fdqcd","text":"x Object fdqcd (pashe ) y Object fdqcd (monitoring) title overall title plot. xlab title 'x' axis. ylab title 'y' axis. col color curves. ... Arguments passed methods.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/plot.fdqcd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for 'fdqcd' objects — plot.fdqcd","text":"","code":"library(qcr) m <- 30 tt<-seq(0,1,len=m) mu<-30 * tt * (1 - tt)^(3/2) n0 <- 100 set.seed(12345) mdata<-matrix(NA,ncol=m,nrow=n0) sigma <- exp(-3*as.matrix(dist(tt))/0.9) for (i in 1:n0) mdata[i,]<- mu+0.5*mvrnorm(mu = mu,Sigma = sigma ) fdchart <- fdqcd(mdata) plot(fdchart,type=\"l\",col=\"gray\")"},{"path":"https://mflores72000.github.io/qcr/reference/plot.fdqcs.depth.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for 'fdqcs.depth' objects — plot.fdqcs.depth","title":"Plot method for 'fdqcs.depth' objects — plot.fdqcs.depth","text":"Generic function plotting charts object class 'fdqcs.depth' perform statistical  quality control.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/plot.fdqcs.depth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for 'fdqcs.depth' objects — plot.fdqcs.depth","text":"","code":"# S3 method for fdqcs.depth plot(   x,   title.fdata = NULL,   title.depth = NULL,   xlab = NULL,   ylab = NULL,   col = NULL,   draw.control = NULL,   ... )"},{"path":"https://mflores72000.github.io/qcr/reference/plot.fdqcs.depth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for 'fdqcs.depth' objects — plot.fdqcs.depth","text":"x Object fdqcs.depth title.fdata overall title fdata plot title.depth overall title depth plot xlab title x axis ylab title y axis col color curves draw.control ist specifies col, lty lwd objects: fdataobj, statistic, . ... arguments passed methods.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/plot.fdqcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for 'fdqcs.depth' objects — plot.fdqcs.depth","title":"Plot method for 'fdqcs.depth' objects — plot.fdqcs.depth","text":"Generic function plotting charts object class 'fdqcs.depth' perform statistical  quality control.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/plot.fdqcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for 'fdqcs.depth' objects — plot.fdqcs.depth","text":"","code":"# S3 method for fdqcs.depth plot(   x,   title.fdata = NULL,   title.depth = NULL,   xlab = NULL,   ylab = NULL,   col = NULL,   draw.control = NULL,   ... )"},{"path":"https://mflores72000.github.io/qcr/reference/plot.fdqcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for 'fdqcs.depth' objects — plot.fdqcs.depth","text":"x object class fdqcs.depth title.fdata overall title fdata plot. title.depth overall title depth plot. xlab title x axis. ylab title y axis. col color curves. draw.control specifies col, lty lwd objects:  fdataobj, statistic, . ... Arguments passed methods.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/plot.fdqcs.rank.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for 'fdqcs.rank' objects — plot.fdqcs.rank","title":"Plot method for 'fdqcs.rank' objects — plot.fdqcs.rank","text":"Generic function plotting charts object class 'fdqcs.rank'  perform statistical quality control.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/plot.fdqcs.rank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for 'fdqcs.rank' objects — plot.fdqcs.rank","text":"","code":"# S3 method for fdqcs.rank plot(   x,   title.fdata = NULL,   title.rank = NULL,   xlab = NULL,   ylab = NULL,   col = NULL,   draw.control = NULL,   ... )"},{"path":"https://mflores72000.github.io/qcr/reference/plot.fdqcs.rank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for 'fdqcs.rank' objects — plot.fdqcs.rank","text":"x object class fdqcs.rank title.fdata overall title fdata plot. title.rank overall title depth plot. xlab title x axis. ylab title y axis. draw.control specifies col, lty lwd objects:  fdataobj, statistic, . ... Arguments passed methods.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/plot.mqcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for 'mqcs' objects — plot.mqcs","title":"Plot method for 'mqcs' objects — plot.mqcs","text":"Generic function plotting Multivarite charts object class 'mqcs'  perform statistical quality control.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/plot.mqcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for 'mqcs' objects — plot.mqcs","text":"","code":"# S3 method for mqcs plot(x, title, subtitle, xlab, ylab, ylim, ...)  # S3 method for mqcs.t2 plot(   x,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   ylim = NULL,   ... )  # S3 method for mqcs.mcusum plot(   x,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   ylim = NULL,   ... )  # S3 method for mqcs.mewma plot(   x,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   ylim = NULL,   ... )"},{"path":"https://mflores72000.github.io/qcr/reference/plot.mqcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for 'mqcs' objects — plot.mqcs","text":"x Object class 'mqcs' (Multivarite Quality Control Statical) title overall title plot. subtitle sub title plot. xlab title 'x' axis. ylab title 'y' axis. ylim 'y' limits plot. ... Arguments passed methods.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/plot.mqcs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for 'mqcs' objects — plot.mqcs","text":"","code":"if (FALSE) { ##  ## Continuous data  ##  data(dowel1)  data.mqcd <- mqcd(dowel1)   res.mqcs <- mqcs.mcusum(data.mqcd)  plot(res.mqcs, title =\" MCUSUM Control Chart \", subtitle=\"Database dowel1\",      xlab = \"Observations\", ylab = \"MCUSUM\", ylim = c(-1,6.5))   res1.mqcs <- mqcs.mewma(data.mqcd)  plot(res1.mqcs, title =\" MEWMA Control Chart\", subtitle=\"Database dowel1\",      xlab = \"Observations\", ylab = \"MEWMA\", ylim = c(-1,10))        res2.mqcs <- mqcs.t2(data.mqcd) plot(res2.mqcs, title =\" Hotelling Control Chart\",subtitle=\"Database dowel1\",      xlab = \"Observations\", ylab = \"T2 Hotelling\", ylim = c(-1,14))}"},{"path":"https://mflores72000.github.io/qcr/reference/plot.npqcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for 'npqcs' objects — plot.npqcs","title":"Plot method for 'npqcs' objects — plot.npqcs","text":"Generic function plotting Multivariate charts object class 'npqcs' perform statistical quality control.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/plot.npqcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for 'npqcs' objects — plot.npqcs","text":"","code":"# S3 method for npqcs plot(x, title, subtitle, xlab, ylab, ylim, lim = TRUE, ...)  # S3 method for npqcs.r plot(   x,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   ylim = NULL,   ... )  # S3 method for npqcs.Q plot(   x,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   ylim = NULL,   ... )  # S3 method for npqcs.S plot(   x,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   ylim = NULL,   ... )"},{"path":"https://mflores72000.github.io/qcr/reference/plot.npqcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for 'npqcs' objects — plot.npqcs","text":"x object class \"npqcs\" (Multivariate Statistical Quality Control) title overall title plot. subtitle sub title plot. xlab title \"x\" axis. ylab title \"y\" axis. ylim \"y\" limits plot. lim logical value indicating limits constant. ... Arguments passed methods.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/plot.qcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create a plotting 'qcs' object — plot.qcs","title":"Function to create a plotting 'qcs' object — plot.qcs","text":"Generic function plotting Shewhart charts object class 'qcs' perform statistical  quality control.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/plot.qcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create a plotting 'qcs' object — plot.qcs","text":"","code":"# S3 method for qcs plot(   x,   title,   subtitle,   xlab,   ylab,   ylim,   center.nominal = NULL,   limits.specification = NULL,   limits.alert = NULL,   type.data = c(\"continuous\", \"atributte\", \"dependence\"),   ... )  # S3 method for qcs.xbar plot(   x,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   ylim = NULL,   conf.nsigma.alert = NULL,   center.nominal = NULL,   limits.specification = NULL,   ... )  # S3 method for qcs.S plot(   x,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   ylim = NULL,   conf.nsigma.alert = NULL,   center.nominal = NULL,   limits.specification = NULL,   ... )  # S3 method for qcs.R plot(   x,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   ylim = NULL,   conf.nsigma.alert = NULL,   center.nominal = NULL,   limits.specification = NULL,   ... )  # S3 method for qcs.one plot(   x,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   ylim = NULL,   conf.nsigma.alert = NULL,   center.nominal = NULL,   limits.specification = NULL,   ... )  # S3 method for qcs.p plot(   x,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   ylim = NULL,   conf.nsigma.alert = NULL,   center.nominal = NULL,   limits.specification = NULL,   ... )  # S3 method for qcs.np plot(   x,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   ylim = NULL,   conf.nsigma.alert = NULL,   center.nominal = NULL,   limits.specification = NULL,   ... )  # S3 method for qcs.c plot(   x,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   ylim = NULL,   conf.nsigma.alert = NULL,   center.nominal = NULL,   limits.specification = NULL,   ... )  # S3 method for qcs.u plot(   x,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   ylim = NULL,   conf.nsigma.alert = NULL,   center.nominal = NULL,   limits.specification = NULL,   ... )  # S3 method for qcs.ewma plot(   x,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   ylim = NULL,   ... )  # S3 method for qcs.cusum plot(   x,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   ylim = NULL,   ... )"},{"path":"https://mflores72000.github.io/qcr/reference/plot.qcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create a plotting 'qcs' object — plot.qcs","text":"x object class \"qcs\" (Quality Control Statical). title overall title plot. subtitle sub title plot. xlab title \"x\" axis. ylab title \"y\" axis. ylim \"y\" limits plot. center.nominal value specifying  center group statistics \"target\" value  process. limits.specification two-value vector  specifying control limits. limits.alert two-value vector  specifying control alert limits. type.data string specifying type data. ... Arguments passed methods. conf.nsigma.alert numeric value used compute control limits, specifying number standard deviations (conf.nsigma > 1) confidence level (0 < conf.nsigma < 1). conf.nsigma numeric value used compute control limits, specifying number standard deviations (conf.nsigma > 1) confidence level (0 < conf.nsigma < 1).","code":""},{"path":"https://mflores72000.github.io/qcr/reference/presion.html","id":null,"dir":"Reference","previous_headings":"","what":"Level of pressure data — presion","title":"Level of pressure data — presion","text":"shipyard recreational boats manufacturing,  intended optimize control mechanical properties hull yacht models.  made study modulus elasticity tensile strength epoxy resin  (polymer) used, applying different curing pressures measured: 0.1 y 10 MPa.   60 subsamples composed three measurements taken day taken.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/presion.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Level of pressure data — presion","text":"data frame 180 observations following 3 variables: presion Presion level. sample sample id measur Pressures measured: 0.1 y 10 MPa","code":""},{"path":"https://mflores72000.github.io/qcr/reference/presion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Level of pressure data — presion","text":"","code":"data(presion) attach(presion) #> The following object is masked _by_ .GlobalEnv: #>  #>     presion #> The following object is masked from orangejuice: #>  #>     sample #> The following object is masked from package:qcr: #>  #>     presion summary(presion) #>     presion              sample          measur       #>  Min.   :5.872e+08   Min.   : 1.00   Min.   : 0.100   #>  1st Qu.:9.871e+08   1st Qu.:15.75   1st Qu.: 0.100   #>  Median :1.115e+09   Median :30.50   Median : 0.100   #>  Mean   :1.110e+09   Mean   :30.50   Mean   : 4.885   #>  3rd Qu.:1.257e+09   3rd Qu.:45.25   3rd Qu.:10.000   #>  Max.   :1.390e+09   Max.   :60.00   Max.   :10.000   plot(presion$presion, type=\"b\")  detach(presion)"},{"path":"https://mflores72000.github.io/qcr/reference/qcd.html","id":null,"dir":"Reference","previous_headings":"","what":"Quality Control Data — qcd","title":"Quality Control Data — qcd","text":"Create object class 'qcd' perform statistical quality control. object may used plot Shewhart charts, Multivariate Control Charts, .","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quality Control Data — qcd","text":"","code":"qcd(   data,   var.index = 1,   sample.index = 2,   covar.index = NULL,   covar.names = NULL,   data.name = NULL,   type.data = c(\"continuous\", \"atributte\", \"dependence\"),   sizes = NULL )"},{"path":"https://mflores72000.github.io/qcr/reference/qcd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quality Control Data — qcd","text":"data matrix data-frame contain data, index sample , optionally, covariate(s). var.index scalar column number corresponding observed data variable (variable quality).  Alternativelly can string name quality variable. sample.index scalar column number corresponding index fo group (sample). covar.index Optional. scalar numeric vector column number(s) corresponding covariate(s). Alternativelly can character vector names covariates. covar.names Optional. string vector strings indicating names covariate columns.  valid one column data. default, takes names original object. data.name string specifying name variable appears plots. provided, taken object given data. type.data string specifying type data. sizes Optional. value vector values specifying sample sizes associated group. continuous data, sample sizes obtained  counting non-NA elements sample.index vector.  attribute variable argument sizes required.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quality Control Data — qcd","text":"","code":"if (FALSE) { library(qcr) data(pistonrings) str(pistonrings) pistonrings.qcd<-qcd(pistonrings) class(pistonrings.qcd) }"},{"path":"https://mflores72000.github.io/qcr/reference/qcr.html","id":null,"dir":"Reference","previous_headings":"","what":"Quality Control Review — qcr","title":"Quality Control Review — qcr","text":"Quality Control Review","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Quality Control Review — qcr","text":"Univariate multivariate SQC tools completes increases SQC techniques available R. Apart integrating different R packages devoted SQC ('qcc','MSQC'), provides nonparametric tools highly useful Gaussian assumption met. package computes standard univariate control charts individual measurements, X-bar, S, R, p, np, c, u, EWMA CUSUM. addition, includes functions perform multivariate control charts Hotelling T2, MEWMA MCUSUM. representative feature, multivariate nonparametric alternatives based data depth implemented package: r, Q S control charts. addition, Phase II control charts functional data included. package also allows  estimation complete set capability indices first fourth generation, covering nonparametric alternatives, performing corresponding capability analysis graphical outputs, including process capability plots.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.add.html","id":null,"dir":"Reference","previous_headings":"","what":"qcs.add Add a data.frame object with a qcs object — qcs.add","title":"qcs.add Add a data.frame object with a qcs object — qcs.add","text":"function used join two objects type data.frame qcs.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"qcs.add Add a data.frame object with a qcs object — qcs.add","text":"","code":"qcs.add(x, ...)  # S3 method for default qcs.add(   x,   value,   var.index = NULL,   sample.index = NULL,   covar.index = NULL,   ... )"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"qcs.add Add a data.frame object with a qcs object — qcs.add","text":"x Object type qcs ... Arguments passed methods. value Object type data.frame var.index scalar column number corresponding observed data variable (variable quality).  Alternatively can string name quality variable. sample.index scalar column number corresponding index group (sample). covar.index Optional. scalar numeric vector column number(s) corresponding covariate(s). Alternatively can character vector names covariates.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.c.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot Shewhart c chart — qcs.c","title":"Function to plot Shewhart c chart — qcs.c","text":"function used compute statistics required c chart.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot Shewhart c chart — qcs.c","text":"","code":"qcs.c(x, ...)  # S3 method for default qcs.c(   x,   var.index = 1,   sample.index = 2,   covar.index = NULL,   covar.names = NULL,   data.name = NULL,   sizes = NULL,   center = NULL,   conf.nsigma = 3,   limits = NULL,   plot = FALSE,   ... )  # S3 method for qcd qcs.c(x, center = NULL, conf.nsigma = 3, limits = NULL, plot = FALSE, ...)"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot Shewhart c chart — qcs.c","text":"x object class \"qcd\". ... Arguments passed methods. var.index scalar column number corresponding observed data variable (variable quality).  Alternativelly can string name quality variable. sample.index scalar column number corresponding index fo group (sample). covar.index Optional. scalar numeric vector column number(s) corresponding covariate(s). Alternativelly can character vector names covariates. covar.names Optional. string vector strings indicating names covariate columns.  valid one column data. default, takes names original object. data.name string specifying name variable appears plots. provided, taken object given data. sizes Optional. value vector values specifying sample sizes associated group. continuous data, sample sizes obtained  counting non-NA elements sample.index vector.  attribute variable argument sizes required. center value specifying center group statistics ''target'' value process. conf.nsigma numeric value used compute control limits, specifying number standard deviations (conf.nsigma > 1) confidence level (0 < conf.nsigma < 1). limits two-value vector specifying control limits. plot Logical value. TRUE c chart plotted.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.c.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot Shewhart c chart — qcs.c","text":"","code":"library(qcr) data(circuit) attach(circuit) #> The following objects are masked from orangejuice: #>  #>     sample, size, trial str(circuit) #> 'data.frame':\t46 obs. of  4 variables: #>  $ x     : int  21 24 16 12 15 5 28 20 31 25 ... #>  $ sample: int  1 2 3 4 5 6 7 8 9 10 ... #>  $ size  : int  100 100 100 100 100 100 100 100 100 100 ... #>  $ trial : logi  TRUE TRUE TRUE TRUE TRUE TRUE ... datos <- circuit datos$sample <- 1:length(datos$x) str(datos) #> 'data.frame':\t46 obs. of  4 variables: #>  $ x     : int  21 24 16 12 15 5 28 20 31 25 ... #>  $ sample: int  1 2 3 4 5 6 7 8 9 10 ... #>  $ size  : int  100 100 100 100 100 100 100 100 100 100 ... #>  $ trial : logi  TRUE TRUE TRUE TRUE TRUE TRUE ... sizes <- datos[,2]  datos.qcd <- qcd(data = datos, var.index = 1,sample.index = 2,                 sizes = size, type.data = \"atributte\") res.qcs <- qcs.c(datos.qcd) summary(res.qcs) #> c chart for datos  #>  #> Summary of group statistics: #>        c         #>  Min.   : 5.00   #>  1st Qu.:16.00   #>  Median :19.00   #>  Mean   :19.17   #>  3rd Qu.:22.00   #>  Max.   :39.00   #>  #> Group sample size:  100 #> Number of groups:  46 #> Center of group statistics:  19.17391 #> Standard deviation:  4.378803  #>  #> Control limits:  #>       LCL      UCL #>  6.037505 32.31032 #>  #> Beyond limits of control:  #> [1] 39  5 #>  #> Violationg runs:  #> [1] 12 15 plot(res.qcs)"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.ca.html","id":null,"dir":"Reference","previous_headings":"","what":"Capability Analysis — qcs.ca","title":"Capability Analysis — qcs.ca","text":"Calculates process capability indices Cp, Cpk, Cpl, Cpu, Cpm, Cpmk  qcs object normal distribution. Also, function calculates confidence limits \\(C_p\\) using method described Chou et al. (1990).  Approximate confidence limits \\(C_{pl}\\), \\(C_{pu}\\) \\(C_{pk}\\) computed using method Bissell (1990).  Confidence limits \\(C_{pm}\\) based method Boyles (1991);  method approximate assumes target midway  specification limits. Moreover, calculates process capability indices CNp, CNpk, CNpm, CNpmk qcs object.  histogram density curve displayed along specification limits,  Quantile-Quantile Plot specified distribution contour graph plotted  estimate index Cpm.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.ca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Capability Analysis — qcs.ca","text":"","code":"qcs.ca(   object,   limits = c(lsl = -3, usl = 3),   target = NULL,   std.dev = NULL,   nsigmas = 3,   confidence = 0.9973,   plot = TRUE,   main = NULL,   ... )"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.ca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Capability Analysis — qcs.ca","text":"object qcs object type \"qcs.xbar\" \"qcs.one\". limits vector specifying lower upper specification limits. target value specifying target process.  NULL, target set middle value specification limits. std.dev value specifying within-group standard deviation. nsigmas numeric value specifying number sigmas use. confidence numeric value 0 1 specifying probabilities  computing quantiles. values used object values provided.  default confidence=0.9973. plot Logical value indicating whether graph plotted. main Title plot. ... Arguments passed methods.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.ca.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Capability Analysis — qcs.ca","text":"Montgomery, D.C. (1991) Introduction Statistical Quality Control, 2nd ed, New York, John Wiley & Sons.  Tong, L.. Chen, J.P. (1998), Lower con???dence limits process capability  indices nonnormal process distributions. International Journal Quality & Reliability Management,  Vol. 15 . 8/9, pp. 907-19. Vannman, K (1995) Unified Approach Capability Indices. Statitica Sinica,5,805-820. Vannman, K. (2001). Graphical Method Control Process Capability. Frontiers Statistical Quality Control,  6, Editors: H-J Lenz P-TH Wilrich. Physica-Verlag, Heidelberg, 290-311. Hubele Vannman (2004). E???ect Pooled Un-pooled Variance Estimators Cpm Using Subsamples. Journal Quality Technology, 36, 207-222.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.ca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Capability Analysis — qcs.ca","text":"","code":"library(qcr) data(pistonrings)  xbar <- qcs.xbar(pistonrings[1:125,],plot = TRUE)  LSL=73.99; USL=74.01 limits = c(lsl = 73.99, usl = 74.01) qcs.ca(xbar, limits = limits) #>  #> Process Capability Analysis #>  #> Call: #> qcs.ca(object = xbar, limits = limits) #>  #> Number of obs = 125          Target = 74 #>        Center =  74               LSL =  73.99 #>        StdDev =  0.009785         USL =  74.01 #>  #> Paremetric Capability indices: #>  #>        Value    0.1%   99.9% #> Cp    0.3407  0.2771  0.4065 #> Cp_l  0.3807  0.2739  0.4875 #> Cp_u  0.3006  0.2021  0.3991 #> Cp_k  0.3006  0.1944  0.4068 #> Cpm   0.3382  0.2749  0.4038 #>  #>  #> Non parametric Capability indices: #>  #>         Value #> CNp    1.0082 #> CNpK   0.9275 #> CNpm   0.9799 #> CNpmk  0.9015 #>  #>  #> PPM: #>  #>          Exp<LSL 1.267e+07       Obs<LSL 0 #>          Exp>USL 1.836e+07       Obs>USL 8e+05 #>        Exp Total 3.103e+07     Obs Total 8e+05 #>  #> Test: #>  #>  #> \tAnderson Darling Test for normal distribution #>  #> data:  xbar  #> Error in round(x$statistic, 4): non-numeric argument to mathematical function"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.cp.html","id":null,"dir":"Reference","previous_headings":"","what":"Process capability indices (parametric) — qcs.cp","title":"Process capability indices (parametric) — qcs.cp","text":"Calculates \\(Cp\\), \\(Cpm\\) using formulation described Kerstin Vannman(1995).","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.cp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process capability indices (parametric) — qcs.cp","text":"","code":"qcs.cp(   object,   parameters = c(u = 0, v = 0),   limits = c(lsl = -3, usl = 3),   target = NULL,   mu = 0,   std.dev = 1,   nsigmas = 3,   k = 1,   contour = TRUE,   ylim = NULL,   ... )"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.cp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process capability indices (parametric) — qcs.cp","text":"object qcs object type \"qcs.xbar\" \"qcs.one\". parameters vector specifying u v parameters values.  parameters = c(u=0, v=0), Cp indice calculed;  parameters = c(u=1, v=0), Cpk indice calculed; parameters = c(u=0, v=1), Cpm indice calculed;  parameters = c(u=1, v=1), Cpmk indice calculed. limits vector specifying lower upper specification limits. target value specifying target process.  NULL, target set middle value specification limits. mu value specifying mean data. std.dev value specifying within-group standard deviation. nsigmas numeric value specifying number sigmas use. k numeric value. capacity index exceeds k value,  process capable. contour Logical value indicating whether contour graph plotted. ylim 'y' limits plot. ... Arguments passed methods.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.cp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Process capability indices (parametric) — qcs.cp","text":"Montgomery, D.C. (1991) Introduction Statistical Quality Control, 2nd ed, New York, John Wiley & Sons.  Vannman, K (1995) Unified Approach Capability Indices. Statitica Sinica,5,805-820.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.cp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process capability indices (parametric) — qcs.cp","text":"","code":"library(qcr) data(pistonrings)  xbar <- qcs.xbar(pistonrings[1:125,],plot = TRUE)  mu <-xbar$center std.dev <-xbar$std.dev LSL=73.99; USL=74.01 qcs.cp(parameters = c(0,0),limits = c(LSL,USL),       mu = mu,std.dev = std.dev,ylim=c(0,1)) #>     Cp  delta  gamma  #> 0.3407 0.1176 0.9785  #calculating all the indices qcs.cp(object = xbar,parameters = c(0,0), limits = c(LSL,USL),ylim=c(0,1))  #>     Cp  delta  gamma  #> 0.3407 0.1176 0.9785  qcs.cp(object = xbar,parameters = c(1,0), limits = c(LSL,USL),ylim=c(0,1))  #>    Cpk  delta  gamma  #> 0.3006 0.1176 0.9785  qcs.cp(object = xbar,parameters = c(0,1), limits = c(LSL,USL),ylim=c(0,1))  #>    Cpm  delta  gamma  #> 0.3382 0.1176 0.9785  qcs.cp(object = xbar,parameters = c(1,1), limits = c(LSL,USL),ylim=c(0,1))  #>   Cpmk  delta  gamma  #> 0.2984 0.1176 0.9785"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.cpn.html","id":null,"dir":"Reference","previous_headings":"","what":"Process capability indices (Nonparametric) — qcs.cpn","title":"Process capability indices (Nonparametric) — qcs.cpn","text":"Calculates \\(CNp\\), \\(CNpm\\) using formulation  described Tong Chen (1998).","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.cpn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process capability indices (Nonparametric) — qcs.cpn","text":"","code":"qcs.cpn(   object,   parameters = c(u = 0, v = 0),   limits = c(lsl = -3, usl = 3),   q = c(lq = -3, uq = 3),   target = NULL,   median = 0,   nsigmas = 3,   confidence = 0.9973 )"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.cpn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process capability indices (Nonparametric) — qcs.cpn","text":"object qcs object type \"qcs.xbar\" \"qcs.one\". parameters vector specifying u v parameters values.  parameters = c(u=0, v=0), CNp indice calculed;  parameters = c(u=1, v=0), CNpk indice calculed; parameters = c(u=0, v=1), CNpm indice calculed;  parameters = c(u=1, v=1), CNpmk indice calculed. limits vector specifying lower upper specification limits. q vector specifying lower upper quantiles. values  necessary, object value missing. target value specifying target process.  NULL, target set middle value specification limits. median value specifying median data. nsigmas numeric value specifying number sigmas use. confidence numeric value 0 1 specifying probabilities  computing quantiles. values used object values provided.  default confidence=0.9973.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.cpn.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Process capability indices (Nonparametric) — qcs.cpn","text":"Montgomery, D.C. (1991) Introduction Statistical Quality Control, 2nd ed, New York, John Wiley & Sons.  Tong, L.. Chen, J.P. (1998), Lower confidence limits process capability  indices nonnormal process distributions. International Journal Quality & Reliability Management,  Vol. 15 . 8/9, pp. 907-19.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.cpn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process capability indices (Nonparametric) — qcs.cpn","text":"","code":"library(qcr) ##' data(pistonrings)  xbar <- qcs.xbar(pistonrings[1:125,],plot = TRUE)  x<-xbar$statistics[[1]] LSL=73.99; USL=74.01 median <-median(x) lq=as.numeric(quantile(x,probs=0.00135)) uq=as.numeric(quantile(x,probs=0.99865)) qcs.cpn(parameters = c(0,0),limits = c(LSL,USL),        median = median, q=c(lq,uq)) #>    CNp  #> 1.0082  qcs.cpn(object = xbar,parameters = c(0,0), limits = c(LSL,USL)) #>    CNp  #> 1.0082  qcs.cpn(object = xbar,parameters = c(1,0), limits = c(LSL,USL)) #>   CNpk  #> 0.9275  qcs.cpn(object = xbar,parameters = c(0,1), limits = c(LSL,USL)) #>   CNpm  #> 0.9799  qcs.cpn(object = xbar,parameters = c(1,1), limits = c(LSL,USL)) #>  CNpmk  #> 0.9015"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.cusum.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot the cusum chart — qcs.cusum","title":"Function to plot the cusum chart — qcs.cusum","text":"function used compute statistics required cusum chart.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.cusum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot the cusum chart — qcs.cusum","text":"","code":"qcs.cusum(x, ...)  # S3 method for default qcs.cusum(   x,   var.index = 1,   sample.index = 2,   covar.index = NULL,   covar.names = NULL,   data.name = NULL,   sizes = NULL,   center = NULL,   std.dev = NULL,   decision.interval = 5,   se.shift = 1,   plot = FALSE,   ... )  # S3 method for qcd qcs.cusum(   x,   center = NULL,   std.dev = NULL,   decision.interval = 5,   se.shift = 1,   plot = FALSE,   ... )"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.cusum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot the cusum chart — qcs.cusum","text":"x object class \"qcd\". ... Arguments passed methods. var.index scalar column number corresponding observed data variable (variable quality).  Alternativelly can string name quality variable. sample.index scalar column number corresponding index fo group (sample). covar.index Optional. scalar numeric vector column number(s) corresponding covariate(s). Alternativelly can character vector names covariates. covar.names Optional. string vector strings indicating names covariate columns.  valid one column data. default, takes names original object. data.name string specifying name variable appears plots. provided, taken object given data. sizes value vector values specifying sample sizes associated group. center value specifying center group statistics ''target'' value process. std.dev value available method specifying within-group standard deviation(s) process.  Several methods available estimating standard deviation. decision.interval numeric value specifying number standard errors summary statistics cumulative sum control. se.shift amount shift detect process, measured standard errors summary statistics. plot Logical value. TRUE cusum chart plotted.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.cusum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot the cusum chart — qcs.cusum","text":"","code":"library(qcr) data(pistonrings) attach(pistonrings) #> The following objects are masked from circuit: #>  #>     sample, trial #> The following objects are masked from orangejuice: #>  #>     sample, trial res.qcd <- qcd(pistonrings, type.data = \"dependence\") res.qcs <- qcs.cusum(res.qcd, type = \"cusum\") summary(res.qcs) #> cusum chart for pistonrings  #>  #> Summary of group statistics: #>      cusum       #>  Min.   :73.99   #>  1st Qu.:74.00   #>  Median :74.00   #>  Mean   :74.00   #>  3rd Qu.:74.01   #>  Max.   :74.02   #>  #> Group sample size:  5 #> Number of groups:  40 #> Center of group statistics:  74.0036 #> Standard deviation:  0.01007094  #>  #> Control limits:  #> [1] -5  5 #>  #> Beyond limits of control:  #>  [1] 73.9902 74.0060 73.9966 74.0008 74.0074 73.9982 74.0092 73.9998 74.0016 #> [10] 74.0024 73.9982 73.9922 73.9974 #>  #> Violationg runs:  #> [1] 74.0196 74.0234 74.0128 plot(res.qcs)"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.ewma.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot ewma chart — qcs.ewma","title":"Function to plot ewma chart — qcs.ewma","text":"function used compute statistics required ewma chart.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.ewma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot ewma chart — qcs.ewma","text":"","code":"qcs.ewma(x, ...)  # S3 method for default qcs.ewma(   x,   var.index = 1,   sample.index = 2,   covar.index = NULL,   covar.names = NULL,   data.name = NULL,   sizes = NULL,   center = NULL,   std.dev = NULL,   nsigma = 3,   lambda = 0.2,   plot = FALSE,   ... )  # S3 method for qcd qcs.ewma(   x,   center = NULL,   std.dev = NULL,   nsigma = 3,   lambda = 0.2,   plot = FALSE,   ... )"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.ewma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot ewma chart — qcs.ewma","text":"x object class \"qcd\". ... Arguments passed methods. var.index scalar column number corresponding observed data variable (variable quality).  Alternativelly can string name quality variable. sample.index scalar column number corresponding index fo group (sample). covar.index Optional. scalar numeric vector column number(s) corresponding covariate(s). Alternativelly can character vector names covariates. covar.names Optional. string vector strings indicating names covariate columns.  valid one column data. default, takes names original object. data.name string specifying name variable appears plots. provided, taken object given data. sizes Optional. value vector values specifying sample sizes associated group. continuous data, sample sizes obtained  counting non-NA elements sample.index vector.  attribute variable argument sizes required. center value specifying center group statistics ''target'' value process. std.dev value available method specifying within-group standard deviation(s) process. Several methods available estimating standard deviation case continuous process variable. nsigma numeric value used compute control limits, specifying number standard deviations. lambda smoothing parameter \\(0 \\le \\lambda \\le 1\\) plot Logical value. TRUE ewma chart plotted.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.ewma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot ewma chart — qcs.ewma","text":"","code":"library(qcr) data(pistonrings) attach(pistonrings) #> The following objects are masked from pistonrings (pos = 3): #>  #>     diameter, sample, trial #> The following objects are masked from circuit: #>  #>     sample, trial #> The following objects are masked from orangejuice: #>  #>     sample, trial res.qcd <- qcd(pistonrings, type.data = \"dependence\") res.qcs <- qcs.ewma(res.qcd, type = \"ewma\") summary(res.qcs) #> ewma chart for pistonrings  #>  #> Summary of group statistics: #>       ewma       #>  Min.   :73.99   #>  1st Qu.:74.00   #>  Median :74.00   #>  Mean   :74.00   #>  3rd Qu.:74.01   #>  Max.   :74.02   #>  #> Group sample size:  5 #> Number of groups:  40 #> Center of group statistics:  74.0036 #> Standard deviation:  0.01007094  #>  #> Control limits:  #>         LCL      UCL #> 1  74.00090 74.00631 #> 2  74.00014 74.00707 #> 3  73.99974 74.00747 #> 4  73.99950 74.00771 #> 5  73.99935 74.00786 #> 6  73.99926 74.00795 #> 7  73.99920 74.00801 #> 8  73.99916 74.00805 #> 9  73.99914 74.00807 #> 10 73.99913 74.00808 #> 11 73.99912 74.00809 #> 12 73.99911 74.00810 #> 13 73.99911 74.00810 #> 14 73.99911 74.00810 #> 15 73.99910 74.00811 #> 16 73.99910 74.00811 #> 17 73.99910 74.00811 #> 18 73.99910 74.00811 #> 19 73.99910 74.00811 #> 20 73.99910 74.00811 #> 21 73.99910 74.00811 #> 22 73.99910 74.00811 #> 23 73.99910 74.00811 #> 24 73.99910 74.00811 #> 25 73.99910 74.00811 #> 26 73.99910 74.00811 #> 27 73.99910 74.00811 #> 28 73.99910 74.00811 #> 29 73.99910 74.00811 #> 30 73.99910 74.00811 #> 31 73.99910 74.00811 #> 32 73.99910 74.00811 #> 33 73.99910 74.00811 #> 34 73.99910 74.00811 #> 35 73.99910 74.00811 #> 36 73.99910 74.00811 #> 37 73.99910 74.00811 #> 38 73.99910 74.00811 #> 39 73.99910 74.00811 #> 40 73.99910 74.00811 #>  #> Beyond limits of control:  #> [1] 73.9902 #>  #> Violationg runs:  #> [1] 73.9966 plot(res.qcs)"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.hat.cpm.html","id":null,"dir":"Reference","previous_headings":"","what":"Process capability index (estimate Cpm) — qcs.hat.cpm","title":"Process capability index (estimate Cpm) — qcs.hat.cpm","text":"Estimate  \"Cpm\" using method described Kerstin Vannman(2001).","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.hat.cpm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process capability index (estimate Cpm) — qcs.hat.cpm","text":"","code":"qcs.hat.cpm(   object,   limits = c(lsl = -3, usl = 3),   target = NULL,   mu = 0,   std.dev = 1,   nsigmas = 3,   k0 = 1,   alpha = 0.05,   n = 50,   contour = TRUE,   ylim = NULL,   ... )"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.hat.cpm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process capability index (estimate Cpm) — qcs.hat.cpm","text":"object qcs object type \"qcs.xbar\" \"qcs.one\". limits vector specifying lower upper specification limits. target value specifying target process.  NULL, target set middle value specification limits. mu value specifying mean data. std.dev value specifying within-group standard deviation. nsigmas numeric value specifying number sigmas use. k0 numeric value. capacity index exceeds k value,  process capable. alpha significance level (default alpha=0.05). n Size sample. contour Logical value indicating whether contour graph plotted. ylim \"y\" limits plot. ... Arguments passed methods.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.hat.cpm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Process capability index (estimate Cpm) — qcs.hat.cpm","text":"Montgomery, D.C. (1991) Introduction Statistical Quality Control, 2nd ed, New York, John Wiley & Sons.  Vannman, K. (2001). Graphical Method Control Process Capability. Frontiers Statistical Quality Control,  6, Editors: H-J Lenz P-TH Wilrich. Physica-Verlag, Heidelberg, 290-311. Hubele Vannman (2004). E???ect Pooled Un-pooled Variance Estimators Cpm Using Subsamples. Journal Quality Technology, 36, 207-222.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.hat.cpm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process capability index (estimate Cpm) — qcs.hat.cpm","text":"","code":"library(qcr) data(pistonrings)  xbar <- qcs.xbar(pistonrings[1:125,],plot = TRUE)  mu <-xbar$center std.dev <-xbar$std.dev LSL=73.99; USL=74.01 qcs.hat.cpm(limits = c(LSL,USL),            mu = mu,std.dev = std.dev,ylim=c(0,1)) qcs.hat.cpm(object = xbar, limits = c(LSL,USL),ylim=c(0,1))"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Quality Control Statistics — qcs","title":"Quality Control Statistics — qcs","text":"Create object class 'qcs' perform statistical quality control. object may used plot Shewhart charts, Multivariate Control Charts, .","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quality Control Statistics — qcs","text":"","code":"qcs(   x,   sample.index,   sizes = NULL,   type = c(\"xbar\", \"R\", \"S\", \"one\", \"p\", \"np\", \"c\", \"u\", \"ewma\", \"cusum\"),   center = NULL,   std.dev,   conf.nsigma = 3,   limits = NULL,   type.data = c(\"continuous\", \"atributte\", \"dependence\"),   lambda = 0.2,   decision.interval = 5,   se.shift = 1 )  qcs.continuous(   x,   sample.index,   sizes = NULL,   type = c(\"xbar\", \"R\", \"S\", \"one\"),   center = NULL,   std.dev,   conf.nsigma = 3,   limits = NULL )  qcs.atributte(   x,   sample.index = NULL,   sizes = NULL,   type = c(\"p\", \"np\", \"c\", \"u\"),   center = NULL,   conf.nsigma = 3,   limits = NULL )  qcs.dependence(   x,   sample.index = NULL,   sizes = NULL,   type = c(\"ewma\", \"cusum\"),   center = NULL,   std.dev,   nsigma = 3,   lambda = 0.2,   decision.interval = 5,   se.shift = 1 )"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quality Control Statistics — qcs","text":"x object class \"qcd\". sample.index scalar column number corresponding index  group (sample). sizes value vector values specifying sample sizes associated group. continuous data sample sizes obtained counting non-NA elements sample.index vector. \"p\", \"np\" \"u\" charts argument sizes required. type character string specifying group statistics compute: center value specifying center group statistics ''target'' value process. std.dev value available method specifying within-group standard deviation(s) process. Several methods available estimating standard deviation case continuous process variable. conf.nsigma numeric value used compute control limits, specifying number standard deviations (conf.nsigma > 1) confidence level (0 < conf.nsigma < 1). limits two-value vector specifying control limits. type.data string specifying el type de data. lambda smoothing parameter \\(0 \\le \\lambda \\le 1\\) decision.interval numeric value specifying number standard errors summary statistics cumulative sum control. se.shift amount shift detect process, measured standard errors summary statistics. nsigma numeric value used compute control limits, specifying number standard deviations.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quality Control Statistics — qcs","text":"Returns object class 'qcs'.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Quality Control Statistics — qcs","text":"Montgomery, D.C. (2000) Introduction Statistical Quality Control, 4th ed. New York: John Wiley & Sons.  Wetherill, G.B. Brown, D.W. (1991) Statistical Process Control. New York: Chapman & Hall.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.np.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot Shewhart np chart — qcs.np","title":"Function to plot Shewhart np chart — qcs.np","text":"function used compute statistics required np chart.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.np.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot Shewhart np chart — qcs.np","text":"","code":"qcs.np(x, ...)  # S3 method for default qcs.np(   x,   var.index = 1,   sample.index = 2,   covar.index = NULL,   covar.names = NULL,   data.name = NULL,   sizes = NULL,   center = NULL,   conf.nsigma = 3,   limits = NULL,   plot = FALSE,   ... )  # S3 method for qcd qcs.np(x, center = NULL, conf.nsigma = 3, limits = NULL, plot = FALSE, ...)"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.np.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot Shewhart np chart — qcs.np","text":"x object class \"qcd\". ... Arguments passed methods. var.index scalar column number corresponding observed data variable (variable quality).  Alternativelly can string name quality variable. sample.index scalar column number corresponding index fo group (sample). covar.index Optional. scalar numeric vector column number(s) corresponding covariate(s). Alternativelly can character vector names covariates. covar.names Optional. string vector strings indicating names covariate columns.  valid one column data. default, takes names original object. data.name string specifying name variable appears plots. provided, taken object given data. sizes Optional. value vector values specifying sample sizes associated group. continuous data, sample sizes obtained  counting non-NA elements sample.index vector.  attribute variable argument sizes required. center value specifying center group statistics ''target'' value process. conf.nsigma numeric value used compute control limits, specifying number standard deviations (conf.nsigma > 1) confidence level (0 < conf.nsigma < 1). limits two-values vector specifying control limits. plot Logical value. TRUE np chart plotted.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.np.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot Shewhart np chart — qcs.np","text":"","code":"library(qcr) data(orangejuice) str(orangejuice) #> 'data.frame':\t54 obs. of  4 variables: #>  $ D     : int  12 15 8 10 4 7 16 9 14 10 ... #>  $ sample: int  1 2 3 4 5 6 7 8 9 10 ... #>  $ size  : int  50 50 50 50 50 50 50 50 50 50 ... #>  $ trial : logi  TRUE TRUE TRUE TRUE TRUE TRUE ... attach(orangejuice) #> The following objects are masked from pistonrings (pos = 3): #>  #>     sample, trial #> The following objects are masked from pistonrings (pos = 4): #>  #>     sample, trial #> The following objects are masked from circuit: #>  #>     sample, size, trial #> The following objects are masked from orangejuice (pos = 6): #>  #>     D, sample, size, trial  datos.qcd <- qcd(data = orangejuice, var.index = 1, sample.index = 2,                 sizes = size, type.data = \"atributte\")  res.qcs <- qcs.np(datos.qcd) summary(res.qcs) #> np chart for orangejuice  #>  #> Summary of group statistics: #>        np         #>  Min.   : 2.000   #>  1st Qu.: 5.000   #>  Median : 7.000   #>  Mean   : 8.889   #>  3rd Qu.:12.000   #>  Max.   :24.000   #>  #> Group sample size:  50 #> Number of groups:  54 #> Center of group statistics:  8.888889 #> Standard deviation:  2.70345  #>  #> Control limits:  #>        LCL      UCL #>  0.7785388 16.99924 #>  #> Beyond limits of control:  #> [1] 17 22 20 18 24 #>  #> Violationg runs:  #>  [1]  9 12  6  2  4  3  6  5  4  8  5  6  7  5  6  3  5 plot(res.qcs)   datos.qcs <- qcs.np(orangejuice[trial,c(1,2)], sizes = orangejuice[trial,3]) plot(datos.qcs)"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.one.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot the Shewhart xbar.one chart — qcs.one","title":"Function to plot the Shewhart xbar.one chart — qcs.one","text":"function used compute statistics required xbar.one chart.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.one.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot the Shewhart xbar.one chart — qcs.one","text":"","code":"qcs.one(x, ...)  # S3 method for default qcs.one(   x,   var.index = 1,   sample.index = 2,   covar.index = NULL,   covar.names = NULL,   data.name = NULL,   sizes = NULL,   center = NULL,   std.dev = c(\"MR\", \"SD\"),   k = 2,   conf.nsigma = 3,   limits = NULL,   plot = FALSE,   ... )  # S3 method for qcd qcs.one(   x,   center = NULL,   std.dev = c(\"MR\", \"SD\"),   k = 2,   conf.nsigma = 3,   limits = NULL,   plot = FALSE,   ... )"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.one.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot the Shewhart xbar.one chart — qcs.one","text":"x object class \"qcd\". ... Arguments passed methods. var.index scalar column number corresponding observed data variable (variable quality).  Alternativelly can string name quality variable. sample.index scalar column number corresponding index fo group (sample). covar.index Optional. scalar numeric vector column number(s) corresponding covariate(s). Alternativelly can character vector names covariates. covar.names Optional. string vector strings indicating names covariate columns.  valid one column data. default, takes names original object. data.name string specifying name variable appears plots. provided, taken object given data. sizes Optional. value vector values specifying sample sizes associated group. continuous data sample sizes obtained counting non-NA elements sample.index vector. attribute variable argument sizes required. center value specifying center group statistics ''target'' value process. std.dev value available method specifying within-group standard deviation(s) process. Several methods available estimating standard deviation case continuous process variable. k Number successive pairs observations computing standard deviation based moving ranges k points. conf.nsigma numeric value used compute control limits, specifying number standard deviations (conf.nsigma > 1) confidence level (0 < conf.nsigma < 1). limits two-value vector specifying control limits. plot Logical value. TRUE xbar.one chart plotted.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.one.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot the Shewhart xbar.one chart — qcs.one","text":"","code":"## ##  Continuous data  ## library(qcr) x <- c(33.75, 33.05, 34, 33.81, 33.46, 34.02, 33.68, 33.27, 33.49, 33.20,       33.62, 33.00, 33.54, 33.12, 33.84)  sample <- 1:length(x) datos <- data.frame(x,sample) datos.qcd <- qcd(datos)  res.qcs <- qcs.one(datos.qcd) class(res.qcs) #> [1] \"qcs.one\" \"qcs\"     summary(res.qcs)   #> one chart for datos  #>  #> Summary of group statistics: #>       one        #>  Min.   :33.00   #>  1st Qu.:33.23   #>  Median :33.54   #>  Mean   :33.52   #>  3rd Qu.:33.78   #>  Max.   :34.02   #>  #> Group sample size:  1 #> Number of groups:  15 #> Center of group statistics:  33.52333 #> Standard deviation:  0.4261651  #>  #> Control limits:  #>       LCL      UCL #>  32.24484 34.80183 #>  #> Number beyond limits: 0  #>  #> Number violationg runs: 0   plot(res.qcs, title = \"Control Chart Xbar.one for pistonrings\")"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.p.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot Shewhart p chart — qcs.p","title":"Function to plot Shewhart p chart — qcs.p","text":"function used compute statistics required p chart.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot Shewhart p chart — qcs.p","text":"","code":"qcs.p(x, ...)  # S3 method for default qcs.p(   x,   var.index = 1,   sample.index = 2,   covar.index = NULL,   covar.names = NULL,   data.name = NULL,   sizes = NULL,   center = NULL,   conf.nsigma = 3,   limits = NULL,   plot = FALSE,   ... )  # S3 method for qcd qcs.p(x, center = NULL, conf.nsigma = 3, limits = NULL, plot = FALSE, ...)"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot Shewhart p chart — qcs.p","text":"x object class \"qcd\". ... Arguments passed methods. var.index scalar column number corresponding observed data variable (variable quality).  Alternativelly can string name quality variable. sample.index scalar column number corresponding index fo group (sample). covar.index Optional. scalar numeric vector column number(s) corresponding covariate(s). Alternativelly can character vector names covariates. covar.names Optional. string vector strings indicating names covariate columns.  valid one column data. default, takes names original object. data.name string specifying name variable appears plots. provided, taken object given data. sizes Optional. value vector values specifying sample sizes associated group. continuous data, sample sizes obtained  counting non-NA elements sample.index vector.  attribute variable argument sizes required. center value specifying center group statistics ''target'' value process. conf.nsigma numeric value used compute control limits, specifying number standard deviations (conf.nsigma > 1) confidence level (0 < conf.nsigma < 1). limits two-values vector specifying control limits. plot Logical value. TRUE p chart plotted.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.p.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot Shewhart p chart — qcs.p","text":"","code":"library(qcr) data(orangejuice) str(orangejuice) #> 'data.frame':\t54 obs. of  4 variables: #>  $ D     : int  12 15 8 10 4 7 16 9 14 10 ... #>  $ sample: int  1 2 3 4 5 6 7 8 9 10 ... #>  $ size  : int  50 50 50 50 50 50 50 50 50 50 ... #>  $ trial : logi  TRUE TRUE TRUE TRUE TRUE TRUE ... attach(orangejuice) #> The following objects are masked from orangejuice (pos = 3): #>  #>     D, sample, size, trial #> The following objects are masked from pistonrings (pos = 4): #>  #>     sample, trial #> The following objects are masked from pistonrings (pos = 5): #>  #>     sample, trial #> The following objects are masked from circuit: #>  #>     sample, size, trial #> The following objects are masked from orangejuice (pos = 7): #>  #>     D, sample, size, trial  datos.qcd <- qcd(data = orangejuice, var.index = 1, sample.index = 2,                 sizes = size, type.data = \"atributte\")  res.qcs <- qcs.p(datos.qcd) summary(res.qcs) #> p chart for orangejuice  #>  #> Summary of group statistics: #>        p          #>  Min.   :0.0400   #>  1st Qu.:0.1000   #>  Median :0.1400   #>  Mean   :0.1778   #>  3rd Qu.:0.2400   #>  Max.   :0.4800   #>  #> Group sample size:  50 #> Number of groups:  54 #> Center of group statistics:  0.1777778 #> Standard deviation:  0.3823256  #>  #> Control limits:  #>         LCL       UCL #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  0.01557078 0.3399848 #>  #> Beyond limits of control:  #> [1] 0.34 0.44 0.40 0.36 0.48 #>  #> Violationg runs:  #>  [1] 0.18 0.24 0.12 0.04 0.08 0.06 0.12 0.10 0.08 0.16 0.10 0.12 0.14 0.10 0.12 #> [16] 0.06 0.10 plot(res.qcs)   datos.qcs <- qcs.p(orangejuice[trial,c(1,2)], sizes = orangejuice[trial,3]) plot(datos.qcs)"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.pcr.html","id":null,"dir":"Reference","previous_headings":"","what":"Process capability indices for a given dataset and distribution — qcs.pcr","title":"Process capability indices for a given dataset and distribution — qcs.pcr","text":"Calculates process capability indices cp, cpk, cpkL cpkU given  dataset distribution.  histogram density curve displayed along specification limits  Quantile-Quantile Plot specified distribution.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.pcr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process capability indices for a given dataset and distribution — qcs.pcr","text":"","code":"qcs.pcr(   object,   distribution = c(\"normal\", \"beta\", \"chi-squared\", \"exponential\", \"f\", \"geometric\",     \"lognormal\", \"log-normal\", \"logistic\", \"t\", \"negative binomial\", \"poisson\",     \"weibull\", \"gamma\"),   limits = c(lsl = -3, usl = 3),   target = NULL,   std.dev = NULL,   boxcox = FALSE,   lambda = c(-5, 5),   confidence = 0.9973,   plot = TRUE,   main = NULL,   ... )"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.pcr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process capability indices for a given dataset and distribution — qcs.pcr","text":"object qcs object type \"qcs.xbar\" \"qcs.one\". distribution Character string represent probability  distribution data, : \"normal\", \"beta\", \"chi-squared\",  \"exponential\", \"f\", \"geometric\", \"lognormal\", \"log-normal\", \"logistic\",\"t\", \"negative binomial\", \"poisson\", \"weibull\", \"gamma\". limits vector specifying lower upper specification limits. target value specifying target process.  NULL, target set middle value specification limits. std.dev value specifying within-group standard deviation. boxcox Logical value (default FALSE). TRUE,  perform Box-Cox transformation. lambda vector specifying numeric value indicating lambda transformation. confidence numeric value 0 1 specifying nivel  computing specification limits. plot Logical value indicating whether graph plotted. main Title plot. ... Arguments passed methods.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.pcr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Process capability indices for a given dataset and distribution — qcs.pcr","text":"Montgomery, D.C. (1991) Introduction Statistical Quality Control, 2nd ed, New York, John Wiley & Sons.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.pcr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process capability indices for a given dataset and distribution — qcs.pcr","text":"","code":"library(qcr) data(pistonrings)  xbar <- qcs.xbar(pistonrings[1:125,],plot = TRUE)  limits = c(lsl = 73.99, usl = 74.01) qcs.pcr(xbar, \"normal\", limits = limits)  #>  #> Process Capability Analysis #>  #> Call: #> qcs.pcr(object = xbar, distribution = \"normal\", limits = limits) #>  #> Number of obs = 125          Target = 74 #>        Center =  74               LSL =  73.99 #>        StdDev =  0.009785         USL =  74.01 #>  #> Capability indices: #>  #>        Value #> Cp    0.3407 #> Cp_l  0.3807 #> Cp_u  0.3006 #> Cp_k  0.3006 #>  #>  #> PPM: #>  #>          Exp<LSL 1.267e+05       Obs<LSL 0 #>          Exp>USL 1.836e+05       Obs>USL 1e+12 #>        Exp Total 3.103e+05     Obs Total 1e+12 #>  #> Test: #>  #>  #> \tAnderson Darling Test for normal distribution #>  #> data:  x  #> Error in round(x$statistic, 4): non-numeric argument to mathematical function  qcs.pcr(xbar, \"weibull\", limits = limits) #>  #> Process Capability Analysis #>  #> Call: #> qcs.pcr(object = xbar, distribution = \"weibull\", limits = limits) #>  #> Number of obs = 125          Target = 74 #>        Center =  74               LSL =  73.99 #>        StdDev =  0.009785         USL =  74.01 #>  #> Capability indices: #>  #>        Value #> Cp    0.5801 #> Cp_l  0.4861 #> Cp_u  0.8402 #> Cp_k  0.4861 #>  #>  #> PPM: #>  #>          Exp<LSL 3.283e+04       Obs<LSL 0 #>          Exp>USL 9965            Obs>USL 1e+12 #>        Exp Total 4.279e+04     Obs Total 1e+12 #>  #> Test: #>  #>  #> \tAnderson Darling Test for weibull distribution #>  #> data:  x  #> Error in round(x$statistic, 4): non-numeric argument to mathematical function"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.R.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot Shewhart R chart — qcs.R","title":"Function to plot Shewhart R chart — qcs.R","text":"function used compute statistics required R chart.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.R.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot Shewhart R chart — qcs.R","text":"","code":"qcs.R(x, ...)  # S3 method for default qcs.R(   x,   var.index = 1,   sample.index = 2,   covar.index = NULL,   covar.names = NULL,   data.name = NULL,   sizes = NULL,   center = NULL,   std.dev = c(\"UWAVE-R\", \"MVLUE-R\"),   conf.nsigma = 3,   limits = NULL,   plot = FALSE,   ... )  # S3 method for qcd qcs.R(   x,   center = NULL,   std.dev = c(\"UWAVE-R\", \"MVLUE-R\"),   conf.nsigma = 3,   limits = NULL,   plot = FALSE,   ... )"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.R.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot Shewhart R chart — qcs.R","text":"x object class \"qcd\". ... Arguments passed methods. var.index scalar column number corresponding observed data variable (variable quality).  Alternativelly can string name quality variable. sample.index scalar column number corresponding index fo group (sample). covar.index Optional. scalar numeric vector column number(s) corresponding covariate(s). Alternativelly can character vector names covariates. covar.names Optional. string vector strings indicating names covariate columns.  valid one column data. default, takes names original object. data.name string specifying name variable appears plots. provided, taken object given data. sizes Optional. value vector values specifying sample sizes associated group. continuous data, sample sizes obtained  counting non-NA elements sample.index vector.  attribute variable argument sizes required. center value specifying center group statistics ''target'' value process. std.dev value available method specifying within-group standard deviation(s) process. Several methods available estimating standard deviation case continuous process variable. conf.nsigma numeric value used compute control limits, specifying number standard deviations (conf.nsigma > 1) confidence level (0 < conf.nsigma < 1). limits two-values vector specifying control limits. plot Logical value. TRUE R chart plotted.","code":""},{"path":[]},{"path":"https://mflores72000.github.io/qcr/reference/qcs.R.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot Shewhart R chart — qcs.R","text":"","code":"## ##  Continuous data  ## library(qcr) data(pistonrings) str(pistonrings) #> 'data.frame':\t200 obs. of  3 variables: #>  $ diameter: num  74 74 74 74 74 ... #>  $ sample  : int  1 1 1 1 1 2 2 2 2 2 ... #>  $ trial   : logi  TRUE TRUE TRUE TRUE TRUE TRUE ... pistonrings.qcd<-qcd(pistonrings)  class(pistonrings.qcd) #> [1] \"qcd\"        \"data.frame\"  res.qcs <- qcs.R(pistonrings.qcd) class(res.qcs) #> [1] \"qcs.R\" \"qcs\"   plot(res.qcs,title=\"Control Chart R for pistonrings\")  summary(res.qcs)   #> R chart for pistonrings  #>  #> Summary of group statistics: #>        R           #>  Min.   :0.00800   #>  1st Qu.:0.01875   #>  Median :0.02250   #>  Mean   :0.02343   #>  3rd Qu.:0.02675   #>  Max.   :0.04400   #>  #> Group sample size:  5 #> Number of groups:  40 #> Center of group statistics:  0.023425 #> Standard deviation:  0.01007094  #>  #> Control limits:  #>  LCL        UCL #>    0 0.04953145 #>  #> Number beyond limits: 0  #>  #> Number violationg runs: 0"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.S.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot Shewhart S chart — qcs.S","title":"Function to plot Shewhart S chart — qcs.S","text":"function used compute statistics required S chart.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.S.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot Shewhart S chart — qcs.S","text":"","code":"qcs.S(x, ...)  # S3 method for default qcs.S(   x,   var.index = 1,   sample.index = 2,   covar.index = NULL,   covar.names = NULL,   data.name = NULL,   sizes = NULL,   center = NULL,   std.dev = c(\"UWAVE-SD\", \"MVLUE-SD\", \"RMSDF\"),   conf.nsigma = 3,   limits = NULL,   plot = FALSE,   ... )  # S3 method for qcd qcs.S(   x,   center = NULL,   std.dev = c(\"UWAVE-SD\", \"MVLUE-SD\", \"RMSDF\"),   conf.nsigma = 3,   limits = NULL,   plot = FALSE,   ... )"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.S.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot Shewhart S chart — qcs.S","text":"x object class \"qcd\". ... Arguments passed methods. var.index scalar column number corresponding observed data variable (variable quality).  Alternativelly can string name quality variable. sample.index scalar column number corresponding index fo group (sample). covar.index Optional. scalar numeric vector column number(s) corresponding covariate(s). Alternativelly can character vector names covariates. covar.names Optional. string vector strings indicating names covariate columns.  valid one column data. default, takes names original object. data.name string specifying name variable appears plots. provided, taken object given data. sizes Optional. value vector values specifying sample sizes associated group. continuous data, sample sizes obtained  counting non-NA elements sample.index vector.  attribute variable argument sizes required. center value specifying center group statistics ''target'' value process. std.dev value available method specifying within-group standard deviation(s) process. Several methods available estimating standard deviation case continuous process variable. conf.nsigma numeric value used compute control limits, specifying number standard deviations (conf.nsigma > 1) confidence level (0 < conf.nsigma < 1). limits two-values vector specifying control limits. plot Logical value. TRUE S chart plotted.","code":""},{"path":[]},{"path":"https://mflores72000.github.io/qcr/reference/qcs.S.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot Shewhart S chart — qcs.S","text":"","code":"## ##  Continuous data  ## library(qcr) data(pistonrings) str(pistonrings) #> 'data.frame':\t200 obs. of  3 variables: #>  $ diameter: num  74 74 74 74 74 ... #>  $ sample  : int  1 1 1 1 1 2 2 2 2 2 ... #>  $ trial   : logi  TRUE TRUE TRUE TRUE TRUE TRUE ... pistonrings.qcd<-qcd(pistonrings)  class(pistonrings.qcd) #> [1] \"qcd\"        \"data.frame\"  res.qcs <- qcs.S(pistonrings.qcd) class(res.qcs) #> [1] \"qcs.S\" \"qcs\"   plot(res.qcs,title=\"Control Chart S for pistonrings\")  summary(res.qcs)   #> S chart for pistonrings  #>  #> Summary of group statistics: #>        S            #>  Min.   :0.002864   #>  1st Qu.:0.007294   #>  Median :0.008703   #>  Mean   :0.009436   #>  3rd Qu.:0.011566   #>  Max.   :0.016547   #>  #> Group sample size:  5 #> Number of groups:  40 #> Center of group statistics:  0.009435682 #> Standard deviation:  0.01003811  #>  #> Control limits:  #>  LCL        UCL #>    0 0.01971112 #>  #> Number beyond limits: 0  #>  #> Number violationg runs: 0"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.u.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot Shewhart u chart — qcs.u","title":"Function to plot Shewhart u chart — qcs.u","text":"function used compute statistics required u chart.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.u.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot Shewhart u chart — qcs.u","text":"","code":"qcs.u(x, ...)  # S3 method for default qcs.u(   x,   var.index = 1,   sample.index = 2,   covar.index = NULL,   covar.names = NULL,   data.name = NULL,   sizes = NULL,   center = NULL,   conf.nsigma = 3,   limits = NULL,   plot = FALSE,   ... )  # S3 method for qcd qcs.u(x, center = NULL, conf.nsigma = 3, limits = NULL, plot = FALSE, ...)"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.u.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot Shewhart u chart — qcs.u","text":"x object class \"qcd\". ... Arguments passed methods. var.index scalar column number corresponding observed data variable (variable quality).  Alternativelly can string name quality variable. sample.index scalar column number corresponding index fo group (sample). covar.index Optional. scalar numeric vector column number(s) corresponding covariate(s). Alternativelly can character vector names covariates. covar.names Optional. string vector strings indicating names covariate columns.  valid one column data. default, takes names original object. data.name string specifying name variable appears plots. provided, taken object given data. sizes Optional. value vector values specifying sample sizes associated group. continuous data, sample sizes obtained  counting non-NA elements sample.index vector.  attribute variable argument sizes required. center value specifying center group statistics ''target'' value process. conf.nsigma numeric value used compute control limits, specifying number standard deviations (conf.nsigma > 1) confidence level (0 < conf.nsigma < 1). limits two-values vector specifying control limits. plot Logical value. TRUE u chart plotted.","code":""},{"path":[]},{"path":"https://mflores72000.github.io/qcr/reference/qcs.u.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot Shewhart u chart — qcs.u","text":"","code":"data(pcmanufact) attach(pcmanufact) #> The following objects are masked from orangejuice (pos = 3): #>  #>     sample, size #> The following objects are masked from orangejuice (pos = 4): #>  #>     sample, size #> The following object is masked from pistonrings (pos = 5): #>  #>     sample #> The following object is masked from pistonrings (pos = 6): #>  #>     sample #> The following objects are masked from circuit: #>  #>     sample, size, x #> The following objects are masked from orangejuice (pos = 8): #>  #>     sample, size str(pcmanufact) #> 'data.frame':\t20 obs. of  3 variables: #>  $ x     : int  10 12 8 14 10 16 11 7 10 15 ... #>  $ sample: int  1 2 3 4 5 6 7 8 9 10 ... #>  $ size  : int  5 5 5 5 5 5 5 5 5 5 ... datos <- pcmanufact datos$sample <- 1:length(datos$x) str(datos) #> 'data.frame':\t20 obs. of  3 variables: #>  $ x     : int  10 12 8 14 10 16 11 7 10 15 ... #>  $ sample: int  1 2 3 4 5 6 7 8 9 10 ... #>  $ size  : int  5 5 5 5 5 5 5 5 5 5 ... sizes <- datos[,2]  datos.qcd <- qcd(data = datos, var.index = 1,sample.index = 2,                 sizes = sizes, type.data = \"atributte\")  res.qcs <- qcs.u(datos.qcd) summary(res.qcs) #> u chart for datos  #>  #> Summary of group statistics: #>        u           #>  Min.   : 0.2500   #>  1st Qu.: 0.5215   #>  Median : 0.8466   #>  Mean   : 1.8635   #>  3rd Qu.: 2.1667   #>  Max.   :10.0000   #>  #> Summary of group sample sizes:                                                             #>   sizes  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #>   counts 1 1 1 1 1 1 1 1 1  1  1  1  1  1  1  1  1  1  1  1 #>  #> Number of groups:  20 #> Center of group statistics:  0.9190476 #> Standard deviation:  0.9586697  #>  #> Control limits:  #>          LCL      UCL #>  0.000000000 3.795057 #>  0.000000000 2.952693 #>  0.000000000 2.579512 #>  0.000000000 2.357052 #>  0.000000000 2.205238 #>  0.000000000 2.093173 #>  0.000000000 2.006077 #>  0.000000000 1.935870 #>  0.000000000 1.877717 #>  0.009573674 1.828522 #>  0.051898236 1.786197 #>  0.088815294 1.749280 #>  0.121386202 1.716709 #>  0.150401845 1.687693 #>  0.176465252 1.661630 #>  0.200045334 1.638050 #>  0.221512945 1.616582 #>  0.241165764 1.596929 #>  0.259245872 1.578849 #>  0.275952425 1.562143 #>  #> Beyond limits of control:  #> [1] 10.000000  6.000000  2.666667  3.500000  2.666667  0.250000 #>  #> Violationg runs:  #> [1] 1.5714286 0.4705882 0.5555556 0.3684211 0.2500000 plot(res.qcs)"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.xbar.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot the Shewhart xbar chart — qcs.xbar","title":"Function to plot the Shewhart xbar chart — qcs.xbar","text":"function used compute statistics required xbar chart.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.xbar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot the Shewhart xbar chart — qcs.xbar","text":"","code":"qcs.xbar(x, ...)  # S3 method for default qcs.xbar(   x,   var.index = 1,   sample.index = 2,   covar.index = NULL,   covar.names = NULL,   data.name = NULL,   sizes = NULL,   center = NULL,   std.dev = c(\"UWAVE-R\", \"UWAVE-SD\", \"MVLUE-R\", \"MVLUE-SD\", \"RMSDF\"),   conf.nsigma = 3,   limits = NULL,   plot = FALSE,   ... )  # S3 method for qcd qcs.xbar(   x,   center = NULL,   std.dev = c(\"UWAVE-R\", \"UWAVE-SD\", \"MVLUE-R\", \"MVLUE-SD\", \"RMSDF\"),   conf.nsigma = 3,   limits = NULL,   plot = FALSE,   ... )"},{"path":"https://mflores72000.github.io/qcr/reference/qcs.xbar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot the Shewhart xbar chart — qcs.xbar","text":"x object class \"qcd\" (Quality Control Data). ... Arguments passed methods. var.index scalar column number corresponding observed data variable (variable quality).  Alternativelly can string name quality variable. sample.index scalar column number corresponding index fo group (sample). covar.index Optional. scalar numeric vector column number(s) corresponding covariate(s). Alternativelly can character vector names covariates. covar.names Optional. string vector strings indicating names covariate columns.  valid one column data. default, takes names original object. data.name string specifying name variable appears plots. provided, taken object given data. sizes Optional. value vector values specifying sample sizes associated group. continuous data, sample sizes obtained  counting non-NA elements sample.index vector.  attribute variable argument sizes required. center value specifying center group statistics ''target'' value process. std.dev value available method specifying within-group standard deviation(s) process. Several methods available estimating standard deviation case continuous process variable. conf.nsigma numeric value used compute control limits, specifying number standard deviations (conf.nsigma > 1) confidence level (0 < conf.nsigma < 1). limits two-value vector specifying control limits. plot Logical value. TRUE xbar chart plotted.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.xbar.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Function to plot the Shewhart xbar chart — qcs.xbar","text":"Montgomery, D.C. (2000)","code":""},{"path":"https://mflores72000.github.io/qcr/reference/qcs.xbar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot the Shewhart xbar chart — qcs.xbar","text":"","code":"## ##  Continuous data  ## library(qcr) data(pistonrings) str(pistonrings) #> 'data.frame':\t200 obs. of  3 variables: #>  $ diameter: num  74 74 74 74 74 ... #>  $ sample  : int  1 1 1 1 1 2 2 2 2 2 ... #>  $ trial   : logi  TRUE TRUE TRUE TRUE TRUE TRUE ... pistonrings.qcd<-qcd(pistonrings)  class(pistonrings.qcd) #> [1] \"qcd\"        \"data.frame\"  res.qcs <- qcs.xbar(pistonrings.qcd) plot(res.qcs,title=\"Control Chart Xbar for pistonrings I\")  summary(res.qcs)   #> xbar chart for pistonrings  #>  #> Summary of group statistics: #>       xbar       #>  Min.   :73.99   #>  1st Qu.:74.00   #>  Median :74.00   #>  Mean   :74.00   #>  3rd Qu.:74.01   #>  Max.   :74.02   #>  #> Group sample size:  5 #> Number of groups:  40 #> Center of group statistics:  74.0036 #> Standard deviation:  0.01007094  #>  #> Control limits:  #>       LCL      UCL #>  73.99009 74.01712 #>  #> Beyond limits of control:  #> [1] 74.0196 74.0234 #>  #> Violationg runs:  #> [1] 74.0128  res.qcd <- state.control(res.qcs) res.qcs <- qcs.xbar(res.qcd) plot(res.qcs,title=\"Control Chart Xbar for pistonrings II\")  summary(res.qcs)   #> xbar chart for pistonrings  #>  #> Summary of group statistics: #>       xbar       #>  Min.   :73.99   #>  1st Qu.:74.00   #>  Median :74.00   #>  Mean   :74.00   #>  3rd Qu.:74.01   #>  Max.   :74.02   #>  #> Group sample size:  5 #> Number of groups:  37 #> Center of group statistics:  74.00239 #> Standard deviation:  0.009992796  #>  #> Control limits:  #>       LCL     UCL #>  73.98898 74.0158 #>  #> Beyond limits of control:  #> [1] 74.0166 #>  #> Number violationg runs: 0   res.qcd <- state.control(res.qcs) res.qcs <- qcs.xbar(res.qcd) plot(res.qcs,title=\"Control Chart Xbar for pistonrings III\")  summary(res.qcs)   #> xbar chart for pistonrings  #>  #> Summary of group statistics: #>       xbar       #>  Min.   :73.99   #>  1st Qu.:74.00   #>  Median :74.00   #>  Mean   :74.00   #>  3rd Qu.:74.01   #>  Max.   :74.01   #>  #> Group sample size:  5 #> Number of groups:  36 #> Center of group statistics:  74.00199 #> Standard deviation:  0.01004347  #>  #> Control limits:  #>       LCL      UCL #>  73.98852 74.01547 #>  #> Number beyond limits: 0  #>  #> Number violationg runs: 0   x <- droplevels(pistonrings[1:125,]) y <- droplevels(pistonrings[126:200,])  res.qcs <- qcs.xbar(x, data.name=\"Control Chart Xbar for pistonrings\") plot(res.qcs)   res.qcs <- qcs.add(x = res.qcs, value = y[,c(1,2)])  plot(res.qcs)  summary(res.qcs) #> xbar chart for Control Chart Xbar for pistonrings  #>  #> Summary of group statistics: #>       xbar       #>  Min.   :73.99   #>  1st Qu.:74.00   #>  Median :74.00   #>  Mean   :74.00   #>  3rd Qu.:74.01   #>  Max.   :74.02   #>  #> Group sample size:  5 #> Number of groups:  40 #> Center of group statistics:  74.0036 #> Standard deviation:  0.01007094  #>  #> Control limits:  #>       LCL     UCL #>  73.98805 74.0143 #>  #> Beyond limits of control:  #> [1] 74.0166 74.0196 74.0234 #>  #> Violationg runs:  #> [1] 74.0128   res.qcs <- qcs.xbar(pistonrings.qcd, std.dev=\"UWAVE-SD\") class(res.qcs) #> [1] \"qcs.xbar\" \"qcs\"      plot(res.qcs,title=\"Control Chart Xbar for pistonrings (UWAVE-SD)\")  summary(res.qcs)   #> xbar chart for pistonrings  #>  #> Summary of group statistics: #>       xbar       #>  Min.   :73.99   #>  1st Qu.:74.00   #>  Median :74.00   #>  Mean   :74.00   #>  3rd Qu.:74.01   #>  Max.   :74.02   #>  #> Group sample size:  5 #> Number of groups:  40 #> Center of group statistics:  74.0036 #> Standard deviation:  0.01003811  #>  #> Control limits:  #>       LCL      UCL #>  73.99014 74.01707 #>  #> Beyond limits of control:  #> [1] 74.0196 74.0234 #>  #> Violationg runs:  #> [1] 74.0128"},{"path":"https://mflores72000.github.io/qcr/reference/state.control.html","id":null,"dir":"Reference","previous_headings":"","what":"Univariante process state — state.control","title":"Univariante process state — state.control","text":"function removes observations sample violates  rules process control.","code":""},{"path":"https://mflores72000.github.io/qcr/reference/state.control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Univariante process state — state.control","text":"","code":"state.control(x)"},{"path":"https://mflores72000.github.io/qcr/reference/state.control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Univariante process state — state.control","text":"x Object qcs (Quality Control Statistical)","code":""},{"path":"https://mflores72000.github.io/qcr/reference/state.control.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Univariante process state — state.control","text":"","code":"## ##  Continuous data  ## library(qcr) data(pistonrings) str(pistonrings) #> 'data.frame':\t200 obs. of  3 variables: #>  $ diameter: num  74 74 74 74 74 ... #>  $ sample  : int  1 1 1 1 1 2 2 2 2 2 ... #>  $ trial   : logi  TRUE TRUE TRUE TRUE TRUE TRUE ... pistonrings.qcd<-qcd(pistonrings)  class(pistonrings.qcd) #> [1] \"qcd\"        \"data.frame\"  res.qcs <- qcs.xbar(pistonrings.qcd) plot(res.qcs,title=\"Control Chart Xbar for pistonrings I\")  summary(res.qcs)   #> xbar chart for pistonrings  #>  #> Summary of group statistics: #>       xbar       #>  Min.   :73.99   #>  1st Qu.:74.00   #>  Median :74.00   #>  Mean   :74.00   #>  3rd Qu.:74.01   #>  Max.   :74.02   #>  #> Group sample size:  5 #> Number of groups:  40 #> Center of group statistics:  74.0036 #> Standard deviation:  0.01007094  #>  #> Control limits:  #>       LCL      UCL #>  73.99009 74.01712 #>  #> Beyond limits of control:  #> [1] 74.0196 74.0234 #>  #> Violationg runs:  #> [1] 74.0128  res.qcd <- state.control(res.qcs) res.qcs <- qcs.xbar(res.qcd) plot(res.qcs,title=\"Control Chart Xbar for pistonrings II\")  summary(res.qcs)   #> xbar chart for pistonrings  #>  #> Summary of group statistics: #>       xbar       #>  Min.   :73.99   #>  1st Qu.:74.00   #>  Median :74.00   #>  Mean   :74.00   #>  3rd Qu.:74.01   #>  Max.   :74.02   #>  #> Group sample size:  5 #> Number of groups:  37 #> Center of group statistics:  74.00239 #> Standard deviation:  0.009992796  #>  #> Control limits:  #>       LCL     UCL #>  73.98898 74.0158 #>  #> Beyond limits of control:  #> [1] 74.0166 #>  #> Number violationg runs: 0   res.qcd <- state.control(res.qcs) res.qcs <- qcs.xbar(res.qcd) plot(res.qcs,title=\"Control Chart Xbar for pistonrings III\")  summary(res.qcs)   #> xbar chart for pistonrings  #>  #> Summary of group statistics: #>       xbar       #>  Min.   :73.99   #>  1st Qu.:74.00   #>  Median :74.00   #>  Mean   :74.00   #>  3rd Qu.:74.01   #>  Max.   :74.01   #>  #> Group sample size:  5 #> Number of groups:  36 #> Center of group statistics:  74.00199 #> Standard deviation:  0.01004347  #>  #> Control limits:  #>       LCL      UCL #>  73.98852 74.01547 #>  #> Number beyond limits: 0  #>  #> Number violationg runs: 0"},{"path":"https://mflores72000.github.io/qcr/news/index.html","id":"qcr-14","dir":"Changelog","previous_headings":"","what":"qcr 1.4","title":"qcr 1.4","text":"CRAN release: 2022-03-02 Added website package (pkgdown). Added ‘README.md’, ‘NEWS.md’ ’_pkgdown.yml’. Added vignettes (pkgdown articles):","code":""},{"path":"https://mflores72000.github.io/qcr/news/index.html","id":"qcr-13","dir":"Changelog","previous_headings":"","what":"qcr 1.3","title":"qcr 1.3","text":"CRAN release: 2021-05-14 Avoided dependence qualityTools package removed CRAN (dependencies included internal functions ‘qualityTools.R’).","code":""},{"path":"https://mflores72000.github.io/qcr/news/index.html","id":"qcr-12","dir":"Changelog","previous_headings":"","what":"qcr 1.2","title":"qcr 1.2","text":"CRAN release: 2020-04-21 Added utilities Functional Data Quality Control: fdqcd(), fdqcs.depth(),fdqcs.rank(), plot methods plot.fdqcd(), plot.fdqcs.depth(), plot.fdqcs.rank()","code":""},{"path":"https://mflores72000.github.io/qcr/news/index.html","id":"qcr-10","dir":"Changelog","previous_headings":"","what":"qcr 1.0","title":"qcr 1.0","text":"CRAN release: 2016-07-20 Added utilities nonparametric Quality Control: npqcd(), npqcs(), npqcs.add(), npqcs.Q(), npqcs.r(), npqcs.S(), npstate.control(), plot methods plot.npqcs(), plot.npqcs.Q(), plot.npqcs.r(), plot.npqcs.S(). Added utilities parametric nonparametric Capability Analysis: qcs.ca(), qcs.cp(), qcs.cpn(), qcs.hat.cpm(), qcs.pcr().","code":""},{"path":"https://mflores72000.github.io/qcr/news/index.html","id":"qcr-01-18","dir":"Changelog","previous_headings":"","what":"qcr 0.1-18","title":"qcr 0.1-18","text":"CRAN release: 2014-05-30 Initial version package form.","code":""}]
